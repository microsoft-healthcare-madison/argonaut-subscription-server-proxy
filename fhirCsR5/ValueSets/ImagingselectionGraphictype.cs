// <auto-generated />
// Built from: hl7.fhir.r5.core version: 5.0.0-snapshot1
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// The type of coordinates describing an image region.
  /// </summary>
  public static class ImagingselectionGraphictypeCodes
  {
    /// <summary>
    /// an ellipse defined by four (x,y,z) triplets, the first two triplets specifying the endpoints of the major axis and the second two triplets specifying the endpoints of the minor axis.
    /// </summary>
    public static readonly Coding ELLIPSE = new Coding
    {
      Code = "ELLIPSE",
      Display = "ELLIPSE",
      System = "http://hl7.org/fhir/imagingselection-graphictype"
    };
    /// <summary>
    /// a three-dimensional geometric surface whose plane sections are either ellipses or circles and contains three intersecting orthogonal axes, "a", "b", and "c"; the ellipsoid is defined by six (x,y,z) triplets, the first and second triplets specifying the endpoints of axis "a", the third and fourth triplets specifying the endpoints of axis "b", and the fifth and sixth triplets specifying the endpoints of axis "c".
    /// </summary>
    public static readonly Coding ELLIPSOID = new Coding
    {
      Code = "ELLIPSOID",
      Display = "ELLIPSOID",
      System = "http://hl7.org/fhir/imagingselection-graphictype"
    };
    /// <summary>
    /// multiple locations each denoted by an (x,y,z) triplet; the points need not be coplanar.
    /// </summary>
    public static readonly Coding MULTIPOINT = new Coding
    {
      Code = "MULTIPOINT",
      Display = "MULTIPOINT",
      System = "http://hl7.org/fhir/imagingselection-graphictype"
    };
    /// <summary>
    /// A single location denoted by a single (x,y,z) triplet.
    /// </summary>
    public static readonly Coding POINT = new Coding
    {
      Code = "POINT",
      Display = "POINT",
      System = "http://hl7.org/fhir/imagingselection-graphictype"
    };
    /// <summary>
    /// a series of connected line segments with ordered vertices denoted by (x,y,z) triplets, where the first and last vertices shall be the same forming a polygon; the points shall be coplanar.
    /// </summary>
    public static readonly Coding POLYGON = new Coding
    {
      Code = "POLYGON",
      Display = "POLYGON",
      System = "http://hl7.org/fhir/imagingselection-graphictype"
    };
    /// <summary>
    /// a series of connected line segments with ordered vertices denoted by (x,y,z) triplets; the points need not be coplanar.
    /// </summary>
    public static readonly Coding POLYLINE = new Coding
    {
      Code = "POLYLINE",
      Display = "POLYLINE",
      System = "http://hl7.org/fhir/imagingselection-graphictype"
    };

    /// <summary>
    /// Literal for code: ELLIPSE
    /// </summary>
    public const string LiteralELLIPSE = "ELLIPSE";

    /// <summary>
    /// Literal for code: ImagingselectionGraphictypeELLIPSE
    /// </summary>
    public const string LiteralImagingselectionGraphictypeELLIPSE = "http://hl7.org/fhir/imagingselection-graphictype#ELLIPSE";

    /// <summary>
    /// Literal for code: ELLIPSOID
    /// </summary>
    public const string LiteralELLIPSOID = "ELLIPSOID";

    /// <summary>
    /// Literal for code: ImagingselectionGraphictypeELLIPSOID
    /// </summary>
    public const string LiteralImagingselectionGraphictypeELLIPSOID = "http://hl7.org/fhir/imagingselection-graphictype#ELLIPSOID";

    /// <summary>
    /// Literal for code: MULTIPOINT
    /// </summary>
    public const string LiteralMULTIPOINT = "MULTIPOINT";

    /// <summary>
    /// Literal for code: ImagingselectionGraphictypeMULTIPOINT
    /// </summary>
    public const string LiteralImagingselectionGraphictypeMULTIPOINT = "http://hl7.org/fhir/imagingselection-graphictype#MULTIPOINT";

    /// <summary>
    /// Literal for code: POINT
    /// </summary>
    public const string LiteralPOINT = "POINT";

    /// <summary>
    /// Literal for code: ImagingselectionGraphictypePOINT
    /// </summary>
    public const string LiteralImagingselectionGraphictypePOINT = "http://hl7.org/fhir/imagingselection-graphictype#POINT";

    /// <summary>
    /// Literal for code: POLYGON
    /// </summary>
    public const string LiteralPOLYGON = "POLYGON";

    /// <summary>
    /// Literal for code: ImagingselectionGraphictypePOLYGON
    /// </summary>
    public const string LiteralImagingselectionGraphictypePOLYGON = "http://hl7.org/fhir/imagingselection-graphictype#POLYGON";

    /// <summary>
    /// Literal for code: POLYLINE
    /// </summary>
    public const string LiteralPOLYLINE = "POLYLINE";

    /// <summary>
    /// Literal for code: ImagingselectionGraphictypePOLYLINE
    /// </summary>
    public const string LiteralImagingselectionGraphictypePOLYLINE = "http://hl7.org/fhir/imagingselection-graphictype#POLYLINE";

    /// <summary>
    /// Dictionary for looking up ImagingselectionGraphictype Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "ELLIPSE", ELLIPSE }, 
      { "http://hl7.org/fhir/imagingselection-graphictype#ELLIPSE", ELLIPSE }, 
      { "ELLIPSOID", ELLIPSOID }, 
      { "http://hl7.org/fhir/imagingselection-graphictype#ELLIPSOID", ELLIPSOID }, 
      { "MULTIPOINT", MULTIPOINT }, 
      { "http://hl7.org/fhir/imagingselection-graphictype#MULTIPOINT", MULTIPOINT }, 
      { "POINT", POINT }, 
      { "http://hl7.org/fhir/imagingselection-graphictype#POINT", POINT }, 
      { "POLYGON", POLYGON }, 
      { "http://hl7.org/fhir/imagingselection-graphictype#POLYGON", POLYGON }, 
      { "POLYLINE", POLYLINE }, 
      { "http://hl7.org/fhir/imagingselection-graphictype#POLYLINE", POLYLINE }, 
    };
  };
}
