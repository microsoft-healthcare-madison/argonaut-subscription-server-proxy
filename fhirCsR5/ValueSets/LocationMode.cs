// <auto-generated />
// Built from: hl7.fhir.r5.core version: 4.6.0
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// Indicates whether a resource instance represents a specific location or a class of locations.
  /// </summary>
  public static class LocationModeCodes
  {
    /// <summary>
    /// The Location resource represents a specific instance of a location (e.g. Operating Theatre 1A).
    /// </summary>
    public static readonly Coding Instance = new Coding
    {
      Code = "instance",
      Display = "Instance",
      System = "http://hl7.org/fhir/location-mode"
    };
    /// <summary>
    /// The Location represents a class of locations (e.g. Any Operating Theatre) although this class of locations could be constrained within a specific boundary (such as organization, or parent location, address etc.).
    /// </summary>
    public static readonly Coding Kind = new Coding
    {
      Code = "kind",
      Display = "Kind",
      System = "http://hl7.org/fhir/location-mode"
    };

    /// <summary>
    /// Literal for code: Instance
    /// </summary>
    public const string LiteralInstance = "instance";

    /// <summary>
    /// Literal for code: LocationModeInstance
    /// </summary>
    public const string LiteralLocationModeInstance = "http://hl7.org/fhir/location-mode#instance";

    /// <summary>
    /// Literal for code: Kind
    /// </summary>
    public const string LiteralKind = "kind";

    /// <summary>
    /// Literal for code: LocationModeKind
    /// </summary>
    public const string LiteralLocationModeKind = "http://hl7.org/fhir/location-mode#kind";

    /// <summary>
    /// Dictionary for looking up LocationMode Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "instance", Instance }, 
      { "http://hl7.org/fhir/location-mode#instance", Instance }, 
      { "kind", Kind }, 
      { "http://hl7.org/fhir/location-mode#kind", Kind }, 
    };
  };
}
