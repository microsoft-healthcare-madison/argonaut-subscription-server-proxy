// <auto-generated />
// Built from: hl7.fhir.r5.core version: 5.0.0-snapshot1
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// The current status of the test report.
  /// </summary>
  public static class ReportStatusCodesCodes
  {
    /// <summary>
    /// All test operations have completed.
    /// </summary>
    public static readonly Coding Completed = new Coding
    {
      Code = "completed",
      Display = "Completed",
      System = "http://hl7.org/fhir/report-status-codes"
    };
    /// <summary>
    /// This test report was entered or created in error.
    /// </summary>
    public static readonly Coding EnteredInError = new Coding
    {
      Code = "entered-in-error",
      Display = "Entered In Error",
      System = "http://hl7.org/fhir/report-status-codes"
    };
    /// <summary>
    /// A test operations is currently executing.
    /// </summary>
    public static readonly Coding InProgress = new Coding
    {
      Code = "in-progress",
      Display = "In Progress",
      System = "http://hl7.org/fhir/report-status-codes"
    };
    /// <summary>
    /// The test script execution was manually stopped.
    /// </summary>
    public static readonly Coding Stopped = new Coding
    {
      Code = "stopped",
      Display = "Stopped",
      System = "http://hl7.org/fhir/report-status-codes"
    };
    /// <summary>
    /// A test operation is waiting for an external client request.
    /// </summary>
    public static readonly Coding Waiting = new Coding
    {
      Code = "waiting",
      Display = "Waiting",
      System = "http://hl7.org/fhir/report-status-codes"
    };

    /// <summary>
    /// Literal for code: Completed
    /// </summary>
    public const string LiteralCompleted = "completed";

    /// <summary>
    /// Literal for code: ReportStatusCodesCompleted
    /// </summary>
    public const string LiteralReportStatusCodesCompleted = "http://hl7.org/fhir/report-status-codes#completed";

    /// <summary>
    /// Literal for code: EnteredInError
    /// </summary>
    public const string LiteralEnteredInError = "entered-in-error";

    /// <summary>
    /// Literal for code: ReportStatusCodesEnteredInError
    /// </summary>
    public const string LiteralReportStatusCodesEnteredInError = "http://hl7.org/fhir/report-status-codes#entered-in-error";

    /// <summary>
    /// Literal for code: InProgress
    /// </summary>
    public const string LiteralInProgress = "in-progress";

    /// <summary>
    /// Literal for code: ReportStatusCodesInProgress
    /// </summary>
    public const string LiteralReportStatusCodesInProgress = "http://hl7.org/fhir/report-status-codes#in-progress";

    /// <summary>
    /// Literal for code: Stopped
    /// </summary>
    public const string LiteralStopped = "stopped";

    /// <summary>
    /// Literal for code: ReportStatusCodesStopped
    /// </summary>
    public const string LiteralReportStatusCodesStopped = "http://hl7.org/fhir/report-status-codes#stopped";

    /// <summary>
    /// Literal for code: Waiting
    /// </summary>
    public const string LiteralWaiting = "waiting";

    /// <summary>
    /// Literal for code: ReportStatusCodesWaiting
    /// </summary>
    public const string LiteralReportStatusCodesWaiting = "http://hl7.org/fhir/report-status-codes#waiting";

    /// <summary>
    /// Dictionary for looking up ReportStatusCodes Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "completed", Completed }, 
      { "http://hl7.org/fhir/report-status-codes#completed", Completed }, 
      { "entered-in-error", EnteredInError }, 
      { "http://hl7.org/fhir/report-status-codes#entered-in-error", EnteredInError }, 
      { "in-progress", InProgress }, 
      { "http://hl7.org/fhir/report-status-codes#in-progress", InProgress }, 
      { "stopped", Stopped }, 
      { "http://hl7.org/fhir/report-status-codes#stopped", Stopped }, 
      { "waiting", Waiting }, 
      { "http://hl7.org/fhir/report-status-codes#waiting", Waiting }, 
    };
  };
}
