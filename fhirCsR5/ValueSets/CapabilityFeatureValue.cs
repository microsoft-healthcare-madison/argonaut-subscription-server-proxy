// <auto-generated />
// Built from: hl7.fhir.r5.core version: 4.6.0
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// A vaule for a feature that may be declared in a capability statement
  /// </summary>
  public static class CapabilityFeatureValueCodes
  {
    /// <summary>
    /// The server enforces that references have integrity - e.g. it ensures that references can always be resolved. This is typically the case for clinical record systems, but often not the case for middleware/proxy systems.
    /// </summary>
    public static readonly Coding ReferenceIntegrityEnforced = new Coding
    {
      Code = "enforced",
      Display = "Reference Integrity Enforced",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// Value is false
    /// </summary>
    public static readonly Coding ValueIsFalse = new Coding
    {
      Code = "false",
      Display = "Value is false",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// Conditional reads are supported, with both If-Modified-Since and If-None-Match HTTP Headers.
    /// </summary>
    public static readonly Coding FullSupport = new Coding
    {
      Code = "full-support",
      Display = "Full Support",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// The server supports and populates Literal references (i.e. using Reference.reference) where they are known (this code does not guarantee that all references are literal; see 'enforced').
    /// </summary>
    public static readonly Coding LiteralReferences = new Coding
    {
      Code = "literal",
      Display = "Literal References",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// The server does not support references that point to other servers.
    /// </summary>
    public static readonly Coding LocalReferencesOnly = new Coding
    {
      Code = "local",
      Display = "Local References Only",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// The server allows logical references (i.e. using Reference.identifier).
    /// </summary>
    public static readonly Coding LogicalReferences = new Coding
    {
      Code = "logical",
      Display = "Logical References",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// Conditional reads are supported, but only with the If-Modified-Since HTTP Header.
    /// </summary>
    public static readonly Coding IfModifiedSince = new Coding
    {
      Code = "modified-since",
      Display = "If-Modified-Since",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// Conditional deletes are supported, and multiple resources can be deleted in a single interaction.
    /// </summary>
    public static readonly Coding MultipleDeletesSupported = new Coding
    {
      Code = "multiple",
      Display = "Multiple Deletes Supported",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// No VersionId Support
    /// </summary>
    public static readonly Coding NoVersionIdSupport = new Coding
    {
      Code = "no-version",
      Display = "No VersionId Support",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// Conditional reads are supported, but only with the If-None-Match HTTP Header.
    /// </summary>
    public static readonly Coding IfNoneMatch = new Coding
    {
      Code = "not-match",
      Display = "If-None-Match",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// No support for conditional reads.
    /// </summary>
    public static readonly Coding NotSupported = new Coding
    {
      Code = "not-supported",
      Display = "Not Supported",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// The server will attempt to resolve logical references to literal references - i.e. converting Reference.identifier to Reference.reference (if resolution fails, the server may still accept resources; see logical).
    /// </summary>
    public static readonly Coding ResolvesReferences = new Coding
    {
      Code = "resolves",
      Display = "Resolves References",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// Conditional deletes are supported, but only single resources at a time.
    /// </summary>
    public static readonly Coding SingleDeletesSupported = new Coding
    {
      Code = "single",
      Display = "Single Deletes Supported",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// Value is true
    /// </summary>
    public static readonly Coding ValueIsTrue = new Coding
    {
      Code = "true",
      Display = "Value is true",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// Versioned
    /// </summary>
    public static readonly Coding Versioned = new Coding
    {
      Code = "versioned",
      Display = "Versioned",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };
    /// <summary>
    /// VersionId tracked fully
    /// </summary>
    public static readonly Coding VersionIdTrackedFully = new Coding
    {
      Code = "versioned-update",
      Display = "VersionId tracked fully",
      System = "http://hl7.org/fhir/CodeSystem/capability-features"
    };

    /// <summary>
    /// Literal for code: ReferenceIntegrityEnforced
    /// </summary>
    public const string LiteralReferenceIntegrityEnforced = "enforced";

    /// <summary>
    /// Literal for code: CapabilityFeaturesReferenceIntegrityEnforced
    /// </summary>
    public const string LiteralCapabilityFeaturesReferenceIntegrityEnforced = "http://hl7.org/fhir/CodeSystem/capability-features#enforced";

    /// <summary>
    /// Literal for code: ValueIsFalse
    /// </summary>
    public const string LiteralValueIsFalse = "false";

    /// <summary>
    /// Literal for code: CapabilityFeaturesValueIsFalse
    /// </summary>
    public const string LiteralCapabilityFeaturesValueIsFalse = "http://hl7.org/fhir/CodeSystem/capability-features#false";

    /// <summary>
    /// Literal for code: FullSupport
    /// </summary>
    public const string LiteralFullSupport = "full-support";

    /// <summary>
    /// Literal for code: CapabilityFeaturesFullSupport
    /// </summary>
    public const string LiteralCapabilityFeaturesFullSupport = "http://hl7.org/fhir/CodeSystem/capability-features#full-support";

    /// <summary>
    /// Literal for code: LiteralReferences
    /// </summary>
    public const string LiteralLiteralReferences = "literal";

    /// <summary>
    /// Literal for code: CapabilityFeaturesLiteralReferences
    /// </summary>
    public const string LiteralCapabilityFeaturesLiteralReferences = "http://hl7.org/fhir/CodeSystem/capability-features#literal";

    /// <summary>
    /// Literal for code: LocalReferencesOnly
    /// </summary>
    public const string LiteralLocalReferencesOnly = "local";

    /// <summary>
    /// Literal for code: CapabilityFeaturesLocalReferencesOnly
    /// </summary>
    public const string LiteralCapabilityFeaturesLocalReferencesOnly = "http://hl7.org/fhir/CodeSystem/capability-features#local";

    /// <summary>
    /// Literal for code: LogicalReferences
    /// </summary>
    public const string LiteralLogicalReferences = "logical";

    /// <summary>
    /// Literal for code: CapabilityFeaturesLogicalReferences
    /// </summary>
    public const string LiteralCapabilityFeaturesLogicalReferences = "http://hl7.org/fhir/CodeSystem/capability-features#logical";

    /// <summary>
    /// Literal for code: IfModifiedSince
    /// </summary>
    public const string LiteralIfModifiedSince = "modified-since";

    /// <summary>
    /// Literal for code: CapabilityFeaturesIfModifiedSince
    /// </summary>
    public const string LiteralCapabilityFeaturesIfModifiedSince = "http://hl7.org/fhir/CodeSystem/capability-features#modified-since";

    /// <summary>
    /// Literal for code: MultipleDeletesSupported
    /// </summary>
    public const string LiteralMultipleDeletesSupported = "multiple";

    /// <summary>
    /// Literal for code: CapabilityFeaturesMultipleDeletesSupported
    /// </summary>
    public const string LiteralCapabilityFeaturesMultipleDeletesSupported = "http://hl7.org/fhir/CodeSystem/capability-features#multiple";

    /// <summary>
    /// Literal for code: NoVersionIdSupport
    /// </summary>
    public const string LiteralNoVersionIdSupport = "no-version";

    /// <summary>
    /// Literal for code: CodeSystemCapabilityFeaturesNoVersionIdSupport
    /// </summary>
    public const string LiteralCodeSystemCapabilityFeaturesNoVersionIdSupport = "http://hl7.org/fhir/CodeSystem/capability-features#no-version";

    /// <summary>
    /// Literal for code: IfNoneMatch
    /// </summary>
    public const string LiteralIfNoneMatch = "not-match";

    /// <summary>
    /// Literal for code: CapabilityFeaturesIfNoneMatch
    /// </summary>
    public const string LiteralCapabilityFeaturesIfNoneMatch = "http://hl7.org/fhir/CodeSystem/capability-features#not-match";

    /// <summary>
    /// Literal for code: NotSupported
    /// </summary>
    public const string LiteralNotSupported = "not-supported";

    /// <summary>
    /// Literal for code: CapabilityFeaturesNotSupported
    /// </summary>
    public const string LiteralCapabilityFeaturesNotSupported = "http://hl7.org/fhir/CodeSystem/capability-features#not-supported";

    /// <summary>
    /// Literal for code: ResolvesReferences
    /// </summary>
    public const string LiteralResolvesReferences = "resolves";

    /// <summary>
    /// Literal for code: CapabilityFeaturesResolvesReferences
    /// </summary>
    public const string LiteralCapabilityFeaturesResolvesReferences = "http://hl7.org/fhir/CodeSystem/capability-features#resolves";

    /// <summary>
    /// Literal for code: SingleDeletesSupported
    /// </summary>
    public const string LiteralSingleDeletesSupported = "single";

    /// <summary>
    /// Literal for code: CapabilityFeaturesSingleDeletesSupported
    /// </summary>
    public const string LiteralCapabilityFeaturesSingleDeletesSupported = "http://hl7.org/fhir/CodeSystem/capability-features#single";

    /// <summary>
    /// Literal for code: ValueIsTrue
    /// </summary>
    public const string LiteralValueIsTrue = "true";

    /// <summary>
    /// Literal for code: CapabilityFeaturesValueIsTrue
    /// </summary>
    public const string LiteralCapabilityFeaturesValueIsTrue = "http://hl7.org/fhir/CodeSystem/capability-features#true";

    /// <summary>
    /// Literal for code: Versioned
    /// </summary>
    public const string LiteralVersioned = "versioned";

    /// <summary>
    /// Literal for code: CodeSystemCapabilityFeaturesVersioned
    /// </summary>
    public const string LiteralCodeSystemCapabilityFeaturesVersioned = "http://hl7.org/fhir/CodeSystem/capability-features#versioned";

    /// <summary>
    /// Literal for code: VersionIdTrackedFully
    /// </summary>
    public const string LiteralVersionIdTrackedFully = "versioned-update";

    /// <summary>
    /// Literal for code: CodeSystemCapabilityFeaturesVersionIdTrackedFully
    /// </summary>
    public const string LiteralCodeSystemCapabilityFeaturesVersionIdTrackedFully = "http://hl7.org/fhir/CodeSystem/capability-features#versioned-update";

    /// <summary>
    /// Dictionary for looking up CapabilityFeatureValue Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "enforced", ReferenceIntegrityEnforced }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#enforced", ReferenceIntegrityEnforced }, 
      { "false", ValueIsFalse }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#false", ValueIsFalse }, 
      { "full-support", FullSupport }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#full-support", FullSupport }, 
      { "literal", LiteralReferences }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#literal", LiteralReferences }, 
      { "local", LocalReferencesOnly }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#local", LocalReferencesOnly }, 
      { "logical", LogicalReferences }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#logical", LogicalReferences }, 
      { "modified-since", IfModifiedSince }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#modified-since", IfModifiedSince }, 
      { "multiple", MultipleDeletesSupported }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#multiple", MultipleDeletesSupported }, 
      { "no-version", NoVersionIdSupport }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#no-version", NoVersionIdSupport }, 
      { "not-match", IfNoneMatch }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#not-match", IfNoneMatch }, 
      { "not-supported", NotSupported }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#not-supported", NotSupported }, 
      { "resolves", ResolvesReferences }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#resolves", ResolvesReferences }, 
      { "single", SingleDeletesSupported }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#single", SingleDeletesSupported }, 
      { "true", ValueIsTrue }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#true", ValueIsTrue }, 
      { "versioned", Versioned }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#versioned", Versioned }, 
      { "versioned-update", VersionIdTrackedFully }, 
      { "http://hl7.org/fhir/CodeSystem/capability-features#versioned-update", VersionIdTrackedFully }, 
    };
  };
}
