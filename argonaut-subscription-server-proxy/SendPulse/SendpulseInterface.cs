// <auto-generated>
// <copyright file="SendpulseInterface.cs" company="Microsoft Corporation">
//     Copyright (c) Microsoft Corporation. All rights reserved.
//     Licensed under the MIT License (MIT). See LICENSE in the repo root for license information.
// </copyright>
using System.Collections.Generic;

namespace argonaut_subscription_server_proxy.SendPulse
{
    interface SendpulseInterface
    {
        /// <summary>List address books.</summary>
        /// <param name="limit"> The limit.</param>
        /// <param name="offset">The offset.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> ListAddressBooks(int limit, int offset);

        /// <summary>Gets book information.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>The book information.</returns>
        Dictionary<string, object> GetBookInfo(int id);

        /// <summary>Gets emails from book.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>The emails from book.</returns>
        Dictionary<string, object> GetEmailsFromBook(int id);

        /// <summary>Removes the address book described by ID.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> RemoveAddressBook(int id);

        /// <summary>Edit address book.</summary>
        /// <param name="id">     The identifier.</param>
        /// <param name="newname">The newname.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> EditAddressBook(int id, string newname);

        /// <summary>Creates address book.</summary>
        /// <param name="bookName">Name of the book.</param>
        /// <returns>The new address book.</returns>
        Dictionary<string, object> CreateAddressBook(string bookName);

        /// <summary>Adds the emails to 'emails'.</summary>
        /// <param name="bookId">Identifier for the book.</param>
        /// <param name="emails">The emails.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> AddEmails(int bookId, string emails);

        /// <summary>Removes the emails.</summary>
        /// <param name="bookId">Identifier for the book.</param>
        /// <param name="emails">The emails.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> RemoveEmails(int bookId, string emails);

        /// <summary>Gets email information.</summary>
        /// <param name="bookId">Identifier for the book.</param>
        /// <param name="email"> The email.</param>
        /// <returns>The email information.</returns>
        Dictionary<string, object> GetEmailInfo(int bookId, string email);

        /// <summary>Campaign cost.</summary>
        /// <param name="bookId">Identifier for the book.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> CampaignCost(int bookId);

        /// <summary>List campaigns.</summary>
        /// <param name="limit"> The limit.</param>
        /// <param name="offset">The offset.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> ListCampaigns(int limit, int offset);

        /// <summary>Gets campaign information.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>The campaign information.</returns>
        Dictionary<string, object> GetCampaignInfo(int id);

        /// <summary>Campaign stat by countries.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> CampaignStatByCountries(int id);

        /// <summary>Campaign stat by referrals.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> CampaignStatByReferrals(int id);

        /// <summary>Creates a campaign.</summary>
        /// <param name="senderName"> Name of the sender.</param>
        /// <param name="senderEmail">The sender email.</param>
        /// <param name="subject">    The subject.</param>
        /// <param name="body">       The body.</param>
        /// <param name="bookId">     Identifier for the book.</param>
        /// <param name="name">       The name.</param>
        /// <param name="send_date">  (Optional) The send date.</param>
        /// <param name="attachments">(Optional) The attachments.</param>
        /// <returns>The new campaign.</returns>
        Dictionary<string, object> CreateCampaign(string senderName, string senderEmail, string subject, string body, int bookId, string name, string send_date = "", string attachments = "");

        /// <summary>Cancel campaign.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> CancelCampaign(int id);

        /// <summary>List senders.</summary>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> ListSenders();

        /// <summary>Adds a sender to 'senderEmail'.</summary>
        /// <param name="senderName"> Name of the sender.</param>
        /// <param name="senderEmail">The sender email.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> AddSender(string senderName, string senderEmail);

        /// <summary>Removes the sender described by email.</summary>
        /// <param name="email">The email.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> removeSender(string email);

        /// <summary>Activates the sender.</summary>
        /// <param name="email">The email.</param>
        /// <param name="code"> The code.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> activateSender(string email, string code);

        /// <summary>Gets sender activation mail.</summary>
        /// <param name="email">The email.</param>
        /// <returns>The sender activation mail.</returns>
        Dictionary<string, object> getSenderActivationMail(string email);

        /// <summary>Gets email global information.</summary>
        /// <param name="email">The email.</param>
        /// <returns>The email global information.</returns>
        Dictionary<string, object> getEmailGlobalInfo(string email);

        /// <summary>Removes the email from all books described by email.</summary>
        /// <param name="email">The email.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> removeEmailFromAllBooks(string email);

        /// <summary>Email stat by campaigns.</summary>
        /// <param name="email">The email.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> emailStatByCampaigns(string email);

        /// <summary>Gets black list.</summary>
        /// <returns>The black list.</returns>
        Dictionary<string, object> getBlackList();

        /// <summary>Adds to the black list.</summary>
        /// <param name="emails">The emails.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> addToBlackList(string emails);

        /// <summary>Removes from black list described by emails.</summary>
        /// <param name="emails">The emails.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> removeFromBlackList(string emails);

        /// <summary>Gets a balance.</summary>
        /// <param name="currency">The currency.</param>
        /// <returns>The balance.</returns>
        Dictionary<string, object> getBalance(string currency);

        /// <summary>SMTP send mail.</summary>
        /// <param name="emaildata">The emaildata.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> smtpSendMail(Dictionary<string, object> emaildata);

        /// <summary>SMTP list emails.</summary>
        /// <param name="limit">    The limit.</param>
        /// <param name="offset">   The offset.</param>
        /// <param name="fromDate"> from date.</param>
        /// <param name="toDate">   to date.</param>
        /// <param name="sender">   The sender.</param>
        /// <param name="recipient">The recipient.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> smtpListEmails(int limit, int offset, string fromDate, string toDate, string sender, string recipient);

        /// <summary>SMTP get email information by identifier.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> smtpGetEmailInfoById(string id);

        /// <summary>SMTP unsubscribe emails.</summary>
        /// <param name="emails">The emails.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> smtpUnsubscribeEmails(string emails);

        /// <summary>SMTP remove from unsubscribe.</summary>
        /// <param name="emails">The emails.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> smtpRemoveFromUnsubscribe(string emails);

        /// <summary>SMTP list IP.</summary>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> smtpListIP();

        /// <summary>SMTP list allowed domains.</summary>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> smtpListAllowedDomains();

        /// <summary>SMTP add domain.</summary>
        /// <param name="email">The email.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> smtpAddDomain(string email);

        /// <summary>SMTP verify domain.</summary>
        /// <param name="email">The email.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> smtpVerifyDomain(string email);

        /// <summary>Pushes a list campaigns.</summary>
        /// <param name="limit"> The limit.</param>
        /// <param name="offset">The offset.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> pushListCampaigns(int limit, int offset);

        /// <summary>Pushes a campaign information.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> pushCampaignInfo(int id);

        /// <summary>Pushes the count websites.</summary>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> pushCountWebsites();

        /// <summary>Pushes a list websites.</summary>
        /// <param name="limit"> The limit.</param>
        /// <param name="offset">The offset.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> pushListWebsites(int limit, int offset);

        /// <summary>Pushes a list website variables.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> pushListWebsiteVariables(int id);

        /// <summary>Pushes a list website subscriptions.</summary>
        /// <param name="id">    The identifier.</param>
        /// <param name="limit"> The limit.</param>
        /// <param name="offset">The offset.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> pushListWebsiteSubscriptions(int id, int limit, int offset);

        /// <summary>Pushes a count website subscriptions.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> pushCountWebsiteSubscriptions(int id);

        /// <summary>Pushes a set subscription state.</summary>
        /// <param name="id">   The identifier.</param>
        /// <param name="state">The state.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> pushSetSubscriptionState(int id, int state);

        /// <summary>Creates push task.</summary>
        /// <param name="taskinfo">        The taskinfo.</param>
        /// <param name="additionalParams">Options for controlling the additional.</param>
        /// <returns>The new push task.</returns>
        Dictionary<string, object> createPushTask(Dictionary<string, object> taskinfo, Dictionary<string, object> additionalParams);

        /// <summary>Adds the phones to 'phones'.</summary>
        /// <param name="bookId">Identifier for the book.</param>
        /// <param name="phones">The phones.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> addPhones(int bookId, string phones);

        /// <summary>Removes the phones.</summary>
        /// <param name="bookId">Identifier for the book.</param>
        /// <param name="phones">The phones.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> removePhones(int bookId, string phones);

        /// <summary>Updates the phones.</summary>
        /// <param name="bookId">   Identifier for the book.</param>
        /// <param name="phones">   The phones.</param>
        /// <param name="variables">The variables.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> updatePhones(int bookId, string phones, string variables);

        /// <summary>Gets phone information.</summary>
        /// <param name="bookId">     Identifier for the book.</param>
        /// <param name="phoneNumber">The phone number.</param>
        /// <returns>The phone information.</returns>
        Dictionary<string, object> getPhoneInfo(int bookId, string phoneNumber);

        /// <summary>Adds the phones to black list to 'description'.</summary>
        /// <param name="phones">     The phones.</param>
        /// <param name="description">The description.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> addPhonesToBlackList(string phones, string description);

        /// <summary>Removes the phones from black list described by phones.</summary>
        /// <param name="phones">The phones.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> removePhonesFromBlackList(string phones);

        /// <summary>Gets black list phones.</summary>
        /// <returns>The black list phones.</returns>
        Dictionary<string, object> getBlackListPhones();

        /// <summary>Gets phones information in black list.</summary>
        /// <param name="phones">The phones.</param>
        /// <returns>The phones information in black list.</returns>
        Dictionary<string, object> getPhonesInfoInBlackList(string phones);

        /// <summary>Sends the SMS campaign.</summary>
        /// <param name="bookId">       Identifier for the book.</param>
        /// <param name="body">         The body.</param>
        /// <param name="transliterate">(Optional) The transliterate.</param>
        /// <param name="sender">       (Optional) The sender.</param>
        /// <param name="date">         (Optional) The date.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> sendSmsCampaign(int bookId, string body, int transliterate = 1, string sender = "", string date = "");

        /// <summary>Sends the SMS campaign by phones.</summary>
        /// <param name="phones">       The phones.</param>
        /// <param name="body">         The body.</param>
        /// <param name="transliterate">(Optional) The transliterate.</param>
        /// <param name="sender">       (Optional) The sender.</param>
        /// <param name="date">         (Optional) The date.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> sendSmsCampaignByPhones(string phones, string body, int transliterate = 1, string sender = "", string date = "");

        /// <summary>Gets SMS campaigns list.</summary>
        /// <param name="dateFrom">The date from.</param>
        /// <param name="dateTo">  The date to.</param>
        /// <returns>The SMS campaigns list.</returns>
        Dictionary<string, object> getSmsCampaignsList(string dateFrom, string dateTo);

        /// <summary>Gets SMS campaign information.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>The SMS campaign information.</returns>
        Dictionary<string, object> getSmsCampaignInfo(int id);

        /// <summary>Cancel SMS campaign.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> cancelSmsCampaign(int id);

        /// <summary>Gets SMS campaign cost.</summary>
        /// <param name="body">         The body.</param>
        /// <param name="sender">       The sender.</param>
        /// <param name="addressBookId">(Optional) Identifier for the address book.</param>
        /// <param name="phones">       (Optional) The phones.</param>
        /// <returns>The SMS campaign cost.</returns>
        Dictionary<string, object> getSmsCampaignCost(string body, string sender, int addressBookId = 0, string phones = "");

        /// <summary>Deletes the SMS campaign described by ID.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> deleteSmsCampaign(int id);

        /// <summary>Adds the phones to addreess book to 'phones'.</summary>
        /// <param name="addressBookId">Identifier for the address book.</param>
        /// <param name="phones">       The phones.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> addPhonesToAddreessBook(int addressBookId, string phones);

        /// <summary>Sends a viber campaign.</summary>
        /// <param name="recipients">     The recipients.</param>
        /// <param name="addressBookId">  Identifier for the address book.</param>
        /// <param name="message">        The message.</param>
        /// <param name="senderId">       Identifier for the sender.</param>
        /// <param name="additional">     The additional.</param>
        /// <param name="messageLiveTime">(Optional) The message live time.</param>
        /// <param name="sendDate">       (Optional) The send date.</param>
        /// <returns>A Dictionary&lt;string,object&gt;</returns>
        Dictionary<string, object> sendViberCampaign(string recipients, int addressBookId, string message, int senderId, string additional, int messageLiveTime = 60, string sendDate = "now");

        /// <summary>Gets viber senders.</summary>
        /// <returns>The viber senders.</returns>
        Dictionary<string, object> getViberSenders();

        /// <summary>Gets viber tasks list.</summary>
        /// <param name="limit"> (Optional) The limit.</param>
        /// <param name="offset">(Optional) The offset.</param>
        /// <returns>The viber tasks list.</returns>
        Dictionary<string, object> getViberTasksList(int limit = 100, int offset = 0);

        /// <summary>Gets viber campaign stat.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>The viber campaign stat.</returns>
        Dictionary<string, object> getViberCampaignStat(int id);

        /// <summary>Gets viber sender.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>The viber sender.</returns>
        Dictionary<string, object> getViberSender(int id);

        /// <summary>Gets viber task recipients.</summary>
        /// <param name="id">The identifier.</param>
        /// <returns>The viber task recipients.</returns>
        Dictionary<string, object> getViberTaskRecipients(int id);
    }
}
