// <auto-generated />
// Built from: hl7.fhir.r5.core version: 4.6.0
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// Description Needed Here
  /// </summary>
  public static class ResourceValidationModeCodes
  {
    /// <summary>
    /// The server checks the content, and then checks that the content would be acceptable as a create (e.g. that the content would not violate any uniqueness constraints).
    /// </summary>
    public static readonly Coding ValidateForCreate = new Coding
    {
      Code = "create",
      Display = "Validate for Create",
      System = "http://hl7.org/fhir/resource-validation-mode"
    };
    /// <summary>
    /// The server ignores the content and checks that the nominated resource is allowed to be deleted (e.g. checking referential integrity rules).
    /// </summary>
    public static readonly Coding ValidateForDelete = new Coding
    {
      Code = "delete",
      Display = "Validate for Delete",
      System = "http://hl7.org/fhir/resource-validation-mode"
    };
    /// <summary>
    /// The server checks an existing resource (must be nominated by id, not provided as a parameter) as valid against the nominated profile.
    /// </summary>
    public static readonly Coding ValidateAgainstAProfile = new Coding
    {
      Code = "profile",
      Display = "Validate Against a Profile",
      System = "http://hl7.org/fhir/resource-validation-mode"
    };
    /// <summary>
    /// The server checks the content, and then checks that it would accept it as an update against the nominated specific resource (e.g. that there are no changes to immutable fields the server does not allow to change and checking version integrity if appropriate).
    /// </summary>
    public static readonly Coding ValidateForUpdate = new Coding
    {
      Code = "update",
      Display = "Validate for Update",
      System = "http://hl7.org/fhir/resource-validation-mode"
    };

    /// <summary>
    /// Literal for code: ValidateForCreate
    /// </summary>
    public const string LiteralValidateForCreate = "create";

    /// <summary>
    /// Literal for code: ValidateForDelete
    /// </summary>
    public const string LiteralValidateForDelete = "delete";

    /// <summary>
    /// Literal for code: ValidateAgainstAProfile
    /// </summary>
    public const string LiteralValidateAgainstAProfile = "profile";

    /// <summary>
    /// Literal for code: ValidateForUpdate
    /// </summary>
    public const string LiteralValidateForUpdate = "update";
  };
}
