// <auto-generated />
// Built from: hl7.fhir.r5.core version: 4.6.0
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// Event Types for Audit Events - defined by DICOM with some FHIR specific additions.
  /// </summary>
  public static class AuditEventTypeCodes
  {
    /// <summary>
    /// A signal transmitted for the purpose of interchange of the current time, not specific to any source or methodology
    /// </summary>
    public static readonly Coding DigitalTimecodeNOS = new Coding
    {
      Code = "109001",
      Display = "Digital timecode (NOS)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A signal that is generated for each detection of a heart beat
    /// </summary>
    public static readonly Coding ECGBasedGatingSignalProcessed = new Coding
    {
      Code = "109002",
      Display = "ECG-based gating signal, processed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A signal transmitted by the Inter-Range Instrumentation Group for the purpose of synchronizing time clocks
    /// </summary>
    public static readonly Coding IRIGBTimecode = new Coding
    {
      Code = "109003",
      Display = "IRIG-B timecode",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A signal that indicated that X-Ray source has been activated for fluoroscopy use
    /// </summary>
    public static readonly Coding XRayFluoroscopyOnSignal = new Coding
    {
      Code = "109004",
      Display = "X-Ray Fluoroscopy On Signal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A signal that indicated that the X-Ray source has been activated for image recording
    /// </summary>
    public static readonly Coding XRayOnTrigger = new Coding
    {
      Code = "109005",
      Display = "X-Ray On Trigger",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An electrical signal derived from two electrodes
    /// </summary>
    public static readonly Coding DifferentialSignal = new Coding
    {
      Code = "109006",
      Display = "Differential signal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An electrophysiological recording from the HIS nerve bundle
    /// </summary>
    public static readonly Coding HisBundleElectrogram = new Coding
    {
      Code = "109007",
      Display = "His bundle electrogram",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An electrical signal from one electrode relative to an indifferent potential
    /// </summary>
    public static readonly Coding MonopoleSignal = new Coding
    {
      Code = "109008",
      Display = "Monopole signal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The voltage stimulus during cardiac pacing
    /// </summary>
    public static readonly Coding PacingElectricalStimulusVoltage = new Coding
    {
      Code = "109009",
      Display = "Pacing (electrical) stimulus, voltage",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The power injected during RF ablation procedure
    /// </summary>
    public static readonly Coding RadioFrequencyAblationPower = new Coding
    {
      Code = "109010",
      Display = "Radio frequency ablation, power",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Electrophysiological signals acquired using a multi-splined catheter each equipped with multiple electrodes
    /// </summary>
    public static readonly Coding VoltageMeasurementByBasketCatheter = new Coding
    {
      Code = "109011",
      Display = "Voltage measurement by basket catheter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Electrophysiological signals acquired using a steerable catheter
    /// </summary>
    public static readonly Coding VoltageMeasurementByMappingCatheter = new Coding
    {
      Code = "109012",
      Display = "Voltage measurement by mapping catheter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A voltage measurement not otherwise specified
    /// </summary>
    public static readonly Coding VoltageMeasurementNOS = new Coding
    {
      Code = "109013",
      Display = "Voltage measurement, NOS",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A signal point that is 35% of the peak thermal cardiac output signal
    /// </summary>
    public static readonly Coding VAL35PercentOfThermalCO = new Coding
    {
      Code = "109014",
      Display = "35% of thermal CO",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A signal point that is 70% of the peak thermal cardiac output signal
    /// </summary>
    public static readonly Coding VAL70PercentOfThermalCO = new Coding
    {
      Code = "109015",
      Display = "70% of thermal CO",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The peak pressure of each heart beat in the atrium caused by the atrial contraction
    /// </summary>
    public static readonly Coding AWavePeakPressure = new Coding
    {
      Code = "109016",
      Display = "A wave peak pressure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The average of several A wave pressure measurements
    /// </summary>
    public static readonly Coding AWavePressureAverage = new Coding
    {
      Code = "109017",
      Display = "A wave pressure, average",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An identified cardiac beat used in the determination of a measurement
    /// </summary>
    public static readonly Coding BeatDetectedAccepted = new Coding
    {
      Code = "109018",
      Display = "Beat detected (accepted)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An identified cardiac beat not used in the determination of a measurement
    /// </summary>
    public static readonly Coding BeatDetectedRejected = new Coding
    {
      Code = "109019",
      Display = "Beat detected (rejected)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The moment at the end of respiratory expiration
    /// </summary>
    public static readonly Coding EndOfExpiration = new Coding
    {
      Code = "109023",
      Display = "End of expiration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The moment at the end of respiratory inspiration
    /// </summary>
    public static readonly Coding EndOfInspiration = new Coding
    {
      Code = "109024",
      Display = "End of inspiration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The maximum positive rate of change of pressure
    /// </summary>
    public static readonly Coding MaxDpDt = new Coding
    {
      Code = "109025",
      Display = "Max dp/dt",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The maximum negative rate of change of pressure
    /// </summary>
    public static readonly Coding MaxNegDpDt = new Coding
    {
      Code = "109026",
      Display = "Max neg dp/dt",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The peak change in blood temperature during a thermal cardiac output measurement
    /// </summary>
    public static readonly Coding PeakOfThermalCardiacOutputBolus = new Coding
    {
      Code = "109028",
      Display = "Peak of thermal cardiac output bolus",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The moment respiratory expiration begins
    /// </summary>
    public static readonly Coding StartOfExpiration = new Coding
    {
      Code = "109029",
      Display = "Start of expiration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The moment of respiratory inspiration begins
    /// </summary>
    public static readonly Coding StartOfInspiration = new Coding
    {
      Code = "109030",
      Display = "Start of inspiration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The first discernible blood temperature change following the injectate during a thermal cardiac output measurement
    /// </summary>
    public static readonly Coding StartOfThermalCardiacOutputBolus = new Coding
    {
      Code = "109031",
      Display = "Start of thermal cardiac output bolus",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The peak pressure of each heart beat in the atrium caused by the filling of the atrium
    /// </summary>
    public static readonly Coding VWavePeakPressure = new Coding
    {
      Code = "109034",
      Display = "V wave peak pressure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The average of several V wave pressure measurements
    /// </summary>
    public static readonly Coding VWavePressureAverage = new Coding
    {
      Code = "109035",
      Display = "V wave pressure, average",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The moment at which a heart valve closes
    /// </summary>
    public static readonly Coding ValveClose = new Coding
    {
      Code = "109036",
      Display = "Valve close",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The moment at which a heart valve opens
    /// </summary>
    public static readonly Coding ValveOpen = new Coding
    {
      Code = "109037",
      Display = "Valve open",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The moment when RF ablation current is turned off
    /// </summary>
    public static readonly Coding AblationOff = new Coding
    {
      Code = "109038",
      Display = "Ablation off",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The moment when RF ablation current is turned on
    /// </summary>
    public static readonly Coding AblationOn = new Coding
    {
      Code = "109039",
      Display = "Ablation on",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The moment in the cardiac cycle when the HIS bundle nerves depolarize
    /// </summary>
    public static readonly Coding HISBundleWave = new Coding
    {
      Code = "109040",
      Display = "HIS bundle wave",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The surface electrocardiogram of the atrial contraction
    /// </summary>
    public static readonly Coding PWave = new Coding
    {
      Code = "109041",
      Display = "P wave",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The first negative deflection of the electrocardiogram caused by ventricular depolarization
    /// </summary>
    public static readonly Coding QWave = new Coding
    {
      Code = "109042",
      Display = "Q wave",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The first positive deflection the electrocardiogram caused by ventricular depolarization
    /// </summary>
    public static readonly Coding RWave = new Coding
    {
      Code = "109043",
      Display = "R wave",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The first negative deflection after the R wave
    /// </summary>
    public static readonly Coding SWave = new Coding
    {
      Code = "109044",
      Display = "S wave",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The beginning of the atrial contraction
    /// </summary>
    public static readonly Coding StartOfAtrialContraction = new Coding
    {
      Code = "109045",
      Display = "Start of atrial contraction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The beginning of the second atrial contraction of two consecutive beats
    /// </summary>
    public static readonly Coding StartOfAtrialContractionSubsequent = new Coding
    {
      Code = "109046",
      Display = "Start of atrial contraction (subsequent)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The stimulation interval during cardiac stimulation first used in a pacing train
    /// </summary>
    public static readonly Coding StimulationAtRate1Interval = new Coding
    {
      Code = "109047",
      Display = "Stimulation at rate 1 interval",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The stimulation interval different from the first stimulation interval used in a pacing train
    /// </summary>
    public static readonly Coding StimulationAtRate2Interval = new Coding
    {
      Code = "109048",
      Display = "Stimulation at rate 2 interval",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A stimulation interval different from and subsequent to the second interval in a pacing train
    /// </summary>
    public static readonly Coding StimulationAtRate3Interval = new Coding
    {
      Code = "109049",
      Display = "Stimulation at rate 3 interval",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Describes a stimulation interval different from and subsequent to the third interval in a pacing train
    /// </summary>
    public static readonly Coding StimulationAtRate4Interval = new Coding
    {
      Code = "109050",
      Display = "Stimulation at rate 4 interval",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The electrocardiogram deflection caused by ventricular repolarization
    /// </summary>
    public static readonly Coding TWave = new Coding
    {
      Code = "109051",
      Display = "T wave",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The peak pressure of each heart beat monitored in the atrium caused by the filling of the atrium
    /// </summary>
    public static readonly Coding VWave = new Coding
    {
      Code = "109052",
      Display = "V wave",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The second V wave measurement of two consecutive beats
    /// </summary>
    public static readonly Coding VWaveOfNextBeat = new Coding
    {
      Code = "109053",
      Display = "V wave of next beat",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A description of the physiological condition of the patient
    /// </summary>
    public static readonly Coding PatientState = new Coding
    {
      Code = "109054",
      Display = "Patient State",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The exercise level during a progressive cardiac stress test
    /// </summary>
    public static readonly Coding ProtocolStage = new Coding
    {
      Code = "109055",
      Display = "Protocol Stage",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A series of physiological challenges designed to progressively increase the work of the heart
    /// </summary>
    public static readonly Coding StressProtocol = new Coding
    {
      Code = "109056",
      Display = "Stress Protocol",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The subpart of a cardiac catheterization procedure in which a radio-opaque contrast medium is injected into the patient
    /// </summary>
    public static readonly Coding ContrastPhase = new Coding
    {
      Code = "109058",
      Display = "Contrast Phase",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Physical changes administered to a patient in order to elicit an physiological response
    /// </summary>
    public static readonly Coding PhysiologicalChallenges = new Coding
    {
      Code = "109059",
      Display = "Physiological challenges",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Enumeration of a subpart of a catheterization procedure
    /// </summary>
    public static readonly Coding ProcedureStepNumber = new Coding
    {
      Code = "109060",
      Display = "Procedure Step Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A subpart of an electrophysiological procedure
    /// </summary>
    public static readonly Coding EPProcedurePhase = new Coding
    {
      Code = "109061",
      Display = "EP Procedure Phase",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A means of defining a series of cardiac stimulation pulses
    /// </summary>
    public static readonly Coding PulseTrainDefinition = new Coding
    {
      Code = "109063",
      Display = "Pulse train definition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time for a median particle to travel from point of injection to point of detection
    /// </summary>
    public static readonly Coding IndicatorMeanTransitTime = new Coding
    {
      Code = "109071",
      Display = "Indicator mean transit time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time constant of isovolumic pressure fall
    /// </summary>
    public static readonly Coding Tau = new Coding
    {
      Code = "109072",
      Display = "Tau",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Maximum velocity of myocardial contractility
    /// </summary>
    public static readonly Coding VMaxMyocardial = new Coding
    {
      Code = "109073",
      Display = "V max myocardial",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total time for the acquisition is shorter than cardiac cycle, no gating is applied; see Cardiac Synchronization Technique (0018,9037)
    /// </summary>
    public static readonly Coding RealTimeAcquisition = new Coding
    {
      Code = "109080",
      Display = "Real time acquisition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Certain thresholds have been set for a gating window that defines the acceptance of measurement data during the acquisition; see Cardiac Synchronization Technique (0018,9037)
    /// </summary>
    public static readonly Coding ProspectiveGating = new Coding
    {
      Code = "109081",
      Display = "Prospective gating",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Certain thresholds have been set for a gating window that defines the acceptance of measurement data after the acquisition; see Cardiac Synchronization Technique (0018,9037)
    /// </summary>
    public static readonly Coding RetrospectiveGating = new Coding
    {
      Code = "109082",
      Display = "Retrospective gating",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// There is a constant RR interval, which makes thresholding not required; see Cardiac Synchronization Technique (0018,9037); e.g. Pacemaker
    /// </summary>
    public static readonly Coding Paced = new Coding
    {
      Code = "109083",
      Display = "Paced",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Imaging after injection of additional tracer under resting conditions
    /// </summary>
    public static readonly Coding ReinjectionState = new Coding
    {
      Code = "109092",
      Display = "Reinjection State",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Imaging after allowing a moderate amount of time for tracer to move from its initial sites of uptake. Example: For Thallium imaging this would correspond to imaging 2-6 hours after injection
    /// </summary>
    public static readonly Coding RedistributionState = new Coding
    {
      Code = "109093",
      Display = "Redistribution State",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Imaging after allowing an extended amount of time for tracer to move from its initial sites of uptake. Example: For Thallium imaging this would correspond to imaging more than 6 hours after injection
    /// </summary>
    public static readonly Coding DelayedRedistributionState = new Coding
    {
      Code = "109094",
      Display = "Delayed Redistribution State",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment that originally acquired the data stored within composite instances; e.g. a CT, MR or Ultrasound modality
    /// </summary>
    public static readonly Coding AcquisitionEquipment = new Coding
    {
      Code = "109101",
      Display = "Acquisition Equipment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment that has processed composite instances to create new composite instances; e.g. a 3D Workstation
    /// </summary>
    public static readonly Coding ProcessingEquipment = new Coding
    {
      Code = "109102",
      Display = "Processing Equipment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment that has modified existing composite instances (without creating new composite instances); e.g. a QA Station or Archive
    /// </summary>
    public static readonly Coding ModifyingEquipment = new Coding
    {
      Code = "109103",
      Display = "Modifying Equipment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment that has modified an existing composite instance to remove patient identifying information
    /// </summary>
    public static readonly Coding DeIdentifyingEquipment = new Coding
    {
      Code = "109104",
      Display = "De-identifying Equipment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment that has processed composite instances to create new composite instances by extracting selected frames from the original instance
    /// </summary>
    public static readonly Coding FrameExtractingEquipment = new Coding
    {
      Code = "109105",
      Display = "Frame Extracting Equipment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment that has processed composite instances to create new composite instances by converting classic single frame images to enhanced multi-frame image, or vice versa and updating other instances to maintain referential integrity
    /// </summary>
    public static readonly Coding EnhancedMultiFrameConversionEquipment = new Coding
    {
      Code = "109106",
      Display = "Enhanced Multi-frame Conversion Equipment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The sound of a human's speech, recorded during a procedure
    /// </summary>
    public static readonly Coding Voice = new Coding
    {
      Code = "109110",
      Display = "Voice",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The voice of a device operator, recorded during a procedure
    /// </summary>
    public static readonly Coding OperatorQuoteSNarrative = new Coding
    {
      Code = "109111",
      Display = "Operator's narrative",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The ambient sound recorded during a procedure, which may or may not include voice and other types of sound
    /// </summary>
    public static readonly Coding AmbientRoomEnvironment = new Coding
    {
      Code = "109112",
      Display = "Ambient room environment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Doppler waveform recorded as an audible signal
    /// </summary>
    public static readonly Coding DopplerAudio = new Coding
    {
      Code = "109113",
      Display = "Doppler audio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The sound of the human heart beating
    /// </summary>
    public static readonly Coding Phonocardiogram = new Coding
    {
      Code = "109114",
      Display = "Phonocardiogram",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Any sound made by the human body
    /// </summary>
    public static readonly Coding PhysiologicalAudioSignal = new Coding
    {
      Code = "109115",
      Display = "Physiological audio signal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A digitized signal from the patient arterial system collected through pulse oximetry or other means
    /// </summary>
    public static readonly Coding ArterialPulseWaveform = new Coding
    {
      Code = "109116",
      Display = "Arterial Pulse Waveform",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A digitized signal from the patient respiratory system representing respiration
    /// </summary>
    public static readonly Coding RespirationWaveform = new Coding
    {
      Code = "109117",
      Display = "Respiration Waveform",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The occasion on which a procedure was performed on admission to a specialist unit; e.g. intensive care
    /// </summary>
    public static readonly Coding OnAdmissionToUnit = new Coding
    {
      Code = "109120",
      Display = "On admission to unit",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The occasion on which a procedure was performed on discharge from hospital as an in-patient
    /// </summary>
    public static readonly Coding OnDischarge = new Coding
    {
      Code = "109121",
      Display = "On discharge",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The occasion on which a procedure was performed on discharge from a specialist unit; e.g. intensive care
    /// </summary>
    public static readonly Coding OnDischargeFromUnit = new Coding
    {
      Code = "109122",
      Display = "On discharge from unit",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The occasion on which a procedure was performed immediately prior to non-surgical intervention; e.g, percutaneous angioplasty, biopsy
    /// </summary>
    public static readonly Coding PreIntervention = new Coding
    {
      Code = "109123",
      Display = "Pre-intervention",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The occasion on which a procedure was performed immediately after to non-surgical intervention; e.g, percutaneous angioplasty, biopsy
    /// </summary>
    public static readonly Coding PostIntervention = new Coding
    {
      Code = "109124",
      Display = "Post-intervention",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The occasion on which a procedure was performed at the most recent outpatient visit
    /// </summary>
    public static readonly Coding AtLastAppointment = new Coding
    {
      Code = "109125",
      Display = "At last appointment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The active or passive joint positioning during acquisition
    /// </summary>
    public static readonly Coding JointPositionMethod = new Coding
    {
      Code = "109132",
      Display = "Joint position method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A physical force applied during acquisition
    /// </summary>
    public static readonly Coding PhysicalForce = new Coding
    {
      Code = "109133",
      Display = "Physical force",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prior to voiding
    /// </summary>
    public static readonly Coding PriorToVoiding = new Coding
    {
      Code = "109134",
      Display = "Prior to voiding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Post voiding
    /// </summary>
    public static readonly Coding PostVoiding = new Coding
    {
      Code = "109135",
      Display = "Post voiding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Neutral musculoskeletal position
    /// </summary>
    public static readonly Coding NeutralMusculoskeletalPosition = new Coding
    {
      Code = "109136",
      Display = "Neutral musculoskeletal position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// America Kennel Club
    /// </summary>
    public static readonly Coding AmericaKennelClub = new Coding
    {
      Code = "109200",
      Display = "America Kennel Club",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// America's Pet Registry Inc
    /// </summary>
    public static readonly Coding AmericaQuoteSPetRegistryInc = new Coding
    {
      Code = "109201",
      Display = "America's Pet Registry Inc.",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// American Canine Association
    /// </summary>
    public static readonly Coding AmericanCanineAssociation = new Coding
    {
      Code = "109202",
      Display = "American Canine Association",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// American Purebred Registry
    /// </summary>
    public static readonly Coding AmericanPurebredRegistry = new Coding
    {
      Code = "109203",
      Display = "American Purebred Registry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// American Rare Breed Association
    /// </summary>
    public static readonly Coding AmericanRareBreedAssociation = new Coding
    {
      Code = "109204",
      Display = "American Rare Breed Association",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Animal Registry Unlimited
    /// </summary>
    public static readonly Coding AnimalRegistryUnlimited = new Coding
    {
      Code = "109205",
      Display = "Animal Registry Unlimited",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Animal Research Foundation
    /// </summary>
    public static readonly Coding AnimalResearchFoundation = new Coding
    {
      Code = "109206",
      Display = "Animal Research Foundation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Canadian Border Collie Association
    /// </summary>
    public static readonly Coding CanadianBorderCollieAssociation = new Coding
    {
      Code = "109207",
      Display = "Canadian Border Collie Association",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Canadian Kennel Club
    /// </summary>
    public static readonly Coding CanadianKennelClub = new Coding
    {
      Code = "109208",
      Display = "Canadian Kennel Club",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Canadian Livestock Records Association
    /// </summary>
    public static readonly Coding CanadianLivestockRecordsAssociation = new Coding
    {
      Code = "109209",
      Display = "Canadian Livestock Records Association",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Canine Federation of Canada
    /// </summary>
    public static readonly Coding CanineFederationOfCanada = new Coding
    {
      Code = "109210",
      Display = "Canine Federation of Canada",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Continental Kennel Club
    /// </summary>
    public static readonly Coding ContinentalKennelClub = new Coding
    {
      Code = "109211",
      Display = "Continental Kennel Club",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dog Registry of America
    /// </summary>
    public static readonly Coding DogRegistryOfAmerica = new Coding
    {
      Code = "109212",
      Display = "Dog Registry of America",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Federation of International Canines
    /// </summary>
    public static readonly Coding FederationOfInternationalCanines = new Coding
    {
      Code = "109213",
      Display = "Federation of International Canines",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// International Progressive Dog Breeders' Alliance
    /// </summary>
    public static readonly Coding InternationalProgressiveDogBreedersQuoteAlliance = new Coding
    {
      Code = "109214",
      Display = "International Progressive Dog Breeders' Alliance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// National Kennel Club
    /// </summary>
    public static readonly Coding NationalKennelClub = new Coding
    {
      Code = "109215",
      Display = "National Kennel Club",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// North American Purebred Dog Registry
    /// </summary>
    public static readonly Coding NorthAmericanPurebredDogRegistry = new Coding
    {
      Code = "109216",
      Display = "North American Purebred Dog Registry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// United All Breed Registry
    /// </summary>
    public static readonly Coding UnitedAllBreedRegistry = new Coding
    {
      Code = "109217",
      Display = "United All Breed Registry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// United Kennel Club
    /// </summary>
    public static readonly Coding UnitedKennelClub = new Coding
    {
      Code = "109218",
      Display = "United Kennel Club",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Universal Kennel Club International
    /// </summary>
    public static readonly Coding UniversalKennelClubInternational = new Coding
    {
      Code = "109219",
      Display = "Universal Kennel Club International",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Working Canine Association of Canada
    /// </summary>
    public static readonly Coding WorkingCanineAssociationOfCanada = new Coding
    {
      Code = "109220",
      Display = "Working Canine Association of Canada",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// World Kennel Club
    /// </summary>
    public static readonly Coding WorldKennelClub = new Coding
    {
      Code = "109221",
      Display = "World Kennel Club",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// World Wide Kennel Club
    /// </summary>
    public static readonly Coding WorldWideKennelClub = new Coding
    {
      Code = "109222",
      Display = "World Wide Kennel Club",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Evaluation of overall image quality as described in section 7.3.2 of [IEC 62563-1]
    /// </summary>
    public static readonly Coding OverallImageQualityEvaluation = new Coding
    {
      Code = "109701",
      Display = "Overall image quality evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Visual verification of sufficient grayscale resolution based on 8 and 10-bit markers as described in section 7.3.3 of [IEC 62563-1]
    /// </summary>
    public static readonly Coding GrayscaleResolutionEvaluation = new Coding
    {
      Code = "109702",
      Display = "Grayscale resolution evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Visual evaluation of luminance response using the TG18-CT test pattern as described in section 7.3.4 of [IEC 62563-1]
    /// </summary>
    public static readonly Coding LuminanceResponseEvaluation = new Coding
    {
      Code = "109703",
      Display = "Luminance response evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Visual detection of luminance non-uniformities as described in section 7.3.5 of [IEC 62563-1]
    /// </summary>
    public static readonly Coding LuminanceUniformityEvaluation = new Coding
    {
      Code = "109704",
      Display = "Luminance uniformity evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Visual verification of color uniformity as described in section 7.3.6 of [IEC 62563-1]
    /// </summary>
    public static readonly Coding ChromaticityEvaluation = new Coding
    {
      Code = "109705",
      Display = "Chromaticity evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Visual detection of defective pixels on dark (TG18-UN80) and bright (TG18-UN10) images as described in section 7.3.7 of [IEC 62563-1]
    /// </summary>
    public static readonly Coding PixelFaultsEvaluation = new Coding
    {
      Code = "109706",
      Display = "Pixel faults evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Visual evaluation of veiling glare by looking at low contrast objects on 2 test patterns as described in section 7.3.8 of [IEC 62563-1]
    /// </summary>
    public static readonly Coding VeilingGlareEvaluation = new Coding
    {
      Code = "109707",
      Display = "Veiling glare evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Visual evaluation of geometry, phase/clock correction and clipping as described in section 7.3.9 of [IEC 62563-1]
    /// </summary>
    public static readonly Coding GeometricalImageEvaluation = new Coding
    {
      Code = "109708",
      Display = "Geometrical image evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Visual evaluation of viewing angle as described in section 7.3.10 of [IEC 62563-1]
    /// </summary>
    public static readonly Coding AngularViewingEvaluation = new Coding
    {
      Code = "109709",
      Display = "Angular viewing evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Visual evaluation of the appearance of clinical images as described in section 7.3.11 of [IEC 62563-1]
    /// </summary>
    public static readonly Coding ClinicalEvaluation = new Coding
    {
      Code = "109710",
      Display = "Clinical evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// AAPM TG18-QC Pattern used for evaluation of resolution, luminance, distortion, artifacts. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18QCPattern = new Coding
    {
      Code = "109801",
      Display = "TG18-QC Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// AAPM TG18-BR Pattern used for the evaluation of the display of low-contrast, fine-detail image structures See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18BRPattern = new Coding
    {
      Code = "109802",
      Display = "TG18-BR Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// AAPM TG18-PQC Pattern used for evaluation of resolution, luminance, contrast transfer for prints. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18PQCPattern = new Coding
    {
      Code = "109803",
      Display = "TG18-PQC Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// AAPM TG18-CT Pattern used for evaluation of luminance response. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18CTPattern = new Coding
    {
      Code = "109804",
      Display = "TG18-CT Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 1st image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN801Pattern = new Coding
    {
      Code = "109805",
      Display = "TG18-LN8-01 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 2nd image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN802Pattern = new Coding
    {
      Code = "109806",
      Display = "TG18-LN8-02 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 3rd image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN803Pattern = new Coding
    {
      Code = "109807",
      Display = "TG18-LN8-03 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 4th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN804Pattern = new Coding
    {
      Code = "109808",
      Display = "TG18-LN8-04 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 5th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN805Pattern = new Coding
    {
      Code = "109809",
      Display = "TG18-LN8-05 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 6th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN806Pattern = new Coding
    {
      Code = "109810",
      Display = "TG18-LN8-06 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 7th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN807Pattern = new Coding
    {
      Code = "109811",
      Display = "TG18-LN8-07 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 8th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN808Pattern = new Coding
    {
      Code = "109812",
      Display = "TG18-LN8-08 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 9th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN809Pattern = new Coding
    {
      Code = "109813",
      Display = "TG18-LN8-09 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 10th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration series. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN810Pattern = new Coding
    {
      Code = "109814",
      Display = "TG18-LN8-10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 11th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN811Pattern = new Coding
    {
      Code = "109815",
      Display = "TG18-LN8-11 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 12th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN812Pattern = new Coding
    {
      Code = "109816",
      Display = "TG18-LN8-12 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 13th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN813Pattern = new Coding
    {
      Code = "109817",
      Display = "TG18-LN8-13 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 14th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN814Pattern = new Coding
    {
      Code = "109818",
      Display = "TG18-LN8-14 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 15th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN815Pattern = new Coding
    {
      Code = "109819",
      Display = "TG18-LN8-15 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 16th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN816Pattern = new Coding
    {
      Code = "109820",
      Display = "TG18-LN8-16 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 17th image in the AAPM TG18-LN8 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN817Pattern = new Coding
    {
      Code = "109821",
      Display = "TG18-LN8-17 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 18th image in the AAPM TG18-LN8- set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN818Pattern = new Coding
    {
      Code = "109822",
      Display = "TG18-LN8-18 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 1st image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1201Pattern = new Coding
    {
      Code = "109823",
      Display = "TG18-LN12-01 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 2 nd image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1202Pattern = new Coding
    {
      Code = "109824",
      Display = "TG18-LN12-02 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 3rd image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1203Pattern = new Coding
    {
      Code = "109825",
      Display = "TG18-LN12-03 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 4th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1204Pattern = new Coding
    {
      Code = "109826",
      Display = "TG18-LN12-04 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 5th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1205Pattern = new Coding
    {
      Code = "109827",
      Display = "TG18-LN12-05 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 6th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1206Pattern = new Coding
    {
      Code = "109828",
      Display = "TG18-LN12-06 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 7th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1207Pattern = new Coding
    {
      Code = "109829",
      Display = "TG18-LN12-07 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 8th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1208Pattern = new Coding
    {
      Code = "109830",
      Display = "TG18-LN12-08 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 9th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1209Pattern = new Coding
    {
      Code = "109831",
      Display = "TG18-LN12-09 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 10th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1210Pattern = new Coding
    {
      Code = "109832",
      Display = "TG18-LN12-10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 11th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1211Pattern = new Coding
    {
      Code = "109833",
      Display = "TG18-LN12-11 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 12th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1212Pattern = new Coding
    {
      Code = "109834",
      Display = "TG18-LN12-12 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 13th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1213Pattern = new Coding
    {
      Code = "109835",
      Display = "TG18-LN12-13 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 14th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1214Pattern = new Coding
    {
      Code = "109836",
      Display = "TG18-LN12-14 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 15th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1215Pattern = new Coding
    {
      Code = "109837",
      Display = "TG18-LN12-15 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 16th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1216Pattern = new Coding
    {
      Code = "109838",
      Display = "TG18-LN12-16 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 17th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1217Pattern = new Coding
    {
      Code = "109839",
      Display = "TG18-LN12-17 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The 18th image in the AAPM TG18-LN12 set used for DICOM grayscale calibration. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LN1218Pattern = new Coding
    {
      Code = "109840",
      Display = "TG18-LN12-18 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-UN10 Pattern used for evaluation of luminance and color uniformity, and angular response. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18UN10Pattern = new Coding
    {
      Code = "109841",
      Display = "TG18-UN10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-UN80 Pattern used for evaluation of luminance and color uniformity, and angular response. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18UN80Pattern = new Coding
    {
      Code = "109842",
      Display = "TG18-UN80 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-UNL10 Pattern is the AAPM TG-18 UN10 Pattern with added defining lines. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18UNL10Pattern = new Coding
    {
      Code = "109843",
      Display = "TG18-UNL10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-UNL80 Pattern is the AAPM TG-18 UN80 Pattern with added defining lines. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18UNL80Pattern = new Coding
    {
      Code = "109844",
      Display = "TG18-UNL80 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-AD Pattern used for visual evaluation of the reflection of ambient light from the display. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18ADPattern = new Coding
    {
      Code = "109845",
      Display = "TG18-AD Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-MP Pattern used for evaluation of Luminance response (bit-depth resolution). See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18MPPattern = new Coding
    {
      Code = "109846",
      Display = "TG18-MP Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-RH10 Pattern used for LSF-line spectra function-(1k and 2k) evaluation by 5 horizontal lines at 10% luminance level. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18RH10Pattern = new Coding
    {
      Code = "109847",
      Display = "TG18-RH10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-RH50 Pattern used for LSF-line spectra function-(1k and 2k) evaluation by 5 horizontal lines at 50% luminance level. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18RH50Pattern = new Coding
    {
      Code = "109848",
      Display = "TG18-RH50 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-RH89 Pattern used for LSF-line spectra function-(1k and 2k) evaluation by 5 horizontal lines at 89% luminance level. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18RH89Pattern = new Coding
    {
      Code = "109849",
      Display = "TG18-RH89 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-RV10 Pattern used for LSF-line spectra function-(1k and 2k) evaluation by 5 vertical lines at 10% luminance level. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18RV10Pattern = new Coding
    {
      Code = "109850",
      Display = "TG18-RV10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-RV50 Pattern used for LSF-line spectra function-(1k and 2k) evaluation by 5 vertical lines at 50% luminance level. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18RV50Pattern = new Coding
    {
      Code = "109851",
      Display = "TG18-RV50 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-RV89 Pattern used for LSF-line spectra function-(1k and 2k) evaluation by 5 vertical lines at 89% luminance level. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18RV89Pattern = new Coding
    {
      Code = "109852",
      Display = "TG18-RV89 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-PX Pattern used for the assessment of display resolution. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18PXPattern = new Coding
    {
      Code = "109853",
      Display = "TG18-PX Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-CX Pattern used to assess display resolution and resolution uniformity. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18CXPattern = new Coding
    {
      Code = "109854",
      Display = "TG18-CX Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-LPH10 Pattern used to assess display resolution. This pattern has horizontal bars consisting of alternating single-pixel-wide lines across the faceplate of display. The lines have a 12% positive contrast against 10% background level of the maximum pixel value. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LPH10Pattern = new Coding
    {
      Code = "109855",
      Display = "TG18-LPH10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-LPH50 Pattern used to assess display resolution. This pattern has horizontal bars consisting of alternating single-pixel-wide lines across the faceplate of display. The lines have a 50% positive contrast against 10% background level of the maximum pixel value. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LPH50Pattern = new Coding
    {
      Code = "109856",
      Display = "TG18-LPH50 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-LPH89 Pattern used to assess display resolution. This pattern has horizontal bars consisting of alternating single-pixel-wide lines across the faceplate of display. The lines have a 12% positive contrast against 89% background level of the maximum pixel value. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LPH89Pattern = new Coding
    {
      Code = "109857",
      Display = "TG18-LPH89 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-LPV10 Pattern used to assess display resolution. This pattern has vertical bars consisting of alternating single-pixel-wide lines across the faceplate of display. The lines have a 12% positive contrast against 10% background level of the maximum pixel value. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LPV10Pattern = new Coding
    {
      Code = "109858",
      Display = "TG18-LPV10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-LPV50 Pattern used to assess display resolution. This pattern has vertical bars consisting of alternating single-pixel-wide lines across the faceplate of display. The lines have a 12% positive contrast against 50% background level of the maximum pixel value. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LPV50Pattern = new Coding
    {
      Code = "109859",
      Display = "TG18-LPV50 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-LPV89 Pattern used to assess display resolution. This pattern has vertical bars consisting of alternating single-pixel-wide lines across the faceplate of display. The lines have a 12% positive contrast against 89% background level of the maximum pixel value. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18LPV89Pattern = new Coding
    {
      Code = "109860",
      Display = "TG18-LPV89 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-AFC Pattern used to assess display noise. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18AFCPattern = new Coding
    {
      Code = "109861",
      Display = "TG18-AFC Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-NS10 Pattern is AAPM TG18-RV10/RH10 with only difference being the absence of the single line at the center of the measurement area. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18NS10Pattern = new Coding
    {
      Code = "109862",
      Display = "TG18-NS10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-NS50 Pattern is AAPM TG18-RV50/RH50 with only difference being the absence of the single line at the center of the measurement area. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18NS50Pattern = new Coding
    {
      Code = "109863",
      Display = "TG18-NS50 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-NS89 Pattern is AAPM TG18-RV89/RH89 with only difference being the absence of the single line at the center of the measurement area. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18NS89Pattern = new Coding
    {
      Code = "109864",
      Display = "TG18-NS89 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GV Pattern used to assess display veiling. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GVPattern = new Coding
    {
      Code = "109865",
      Display = "TG18-GV Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GVN Pattern used to assess display veiling. This pattern is identical to AAPM TG18-GV Pattern except that the large-diameter white circle is replaced with a black circle, creating a completely black pattern except for the presence of low-contrast targets. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GVNPattern = new Coding
    {
      Code = "109866",
      Display = "TG18-GVN Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GQ Pattern used for quantitative assessment of veiling glare. This pattern is identical to TG18-GV except that is lacks the central low-contrast objects. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GQPattern = new Coding
    {
      Code = "109867",
      Display = "TG18-GQ Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// TG18-GQN Pattern used for the quantitative assessment of veiling glare. This pattern is identical to AAPM TG18-GQ Pattern except that the large-diameter white circle is replaced with a black circle, creating a completely black pattern except for the presence of low-contrast targets. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GQNPattern = new Coding
    {
      Code = "109868",
      Display = "TG18-GQN Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GQB Pattern used for the quantitative assessment of veiling glare. This pattern is identical to AAPM TG18-GQ Pattern except eliminating the central black circle. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GQBPattern = new Coding
    {
      Code = "109869",
      Display = "TG18-GQB Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GA03 Pattern used for quantitative assessment of veiling glare. This pattern is identical to TG18-GQ except that the radius of the central black circle is varied as r = 3. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GA03Pattern = new Coding
    {
      Code = "109870",
      Display = "TG18-GA03 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GA05 Pattern This pattern is identical to TG18-GQ except that the radius of the central black circle is varied as r = 5. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GA05Pattern = new Coding
    {
      Code = "109871",
      Display = "TG18-GA05 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GA08 Pattern used for quantitative assessment of veiling glare. This pattern is identical to TG18-GQ except that the radius of the central black circle is varied as r = 8. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GA08Pattern = new Coding
    {
      Code = "109872",
      Display = "TG18-GA08 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GA10 Pattern used for quantitative assessment of veiling glare. This pattern is identical to TG18-GQ except that the radius of the central black circle is varied as r = 10. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GA10Pattern = new Coding
    {
      Code = "109873",
      Display = "TG18-GA10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GA15 Pattern used for quantitative assessment of veiling glare. This pattern is identical to TG18-GQ except that the radius of the central black circle is varied as r = 15
    /// </summary>
    public static readonly Coding TG18GA15Pattern = new Coding
    {
      Code = "109874",
      Display = "TG18-GA15 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GA20 Pattern used for quantitative assessment of veiling glare. This pattern is identical to TG18-GQ except that the radius of the central black circle is varied as r = 20. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GA20Pattern = new Coding
    {
      Code = "109875",
      Display = "TG18-GA20 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GA25 Pattern used for quantitative assessment of veiling glare. This pattern is identical to TG18-GQ except that the radius of the central black circle is varied as r = 25. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GA25Pattern = new Coding
    {
      Code = "109876",
      Display = "TG18-GA25 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The TG18-GA30 Pattern used for quantitative assessment of veiling glare. This pattern is identical to TG18-GQ except that the radius of the central black circle is varied as r = 30. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18GA30Pattern = new Coding
    {
      Code = "109877",
      Display = "TG18-GA30 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-CH Image is a reference anatomical PA chest image. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18CHImage = new Coding
    {
      Code = "109878",
      Display = "TG18-CH Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-KN Image is a reference anatomical knee image. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18KNImage = new Coding
    {
      Code = "109879",
      Display = "TG18-KN Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-MM1 Image is a reference anatomical mammogram image. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18MM1Image = new Coding
    {
      Code = "109880",
      Display = "TG18-MM1 Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The AAPM TG18-MM2 Image is a reference anatomical mammogram image. See [AAPM OR 03]
    /// </summary>
    public static readonly Coding TG18MM2Image = new Coding
    {
      Code = "109881",
      Display = "TG18-MM2 Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC OIQ Pattern is used as an alternative to the TG18-QC Pattern. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding OIQPattern = new Coding
    {
      Code = "109901",
      Display = "OIQ Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC ANG Pattern used for angular viewing evaluation. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding ANGPattern = new Coding
    {
      Code = "109902",
      Display = "ANG Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC GD Pattern used for geometrical image evaluation. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding GDPattern = new Coding
    {
      Code = "109903",
      Display = "GD Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN01 Pattern is used as analternative to the TG18-LN-01 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN01Pattern = new Coding
    {
      Code = "109904",
      Display = "BN01 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN02 Pattern is used as analternative to the TG18-LN-02 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN02Pattern = new Coding
    {
      Code = "109905",
      Display = "BN02 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN03 Pattern is used as analternative to the TG18-LN-03 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN03Pattern = new Coding
    {
      Code = "109906",
      Display = "BN03 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN04 Pattern is used as analternative to the TG18-LN-04 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN04Pattern = new Coding
    {
      Code = "109907",
      Display = "BN04 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN05 Pattern is used as analternative to the TG18-LN-05 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN05Pattern = new Coding
    {
      Code = "109908",
      Display = "BN05 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN06 Pattern is used as analternative to the TG18-LN-06 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN06Pattern = new Coding
    {
      Code = "109909",
      Display = "BN06 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN07 Pattern is used as analternative to the TG18-LN-07 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN07Pattern = new Coding
    {
      Code = "109910",
      Display = "BN07 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN08 Pattern is used as analternative to the TG18-LN-08 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN08Pattern = new Coding
    {
      Code = "109911",
      Display = "BN08 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN09 Pattern is used as analternative to the TG18-LN-09 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN09Pattern = new Coding
    {
      Code = "109912",
      Display = "BN09 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN10 Pattern is used as analternative to the TG18-LN-10 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN10Pattern = new Coding
    {
      Code = "109913",
      Display = "BN10 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN11 Pattern is used as analternative to the TG18-LN-11 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN11Pattern = new Coding
    {
      Code = "109914",
      Display = "BN11 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN12 Pattern is used as analternative to the TG18-LN-12 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN12Pattern = new Coding
    {
      Code = "109915",
      Display = "BN12 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN13 Pattern is used as analternative to the TG18-LN-13 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN13Pattern = new Coding
    {
      Code = "109916",
      Display = "BN13 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN14 Pattern is used as analternative to the TG18-LN-14 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN14Pattern = new Coding
    {
      Code = "109917",
      Display = "BN14 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN15 Pattern is used as analternative to the TG18-LN-15 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN15Pattern = new Coding
    {
      Code = "109918",
      Display = "BN15 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN16 Pattern is used as analternative to the TG18-LN-16 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN16Pattern = new Coding
    {
      Code = "109919",
      Display = "BN16 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN17 Pattern is used as analternative to the TG18-LN-17 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN17Pattern = new Coding
    {
      Code = "109920",
      Display = "BN17 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The IEC BN18 Pattern is used as analternative to the TG18-LN-18 Pattern, to avoid the use of a cone or baffle with LCDs. See [IEC 62563-1]
    /// </summary>
    public static readonly Coding BN18Pattern = new Coding
    {
      Code = "109921",
      Display = "BN18 Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test image "Bild 2" for the gray-scale reproduction of imaging devices. See [DIN 6868-57]
    /// </summary>
    public static readonly Coding DINGrayscalePattern = new Coding
    {
      Code = "109931",
      Display = "DIN Grayscale Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test image "Bild 3" for the geometrical imaging properties of imaging devices. See [DIN 6868-57]
    /// </summary>
    public static readonly Coding DINGeometryPattern = new Coding
    {
      Code = "109932",
      Display = "DIN Geometry Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test image "Bild 5" for displaying the spatial and contrast resolution as well as the line structure of imaging devices. See [DIN 6868-57]
    /// </summary>
    public static readonly Coding DINResolutionPattern = new Coding
    {
      Code = "109933",
      Display = "DIN Resolution Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An alternative to AAPM TG18-UN80, specified at 100% of maximum pixel value
    /// </summary>
    public static readonly Coding WhitePattern = new Coding
    {
      Code = "109941",
      Display = "White Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A standard display test pattern. See [SMPTE RP133]. A pattern is available at http://www.dclunie.com/images/smpte.512.512.8.gif
    /// </summary>
    public static readonly Coding SMPTEPattern = new Coding
    {
      Code = "109943",
      Display = "SMPTE Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Display Device that displays images on a Cathode Ray Tube
    /// </summary>
    public static readonly Coding CRTDisplay = new Coding
    {
      Code = "109991",
      Display = "CRT Display",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Display Device that displays images on a Liquid Crystal Display
    /// </summary>
    public static readonly Coding LiquidCrystalDisplay = new Coding
    {
      Code = "109992",
      Display = "Liquid Crystal Display",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Display Device that displays images on a Plasma Display
    /// </summary>
    public static readonly Coding PlasmaDisplay = new Coding
    {
      Code = "109993",
      Display = "Plasma Display",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Display Device that displays images on an Organic Light Emitting Diode based display
    /// </summary>
    public static readonly Coding OLED = new Coding
    {
      Code = "109994",
      Display = "OLED",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Display Device that projects images on a surface from behind using a Digital Light Processing Projector
    /// </summary>
    public static readonly Coding DLPRearProjectionSystem = new Coding
    {
      Code = "109995",
      Display = "DLP Rear Projection System",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Display Device that projects images on a surface from in front using a Digital Light Processing Projector
    /// </summary>
    public static readonly Coding DLPFrontProjectionSystem = new Coding
    {
      Code = "109996",
      Display = "DLP Front Projection System",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Display Device that projects images on a surface from behind using a Cathode Ray Tube
    /// </summary>
    public static readonly Coding CRTRearProjectionSystem = new Coding
    {
      Code = "109997",
      Display = "CRT Rear Projection System",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Display Device that projects images on a surface from in front using a Cathode Ray Tube
    /// </summary>
    public static readonly Coding CRTFrontProjectionSystem = new Coding
    {
      Code = "109998",
      Display = "CRT Front Projection System",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Display Device that projects images on a surface from an unspecified direction using an unspecified means
    /// </summary>
    public static readonly Coding OtherProjectionSystem = new Coding
    {
      Code = "109999",
      Display = "Other Projection System",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image processing work item
    /// </summary>
    public static readonly Coding ImageProcessing = new Coding
    {
      Code = "110001",
      Display = "Image Processing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Quality control work item
    /// </summary>
    public static readonly Coding QualityControl = new Coding
    {
      Code = "110002",
      Display = "Quality Control",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Computer aided diagnosis work item
    /// </summary>
    public static readonly Coding ComputerAidedDiagnosis = new Coding
    {
      Code = "110003",
      Display = "Computer Aided Diagnosis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Computer aided detection work item
    /// </summary>
    public static readonly Coding ComputerAidedDetection = new Coding
    {
      Code = "110004",
      Display = "Computer Aided Detection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Interpretation work item
    /// </summary>
    public static readonly Coding Interpretation = new Coding
    {
      Code = "110005",
      Display = "Interpretation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Transcription work item
    /// </summary>
    public static readonly Coding Transcription = new Coding
    {
      Code = "110006",
      Display = "Transcription",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report verification work item
    /// </summary>
    public static readonly Coding ReportVerification = new Coding
    {
      Code = "110007",
      Display = "Report Verification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Print work item
    /// </summary>
    public static readonly Coding Print = new Coding
    {
      Code = "110008",
      Display = "Print",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// There will be no more work items scheduled
    /// </summary>
    public static readonly Coding NoSubsequentWorkitems = new Coding
    {
      Code = "110009",
      Display = "No subsequent Workitems",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Film type of output
    /// </summary>
    public static readonly Coding Film = new Coding
    {
      Code = "110010",
      Display = "Film",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dictation type of output
    /// </summary>
    public static readonly Coding Dictation = new Coding
    {
      Code = "110011",
      Display = "Dictation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Transcription type of output
    /// </summary>
    public static readonly Coding Transcription_2 = new Coding
    {
      Code = "110012",
      Display = "Transcription",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The procedure to read DICOM instances from DICOM interchange media, coerce identifying attributes into the local namespace if necessary, and make the instances available
    /// </summary>
    public static readonly Coding MediaImport = new Coding
    {
      Code = "110013",
      Display = "Media Import",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Digitization of Sheet Film
    /// </summary>
    public static readonly Coding SheetFilmDigitized = new Coding
    {
      Code = "110020",
      Display = "Sheet Film Digitized",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Digitization of Cine Film
    /// </summary>
    public static readonly Coding CineFilmDigitized = new Coding
    {
      Code = "110021",
      Display = "Cine Film Digitized",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Digitization of Video Tape
    /// </summary>
    public static readonly Coding VideoTapeDigitized = new Coding
    {
      Code = "110022",
      Display = "Video Tape Digitized",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Digitization of pages of a paper document (Units may be specified as Pages, Documents)
    /// </summary>
    public static readonly Coding PaperDigitized = new Coding
    {
      Code = "110023",
      Display = "Paper Digitized",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Importation of CD
    /// </summary>
    public static readonly Coding CDImported = new Coding
    {
      Code = "110024",
      Display = "CD Imported",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Importation of DVD
    /// </summary>
    public static readonly Coding DVDImported = new Coding
    {
      Code = "110025",
      Display = "DVD Imported",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Importation of MOD
    /// </summary>
    public static readonly Coding MODImported = new Coding
    {
      Code = "110026",
      Display = "MOD Imported",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Importation of DICOM Studies
    /// </summary>
    public static readonly Coding StudiesImported = new Coding
    {
      Code = "110027",
      Display = "Studies Imported",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Importation of DICOM Composite Instances
    /// </summary>
    public static readonly Coding InstancesImported = new Coding
    {
      Code = "110028",
      Display = "Instances Imported",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A device that connects using the USB hard drive interface. These may be USB-Sticks, portable hard drives, and other technologies
    /// </summary>
    public static readonly Coding USBDiskEmulation = new Coding
    {
      Code = "110030",
      Display = "USB Disk Emulation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Email and email attachments used as a media for data transport
    /// </summary>
    public static readonly Coding Email = new Coding
    {
      Code = "110031",
      Display = "Email",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CD-R, CD-ROM, and CD-RW media used for data transport
    /// </summary>
    public static readonly Coding CD = new Coding
    {
      Code = "110032",
      Display = "CD",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// DVD, DVD-RAM, and other DVD formatted media used for data transport
    /// </summary>
    public static readonly Coding DVD = new Coding
    {
      Code = "110033",
      Display = "DVD",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Media that comply with the Compact Flash standard
    /// </summary>
    public static readonly Coding CompactFlash = new Coding
    {
      Code = "110034",
      Display = "Compact Flash",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Media that comply with the Multi-media Card standard
    /// </summary>
    public static readonly Coding MultiMediaCard = new Coding
    {
      Code = "110035",
      Display = "Multi-media Card",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Media that comply with the Secure Digital Card standard
    /// </summary>
    public static readonly Coding SecureDigitalCard = new Coding
    {
      Code = "110036",
      Display = "Secure Digital Card",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// URI Identifier for network or other resource, see RFC 3968
    /// </summary>
    public static readonly Coding URI = new Coding
    {
      Code = "110037",
      Display = "URI",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Any paper or similar document
    /// </summary>
    public static readonly Coding PaperDocument = new Coding
    {
      Code = "110038",
      Display = "Paper Document",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Application Activity has taken place
    /// </summary>
    public static readonly Coding ApplicationActivity = new Coding
    {
      Code = "110100",
      Display = "Application Activity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Audit Log has been used
    /// </summary>
    public static readonly Coding AuditLogUsed = new Coding
    {
      Code = "110101",
      Display = "Audit Log Used",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Storage of DICOM Instances has begun
    /// </summary>
    public static readonly Coding BeginTransferringDICOMInstances = new Coding
    {
      Code = "110102",
      Display = "Begin Transferring DICOM Instances",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: DICOM Instances have been created, read, updated, or deleted
    /// </summary>
    public static readonly Coding DICOMInstancesAccessed = new Coding
    {
      Code = "110103",
      Display = "DICOM Instances Accessed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Storage of DICOM Instances has been completed
    /// </summary>
    public static readonly Coding DICOMInstancesTransferred = new Coding
    {
      Code = "110104",
      Display = "DICOM Instances Transferred",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Entire Study has been deleted
    /// </summary>
    public static readonly Coding DICOMStudyDeleted = new Coding
    {
      Code = "110105",
      Display = "DICOM Study Deleted",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Data has been exported out of the system
    /// </summary>
    public static readonly Coding Export = new Coding
    {
      Code = "110106",
      Display = "Export",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Data has been imported into the system
    /// </summary>
    public static readonly Coding Import = new Coding
    {
      Code = "110107",
      Display = "Import",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: System has joined or left network
    /// </summary>
    public static readonly Coding NetworkEntry = new Coding
    {
      Code = "110108",
      Display = "Network Entry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Order has been created, read, updated or deleted
    /// </summary>
    public static readonly Coding OrderRecord = new Coding
    {
      Code = "110109",
      Display = "Order Record",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Patient Record has been created, read, updated, or deleted
    /// </summary>
    public static readonly Coding PatientRecord = new Coding
    {
      Code = "110110",
      Display = "Patient Record",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Procedure Record has been created, read, updated, or deleted
    /// </summary>
    public static readonly Coding ProcedureRecord = new Coding
    {
      Code = "110111",
      Display = "Procedure Record",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Query has been made
    /// </summary>
    public static readonly Coding Query = new Coding
    {
      Code = "110112",
      Display = "Query",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Security Alert has been raised
    /// </summary>
    public static readonly Coding SecurityAlert = new Coding
    {
      Code = "110113",
      Display = "Security Alert",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: User Authentication has been attempted
    /// </summary>
    public static readonly Coding UserAuthentication = new Coding
    {
      Code = "110114",
      Display = "User Authentication",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Application Entity has started
    /// </summary>
    public static readonly Coding ApplicationStart = new Coding
    {
      Code = "110120",
      Display = "Application Start",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Application Entity has stopped
    /// </summary>
    public static readonly Coding ApplicationStop = new Coding
    {
      Code = "110121",
      Display = "Application Stop",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: User login has been attempted
    /// </summary>
    public static readonly Coding Login = new Coding
    {
      Code = "110122",
      Display = "Login",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: User logout has been attempted
    /// </summary>
    public static readonly Coding Logout = new Coding
    {
      Code = "110123",
      Display = "Logout",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Node has been attached
    /// </summary>
    public static readonly Coding Attach = new Coding
    {
      Code = "110124",
      Display = "Attach",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Node has been detached
    /// </summary>
    public static readonly Coding Detach = new Coding
    {
      Code = "110125",
      Display = "Detach",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Node Authentication has been attempted
    /// </summary>
    public static readonly Coding NodeAuthentication = new Coding
    {
      Code = "110126",
      Display = "Node Authentication",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Emergency Override has started
    /// </summary>
    public static readonly Coding EmergencyOverrideStarted = new Coding
    {
      Code = "110127",
      Display = "Emergency Override Started",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Network configuration has been changed
    /// </summary>
    public static readonly Coding NetworkConfiguration = new Coding
    {
      Code = "110128",
      Display = "Network Configuration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Security configuration has been changed
    /// </summary>
    public static readonly Coding SecurityConfiguration = new Coding
    {
      Code = "110129",
      Display = "Security Configuration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Hardware configuration has been changed
    /// </summary>
    public static readonly Coding HardwareConfiguration = new Coding
    {
      Code = "110130",
      Display = "Hardware Configuration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Software configuration has been changed
    /// </summary>
    public static readonly Coding SoftwareConfiguration = new Coding
    {
      Code = "110131",
      Display = "Software Configuration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: A use of a restricted function has been attempted
    /// </summary>
    public static readonly Coding UseOfRestrictedFunction = new Coding
    {
      Code = "110132",
      Display = "Use of Restricted Function",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Audit recording has been stopped
    /// </summary>
    public static readonly Coding AuditRecordingStopped = new Coding
    {
      Code = "110133",
      Display = "Audit Recording Stopped",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Audit recording has been started
    /// </summary>
    public static readonly Coding AuditRecordingStarted = new Coding
    {
      Code = "110134",
      Display = "Audit Recording Started",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Security attributes of an object have been changed
    /// </summary>
    public static readonly Coding ObjectSecurityAttributesChanged = new Coding
    {
      Code = "110135",
      Display = "Object Security Attributes Changed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Security roles have been changed
    /// </summary>
    public static readonly Coding SecurityRolesChanged = new Coding
    {
      Code = "110136",
      Display = "Security Roles Changed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Security attributes of a user have been changed
    /// </summary>
    public static readonly Coding UserSecurityAttributesChanged = new Coding
    {
      Code = "110137",
      Display = "User security Attributes Changed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Emergency Override has Stopped
    /// </summary>
    public static readonly Coding EmergencyOverrideStopped = new Coding
    {
      Code = "110138",
      Display = "Emergency Override Stopped",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Remote Service Operation has Begun
    /// </summary>
    public static readonly Coding RemoteServiceOperationStarted = new Coding
    {
      Code = "110139",
      Display = "Remote Service Operation Started",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Remote Service Operation has Stopped
    /// </summary>
    public static readonly Coding RemoteServiceOperationStopped = new Coding
    {
      Code = "110140",
      Display = "Remote Service Operation Stopped",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Local Service Operation has Begun
    /// </summary>
    public static readonly Coding LocalServiceOperationStarted = new Coding
    {
      Code = "110141",
      Display = "Local Service Operation Started",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit event: Local Service Operation Stopped
    /// </summary>
    public static readonly Coding LocalServiceOperationStopped = new Coding
    {
      Code = "110142",
      Display = "Local Service Operation Stopped",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit participant role ID of software application
    /// </summary>
    public static readonly Coding Application = new Coding
    {
      Code = "110150",
      Display = "Application",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit participant role ID of software application launcher, i.e., the entity that started or stopped an application
    /// </summary>
    public static readonly Coding ApplicationLauncher = new Coding
    {
      Code = "110151",
      Display = "Application Launcher",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit participant role ID of the receiver of data
    /// </summary>
    public static readonly Coding DestinationRoleID = new Coding
    {
      Code = "110152",
      Display = "Destination Role ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit participant role ID of the sender of data
    /// </summary>
    public static readonly Coding SourceRoleID = new Coding
    {
      Code = "110153",
      Display = "Source Role ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit participant role ID of media receiving data during an export
    /// </summary>
    public static readonly Coding DestinationMedia = new Coding
    {
      Code = "110154",
      Display = "Destination Media",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audit participant role ID of media providing data during an import
    /// </summary>
    public static readonly Coding SourceMedia = new Coding
    {
      Code = "110155",
      Display = "Source Media",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ParticipantObjectID type: Study Instance UID
    /// </summary>
    public static readonly Coding StudyInstanceUID = new Coding
    {
      Code = "110180",
      Display = "Study Instance UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ParticipantObjectID type: SOP Class UID
    /// </summary>
    public static readonly Coding SOPClassUID = new Coding
    {
      Code = "110181",
      Display = "SOP Class UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ID of a node that is a participant object of an audit message
    /// </summary>
    public static readonly Coding NodeID = new Coding
    {
      Code = "110182",
      Display = "Node ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// System, organization, agency, or department that has assigned an instance identifier (such as placer or filler number, patient or provider identifier, etc.)
    /// </summary>
    public static readonly Coding IssuerOfIdentifier = new Coding
    {
      Code = "110190",
      Display = "Issuer of Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure order canceled by requesting physician or other authorized physician
    /// </summary>
    public static readonly Coding DoctorCanceledProcedure = new Coding
    {
      Code = "110500",
      Display = "Doctor canceled procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment failure prevented completion of procedure
    /// </summary>
    public static readonly Coding EquipmentFailure = new Coding
    {
      Code = "110501",
      Display = "Equipment failure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to incorrect procedure being ordered
    /// </summary>
    public static readonly Coding IncorrectProcedureOrdered = new Coding
    {
      Code = "110502",
      Display = "Incorrect procedure ordered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to patient allergy to media/contrast (reported or reaction)
    /// </summary>
    public static readonly Coding PatientAllergicToMediaContrast = new Coding
    {
      Code = "110503",
      Display = "Patient allergic to media/contrast",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to death of Patient
    /// </summary>
    public static readonly Coding PatientDied = new Coding
    {
      Code = "110504",
      Display = "Patient died",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to patient refusal to continue procedure
    /// </summary>
    public static readonly Coding PatientRefusedToContinueProcedure = new Coding
    {
      Code = "110505",
      Display = "Patient refused to continue procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to patient being taken for treatment or surgery
    /// </summary>
    public static readonly Coding PatientTakenForTreatmentOrSurgery = new Coding
    {
      Code = "110506",
      Display = "Patient taken for treatment or surgery",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient did not arrive for procedure
    /// </summary>
    public static readonly Coding PatientDidNotArrive = new Coding
    {
      Code = "110507",
      Display = "Patient did not arrive",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to patient pregnancy (reported or determined)
    /// </summary>
    public static readonly Coding PatientPregnant = new Coding
    {
      Code = "110508",
      Display = "Patient pregnant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued to restart with new procedure code for correct charging
    /// </summary>
    public static readonly Coding ChangeOfProcedureForCorrectCharging = new Coding
    {
      Code = "110509",
      Display = "Change of procedure for correct charging",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to duplicate orders received for same procedure
    /// </summary>
    public static readonly Coding DuplicateOrder = new Coding
    {
      Code = "110510",
      Display = "Duplicate order",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure order canceled by nursing unit
    /// </summary>
    public static readonly Coding NursingUnitCancel = new Coding
    {
      Code = "110511",
      Display = "Nursing unit cancel",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to incorrect side (laterality) being ordered
    /// </summary>
    public static readonly Coding IncorrectSideOrdered = new Coding
    {
      Code = "110512",
      Display = "Incorrect side ordered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued for unspecified reason
    /// </summary>
    public static readonly Coding DiscontinuedForUnspecifiedReason = new Coding
    {
      Code = "110513",
      Display = "Discontinued for unspecified reason",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to incorrect patient or procedure step selected from modality worklist
    /// </summary>
    public static readonly Coding IncorrectWorklistEntrySelected = new Coding
    {
      Code = "110514",
      Display = "Incorrect worklist entry selected",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient condition prevented continuation of procedure
    /// </summary>
    public static readonly Coding PatientConditionPreventedContinuing = new Coding
    {
      Code = "110515",
      Display = "Patient condition prevented continuing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure step is discontinued to change to other equipment or modality
    /// </summary>
    public static readonly Coding EquipmentChange = new Coding
    {
      Code = "110516",
      Display = "Equipment change",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A movement of the patient affecting test quality
    /// </summary>
    public static readonly Coding PatientMovement = new Coding
    {
      Code = "110518",
      Display = "Patient Movement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An error of the operator affecting test quality
    /// </summary>
    public static readonly Coding OperatorError = new Coding
    {
      Code = "110519",
      Display = "Operator Error",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// One or more of the objects is malformed
    /// </summary>
    public static readonly Coding ObjectsIncorrectlyFormatted = new Coding
    {
      Code = "110521",
      Display = "Objects incorrectly formatted",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Receiving System is unable to accept the object type
    /// </summary>
    public static readonly Coding ObjectTypesNotSupported = new Coding
    {
      Code = "110522",
      Display = "Object Types not supported",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// One or more objects associated with the object set is missing
    /// </summary>
    public static readonly Coding ObjectSetIncomplete = new Coding
    {
      Code = "110523",
      Display = "Object Set incomplete",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The contents of the Media could not be accessed properly
    /// </summary>
    public static readonly Coding MediaFailure = new Coding
    {
      Code = "110524",
      Display = "Media Failure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to necessary equipment, staff or other resource becoming (temporarily) unavailable to the procedure
    /// </summary>
    public static readonly Coding ResourcePreEmpted = new Coding
    {
      Code = "110526",
      Display = "Resource pre-empted",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure discontinued due to necessary equipment, staff or other resource being inadequate to complete the procedure
    /// </summary>
    public static readonly Coding ResourceInadequate = new Coding
    {
      Code = "110527",
      Display = "Resource inadequate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A new Procedure Step has been scheduled to replace the Discontinued Procedure Step
    /// </summary>
    public static readonly Coding DiscontinuedProcedureStepRescheduled = new Coding
    {
      Code = "110528",
      Display = "Discontinued Procedure Step rescheduled",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// It is recommended that a new Procedure Step be scheduled to replace the Discontinued Procedure Step
    /// </summary>
    public static readonly Coding DiscontinuedProcedureStepReschedulingRecommended = new Coding
    {
      Code = "110529",
      Display = "Discontinued Procedure Step rescheduling recommended",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ventral structures of the diencephalon that cannot readily be distinguished on MR imaging, including the hypothalamus, mammillary body, subthalamic nuclei, substantia nigra, red nucleus, lateral geniculate nucleus, medial geniculate nucleus, zona incerta, cerebral peduncle, lenticular fasciculus, medial lemniscus, and optic tract. See http://neuromorphometrics.org:8080/Seg/html/segmentation/ventral%20diencephalon.html
    /// </summary>
    public static readonly Coding VentralDiencephalon = new Coding
    {
      Code = "110700",
      Display = "Ventral Diencephalon",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Area(s) of reduced intensity on T1 weighted images relative to the surrounding white matter. These may be indicative of age-related or neurodegenerative white matter lesions, and may be co-located with areas of white matter T2 hyperintensity, but the concept is specifically confined to the MR appearance on T1 weighted images
    /// </summary>
    public static readonly Coding WhiteMatterT1Hypointensity = new Coding
    {
      Code = "110701",
      Display = "White Matter T1 Hypointensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Area(s) of increased intensity on T2 weighted images relative to the surrounding white matter. These may be indicative of age-related or neurodegenerative white matter lesions, and may be co-located with areas of white matter T1 hypointensity, but the concept is specifically confined to the MR appearance on T2 weighted images
    /// </summary>
    public static readonly Coding WhiteMatterT2Hyperintensity = new Coding
    {
      Code = "110702",
      Display = "White Matter T2 Hyperintensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The dorsal component of the SLF originating from the medial and dorsal parietal cortex and ending in the dorsal and medial part of the frontal lobe. See Makris N, et al. "Segmentation of Subcomponents within the Superior Longitudinal Fascicle in Humans: A Quantitative, In Vivo, DT-MRI Study." Cerebral Cortex 15, no. 6 (June 1, 2005): 854-69. doi:10.1093/cercor/bhh186
    /// </summary>
    public static readonly Coding SuperiorLongitudinalFasciculusI = new Coding
    {
      Code = "110703",
      Display = "superior longitudinal fasciculus I",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The major component of the SLF, derived from the caudal-inferior parietal region corresponding to the angular gyrus in the human and terminating within the dorsolateral frontal region. See Makris N, et al. "Segmentation of Subcomponents within the Superior Longitudinal Fascicle in Humans: A Quantitative, In Vivo, DT-MRI Study." Cerebral Cortex 15, no. 6 (June 1, 2005): 854-69. doi:10.1093/cercor/bhh186
    /// </summary>
    public static readonly Coding SuperiorLongitudinalFasciculusII = new Coding
    {
      Code = "110704",
      Display = "superior longitudinal fasciculus II",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The ventral component of the SLF, originating from the supramarginal gyrus and terminating predominantly in the ventral premotor and prefrontal areas. See Makris N, et al. "Segmentation of Subcomponents within the Superior Longitudinal Fascicle in Humans: A Quantitative, In Vivo, DT-MRI Study." Cerebral Cortex 15, no. 6 (June 1, 2005): 854-69. doi:10.1093/cercor/bhh186
    /// </summary>
    public static readonly Coding SuperiorLongitudinalFasciculusIII = new Coding
    {
      Code = "110705",
      Display = "superior longitudinal fasciculus III",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// White matter that surrounds a lesion of interest; e.g. to identify the otherwise unclassified white matter that surrounds a tumor to be surgically resected
    /// </summary>
    public static readonly Coding PerilesionalWhiteMatter = new Coding
    {
      Code = "110706",
      Display = "Perilesional White Matter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a Spin tagging Perfusion MR image. Spin tagging is a technique for the measurement of blood perfusion, based on magnetically labeled arterial blood water as an endogenous tracer
    /// </summary>
    public static readonly Coding SpinTaggingPerfusionMRSignalIntensity = new Coding
    {
      Code = "110800",
      Display = "Spin Tagging Perfusion MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a Contrast Agent Angio MR image
    /// </summary>
    public static readonly Coding ContrastAgentAngioMRSignalIntensity = new Coding
    {
      Code = "110801",
      Display = "Contrast Agent Angio MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a Time-of-flight (TOF) MR image. Time-of-flight (TOF) is based on the phenomenon of flow-related enhancement of spins entering into an imaging slice. As a result of being unsaturated, these spins give more signal that surrounding stationary spins
    /// </summary>
    public static readonly Coding TimeOfFlightAngioMRSignalIntensity = new Coding
    {
      Code = "110802",
      Display = "Time Of Flight Angio MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a Proton Density Weighted MR image. All MR images have intensity proportional to proton density. Images with very little T1 or T2 weighting are called 'PD-weighted'
    /// </summary>
    public static readonly Coding ProtonDensityWeightedMRSignalIntensity = new Coding
    {
      Code = "110803",
      Display = "Proton Density Weighted MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of T1 Weighted MR image. A T1 Weighted MR image is created typically by using short TE and TR times
    /// </summary>
    public static readonly Coding T1WeightedMRSignalIntensity = new Coding
    {
      Code = "110804",
      Display = "T1 Weighted MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a T2 Weighted MR image. T2 Weighted image contrast state is approached by imaging with a TR long compared to tissue T1 (to reduce T1 contribution to image contrast) and a TE between the longest and shortest tissue T2s of interest
    /// </summary>
    public static readonly Coding T2WeightedMRSignalIntensity = new Coding
    {
      Code = "110805",
      Display = "T2 Weighted MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a T2* Weighted MR image. The T2* phenomenon results from molecular interactions (spin spin relaxation) and local magnetic field non-uniformities, which cause the protons to precess at slightly different frequencies
    /// </summary>
    public static readonly Coding T2AsteriskWeightedMRSignalIntensity = new Coding
    {
      Code = "110806",
      Display = "T2* Weighted MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a Field Map MR image. A Field Map MR image provides a direct measure of the B 0 inhomogeneity at each point in the image
    /// </summary>
    public static readonly Coding FieldMapMRSignalIntensity = new Coding
    {
      Code = "110807",
      Display = "Field Map MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Coefficient reflecting the fractional anisotropy of the tissues, derived from a diffusion weighted MR image. Fractional anisotropy is proportional to the square root of the variance of the Eigen values divided by the square root of the sum of the squares of the Eigen values
    /// </summary>
    public static readonly Coding FractionalAnisotropy = new Coding
    {
      Code = "110808",
      Display = "Fractional Anisotropy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Coefficient reflecting the relative anisotropy of the tissues, derived from a diffusion weighted MR image
    /// </summary>
    public static readonly Coding RelativeAnisotropy = new Coding
    {
      Code = "110809",
      Display = "Relative Anisotropy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dxx Component of the diffusion tensor, quantifying the molecular mobility along the X axis
    /// </summary>
    public static readonly Coding VolumetricDiffusionDxxComponent = new Coding
    {
      Code = "110810",
      Display = "Volumetric Diffusion Dxx Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dxy Component of the diffusion tensor, quantifying the correlation of molecular displacements in the X and Y directions
    /// </summary>
    public static readonly Coding VolumetricDiffusionDxyComponent = new Coding
    {
      Code = "110811",
      Display = "Volumetric Diffusion Dxy Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dxz Component of the diffusion tensor, quantifying the correlation of molecular displacements in the X and Z directions
    /// </summary>
    public static readonly Coding VolumetricDiffusionDxzComponent = new Coding
    {
      Code = "110812",
      Display = "Volumetric Diffusion Dxz Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dyy Component of the diffusion tensor, quantifying the molecular mobility along the Y axis
    /// </summary>
    public static readonly Coding VolumetricDiffusionDyyComponent = new Coding
    {
      Code = "110813",
      Display = "Volumetric Diffusion Dyy Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dyz Component of the diffusion tensor, quantifying the correlation of molecular displacements in the Y and Z directions
    /// </summary>
    public static readonly Coding VolumetricDiffusionDyzComponent = new Coding
    {
      Code = "110814",
      Display = "Volumetric Diffusion Dyz Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dzz Component of the diffusion tensor, quantifying the molecular mobility along the Z axis
    /// </summary>
    public static readonly Coding VolumetricDiffusionDzzComponent = new Coding
    {
      Code = "110815",
      Display = "Volumetric Diffusion Dzz Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a T1 Weighted Dynamic Contrast Enhanced MR image. A T1 Weighted Dynamic Contrast Enhanced MR image reflects the dynamics of diffusion of the exogenous contrast media from the blood pool into the extra vascular extracellular space (EES) of the brain at a rate determined by the blood flow to the tissue, the permeability of the Brain Blood Barrier (BBB), and the surface area of the perfusing vessels
    /// </summary>
    public static readonly Coding T1WeightedDynamicContrastEnhancedMRSignalIntensity = new Coding
    {
      Code = "110816",
      Display = "T1 Weighted Dynamic Contrast Enhanced MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a T2 Weighted Dynamic Contrast Enhanced MR image. A T2 Weighted Dynamic Contrast Enhanced MR image reflects the T2 of tissue decrease as the Gd contrast agent bolus passes through the brain
    /// </summary>
    public static readonly Coding T2WeightedDynamicContrastEnhancedMRSignalIntensity = new Coding
    {
      Code = "110817",
      Display = "T2 Weighted Dynamic Contrast Enhanced MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a T2* Weighted Dynamic Contrast Enhanced MR image. A T2* Weighted Dynamic Contrast Enhanced MR image reflects the T2* of tissue decrease as the Gd contrast agent bolus passes through the brain
    /// </summary>
    public static readonly Coding T2AsteriskWeightedDynamicContrastEnhancedMRSignalIntensity = new Coding
    {
      Code = "110818",
      Display = "T2* Weighted Dynamic Contrast Enhanced MR Signal Intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of a Blood Oxygenation Level image. BOLD imaging is sensitive to blood oxygenation (but also to cerebral blood flow and volume). This modality is essentially used for detecting brain activation (functional MR)
    /// </summary>
    public static readonly Coding BloodOxygenationLevel = new Coding
    {
      Code = "110819",
      Display = "Blood Oxygenation Level",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Accumulated decay event counts in a nuclear medicine projection image
    /// </summary>
    public static readonly Coding NuclearMedicineProjectionActivity = new Coding
    {
      Code = "110820",
      Display = "Nuclear Medicine Projection Activity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Accumulated decay event counts in a Nuclear Medicine Tomographic image (including PET)
    /// </summary>
    public static readonly Coding NuclearMedicineTomographicActivity = new Coding
    {
      Code = "110821",
      Display = "Nuclear Medicine Tomographic Activity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Spatial Displacement along axis X of a non-linear deformable spatial registration image. The X axis is defined in reference to the patient's orientation, and is increasing to the left hand side of the patient
    /// </summary>
    public static readonly Coding SpatialDisplacementXComponent = new Coding
    {
      Code = "110822",
      Display = "Spatial Displacement X Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Spatial Displacement along axis Y of a non-linear deformable spatial registration image. The Y axis is defined in reference to the patient's orientation, and is increasing to the posterior side of the patient
    /// </summary>
    public static readonly Coding SpatialDisplacementYComponent = new Coding
    {
      Code = "110823",
      Display = "Spatial Displacement Y Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Spatial Displacement along axis Z of a non-linear deformable spatial registration image. The Z axis is defined in reference to the patient's orientation, and is increasing toward the head of the patient
    /// </summary>
    public static readonly Coding SpatialDisplacementZComponent = new Coding
    {
      Code = "110824",
      Display = "Spatial Displacement Z Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measured resistance to the flow of blood; e.g. through the vasculature or through a heart value
    /// </summary>
    public static readonly Coding HemodynamicResistance = new Coding
    {
      Code = "110825",
      Display = "Hemodynamic Resistance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measured resistance to the flow of blood; e.g. through the vasculature or through a heart value, normalized to a particular indexed scale
    /// </summary>
    public static readonly Coding IndexedHemodynamicResistance = new Coding
    {
      Code = "110826",
      Display = "Indexed Hemodynamic Resistance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Velocity of tissue based on Doppler measurements
    /// </summary>
    public static readonly Coding TissueVelocity = new Coding
    {
      Code = "110827",
      Display = "Tissue Velocity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Velocity of blood flow based on Doppler measurements
    /// </summary>
    public static readonly Coding FlowVelocity = new Coding
    {
      Code = "110828",
      Display = "Flow Velocity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Statistical variance of blood velocity relative to mean
    /// </summary>
    public static readonly Coding FlowVariance = new Coding
    {
      Code = "110829",
      Display = "Flow Variance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Scalar value related to the elastic properties of the tissue
    /// </summary>
    public static readonly Coding Elasticity = new Coding
    {
      Code = "110830",
      Display = "Elasticity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Scalar value related to the volume of blood perfusing into tissue
    /// </summary>
    public static readonly Coding Perfusion = new Coding
    {
      Code = "110831",
      Display = "Perfusion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Speed of sound in tissue
    /// </summary>
    public static readonly Coding SpeedOfSound = new Coding
    {
      Code = "110832",
      Display = "Speed of sound",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reduction in strength of ultrasound signal as the wave
    /// </summary>
    public static readonly Coding UltrasoundAttenuation = new Coding
    {
      Code = "110833",
      Display = "Ultrasound Attenuation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Red component of a true color image (RGB)
    /// </summary>
    public static readonly Coding RGBRComponent = new Coding
    {
      Code = "110834",
      Display = "RGB R Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Green component of a true color image (RGB)
    /// </summary>
    public static readonly Coding RGBGComponent = new Coding
    {
      Code = "110835",
      Display = "RGB G Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Blue component of a true color image (RGB)
    /// </summary>
    public static readonly Coding RGBBComponent = new Coding
    {
      Code = "110836",
      Display = "RGB B Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Y (Luminance) component of a YBR FULL image, as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRFULLYComponent = new Coding
    {
      Code = "110837",
      Display = "YBR FULL Y Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CB (Blue chrominance) component of a YBR FULL image, as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRFULLCBComponent = new Coding
    {
      Code = "110838",
      Display = "YBR FULL CB Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CR (Red chrominance) component of a YBR FULL image, as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRFULLCRComponent = new Coding
    {
      Code = "110839",
      Display = "YBR FULL CR Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Y (Luminance) component of a YBR PARTIAL image, as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRPARTIALYComponent = new Coding
    {
      Code = "110840",
      Display = "YBR PARTIAL Y Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CB (Blue chrominance) component of a YBR PARTIAL image, as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRPARTIALCBComponent = new Coding
    {
      Code = "110841",
      Display = "YBR PARTIAL CB Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CR (Red chrominance) component of a YBR PARTIAL image, as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRPARTIALCRComponent = new Coding
    {
      Code = "110842",
      Display = "YBR PARTIAL CR Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Y (Luminance) component of a YBR ICT image (Irreversible Color Transform), as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRICTYComponent = new Coding
    {
      Code = "110843",
      Display = "YBR ICT Y Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CB (Blue chrominance) component of a YBR ICT image (Irreversible Color Transform), as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRICTCBComponent = new Coding
    {
      Code = "110844",
      Display = "YBR ICT CB Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CR (Red chrominance) component of a YBR ICT image (Irreversible Color Transform), as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRICTCRComponent = new Coding
    {
      Code = "110845",
      Display = "YBR ICT CR Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Y (Luminance) component of a YBR RCT image (Reversible Color Transform), as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRRCTYComponent = new Coding
    {
      Code = "110846",
      Display = "YBR RCT Y Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CB (Blue chrominance) component of a YBR RCT image (Reversible Color Transform), as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRRCTCBComponent = new Coding
    {
      Code = "110847",
      Display = "YBR RCT CB Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CR (Red chrominance) component of a YBR RCT image (Reversible Color Transform), as defined in JPEG 2000
    /// </summary>
    public static readonly Coding YBRRCTCRComponent = new Coding
    {
      Code = "110848",
      Display = "YBR RCT CR Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The ability of a material to create an ultrasound return echo
    /// </summary>
    public static readonly Coding Echogenicity = new Coding
    {
      Code = "110849",
      Display = "Echogenicity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Decrease in the number of photons in an X-Ray beam due to interactions with the atoms of a material substance. Attenuation is due primarily to two processes, absorption and scattering
    /// </summary>
    public static readonly Coding XRayAttenuation = new Coding
    {
      Code = "110850",
      Display = "X-Ray Attenuation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity of an MR image, not otherwise specified
    /// </summary>
    public static readonly Coding MRSignalIntensity = new Coding
    {
      Code = "110852",
      Display = "MR signal intensity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Binary value denoting that the segmented property is present
    /// </summary>
    public static readonly Coding BinarySegmentation = new Coding
    {
      Code = "110853",
      Display = "Binary Segmentation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Probability, defined as a percentage, that the segmented property occupies the spatial area defined by the voxel
    /// </summary>
    public static readonly Coding FractionalProbabilisticSegmentation = new Coding
    {
      Code = "110854",
      Display = "Fractional Probabilistic Segmentation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Percentage of the voxel area occupied by the segmented property
    /// </summary>
    public static readonly Coding FractionalOccupancySegmentation = new Coding
    {
      Code = "110855",
      Display = "Fractional Occupancy Segmentation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Spatial dimension, denoting a linear displacement
    /// </summary>
    public static readonly Coding LinearDisplacement = new Coding
    {
      Code = "110856",
      Display = "Linear Displacement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dimension denoting the energy (frequency or wavelength) of photons
    /// </summary>
    public static readonly Coding PhotonEnergy = new Coding
    {
      Code = "110857",
      Display = "Photon Energy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dimension used to sequence events, to compare the duration of events and the intervals between events
    /// </summary>
    public static readonly Coding Time = new Coding
    {
      Code = "110858",
      Display = "Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Spatial dimension, denoting an angle
    /// </summary>
    public static readonly Coding Angle = new Coding
    {
      Code = "110859",
      Display = "Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A spatial dimension axis running along a line between the patient's left and right side
    /// </summary>
    public static readonly Coding LeftRightAxis = new Coding
    {
      Code = "110860",
      Display = "Left-Right Axis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A spatial dimension axis running along a line between the patient's head and foot
    /// </summary>
    public static readonly Coding HeadFootAxis = new Coding
    {
      Code = "110861",
      Display = "Head-Foot Axis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A spatial dimension axis running along a line between the patient's anterior and posterior sides
    /// </summary>
    public static readonly Coding AnteriorPosteriorAxis = new Coding
    {
      Code = "110862",
      Display = "Anterior-Posterior Axis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A spatial dimension axis running along a line between the apex and base of an organ, object, or chamber
    /// </summary>
    public static readonly Coding ApexBaseAxis = new Coding
    {
      Code = "110863",
      Display = "Apex-Base Axis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A spatial dimension axis running along a line between the anterior and inferior sides of an organ, object, or chamber
    /// </summary>
    public static readonly Coding AnteriorInferiorAxis = new Coding
    {
      Code = "110864",
      Display = "Anterior-Inferior Axis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A spatial dimension axis running along a line between the septum and wall of a chamber
    /// </summary>
    public static readonly Coding SeptumWallAxis = new Coding
    {
      Code = "110865",
      Display = "Septum-Wall Axis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the right to the left side of the patient
    /// </summary>
    public static readonly Coding RightToLeft = new Coding
    {
      Code = "110866",
      Display = "Right To Left",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the left to the right side of the patient
    /// </summary>
    public static readonly Coding LeftToRight = new Coding
    {
      Code = "110867",
      Display = "Left To Right",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the head to the foot of the patient
    /// </summary>
    public static readonly Coding HeadToFoot = new Coding
    {
      Code = "110868",
      Display = "Head To Foot",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the foot to the head of the patient
    /// </summary>
    public static readonly Coding FootToHead = new Coding
    {
      Code = "110869",
      Display = "Foot To Head",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the anterior to the posterior side of the patient
    /// </summary>
    public static readonly Coding AnteriorToPosterior = new Coding
    {
      Code = "110870",
      Display = "Anterior To Posterior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the posterior to the anterior side of the patient
    /// </summary>
    public static readonly Coding PosteriorToAnterior = new Coding
    {
      Code = "110871",
      Display = "Posterior To Anterior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the apex to the base
    /// </summary>
    public static readonly Coding ApexToBase = new Coding
    {
      Code = "110872",
      Display = "Apex To Base",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the base to the apex
    /// </summary>
    public static readonly Coding BaseToApex = new Coding
    {
      Code = "110873",
      Display = "Base To Apex",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the anterior to the inferior
    /// </summary>
    public static readonly Coding AnteriorToInferior = new Coding
    {
      Code = "110874",
      Display = "Anterior To Inferior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the inferior to the anterior
    /// </summary>
    public static readonly Coding InferiorToAnterior = new Coding
    {
      Code = "110875",
      Display = "Inferior To Anterior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the septum of a chamber to the opposite wall
    /// </summary>
    public static readonly Coding SeptumToWall = new Coding
    {
      Code = "110876",
      Display = "Septum To Wall",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of a spatial dimension where increasing values run from the opposite wall to the septum of a chamber
    /// </summary>
    public static readonly Coding WallToSeptum = new Coding
    {
      Code = "110877",
      Display = "Wall To Septum",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The x coordinate of the upper left hand corner (center of the first voxel transmitted) of the image, with respect to the patient-based coordinate system
    /// </summary>
    public static readonly Coding ImagePositionPatientX = new Coding
    {
      Code = "110901",
      Display = "Image Position (Patient) X",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The y coordinate of the upper left hand corner (center of the first voxel transmitted) of the image, with respect to the patient-based coordinate system
    /// </summary>
    public static readonly Coding ImagePositionPatientY = new Coding
    {
      Code = "110902",
      Display = "Image Position (Patient) Y",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The z coordinate of the upper left hand corner (center of the first voxel transmitted) of the image, with respect to the patient-based coordinate system
    /// </summary>
    public static readonly Coding ImagePositionPatientZ = new Coding
    {
      Code = "110903",
      Display = "Image Position (Patient) Z",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The x value of the first row direction cosine with respect to the patient, with respect to the patient-based coordinate system
    /// </summary>
    public static readonly Coding ImageOrientationPatientRowX = new Coding
    {
      Code = "110904",
      Display = "Image Orientation (Patient) Row X",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The y value of the first row direction cosine with respect to the patient, with respect to the patient-based coordinate system
    /// </summary>
    public static readonly Coding ImageOrientationPatientRowY = new Coding
    {
      Code = "110905",
      Display = "Image Orientation (Patient) Row Y",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The z value of the first row direction cosine with respect to the patient, with respect to the patient-based coordinate system
    /// </summary>
    public static readonly Coding ImageOrientationPatientRowZ = new Coding
    {
      Code = "110906",
      Display = "Image Orientation (Patient) Row Z",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The x value of the first column direction cosine with respect to the patient, with respect to the patient-based coordinate system
    /// </summary>
    public static readonly Coding ImageOrientationPatientColumnX = new Coding
    {
      Code = "110907",
      Display = "Image Orientation (Patient) Column X",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The y value of the first column direction cosine with respect to the patient, with respect to the patient-based coordinate system
    /// </summary>
    public static readonly Coding ImageOrientationPatientColumnY = new Coding
    {
      Code = "110908",
      Display = "Image Orientation (Patient) Column Y",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The z value of the first column direction cosine with respect to the patient, with respect to the patient-based coordinate system
    /// </summary>
    public static readonly Coding ImageOrientationPatientColumnZ = new Coding
    {
      Code = "110909",
      Display = "Image Orientation (Patient) Column Z",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of rows in the pixel data of the image
    /// </summary>
    public static readonly Coding PixelDataRows = new Coding
    {
      Code = "110910",
      Display = "Pixel Data Rows",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of columns in the pixel data of the image
    /// </summary>
    public static readonly Coding PixelDataColumns = new Coding
    {
      Code = "110911",
      Display = "Pixel Data Columns",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The name assigned by a manufacturer to a specific software algorithm
    /// </summary>
    public static readonly Coding AlgorithmName = new Coding
    {
      Code = "111001",
      Display = "Algorithm Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The input parameters used by a manufacturer to configure the behavior of a specific software algorithm
    /// </summary>
    public static readonly Coding AlgorithmParameters = new Coding
    {
      Code = "111002",
      Display = "Algorithm Parameters",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The software version identifier assigned by a manufacturer to a specific software algorithm
    /// </summary>
    public static readonly Coding AlgorithmVersion = new Coding
    {
      Code = "111003",
      Display = "Algorithm Version",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The type of correlation applied to detection results; e.g. temporal, spatial
    /// </summary>
    public static readonly Coding AnalysisPerformed = new Coding
    {
      Code = "111004",
      Display = "Analysis Performed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assignment of intermediate or overall interpretation results to a general category
    /// </summary>
    public static readonly Coding AssessmentCategory = new Coding
    {
      Code = "111005",
      Display = "Assessment Category",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Purpose of reference for an SCOORD content item that is an outline of the breast that includes the pectoral muscle tissue
    /// </summary>
    public static readonly Coding BreastOutlineIncludingPectoralMuscleTissue = new Coding
    {
      Code = "111007",
      Display = "Breast Outline including Pectoral Muscle Tissue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The type of distribution associated with detected calcifications
    /// </summary>
    public static readonly Coding CalcificationDistribution = new Coding
    {
      Code = "111008",
      Display = "Calcification Distribution",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identification of the morphology of detected calcifications
    /// </summary>
    public static readonly Coding CalcificationType = new Coding
    {
      Code = "111009",
      Display = "Calcification Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Purpose of reference for an SCOORD content item that identifies the central point of a finding or feature
    /// </summary>
    public static readonly Coding Center = new Coding
    {
      Code = "111010",
      Display = "Center",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The likelihood that the feature analyzed is in fact the type of feature identified
    /// </summary>
    public static readonly Coding CertaintyOfFeature = new Coding
    {
      Code = "111011",
      Display = "Certainty of Feature",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The likelihood that the finding detected is in fact the type of finding identified
    /// </summary>
    public static readonly Coding CertaintyOfFinding = new Coding
    {
      Code = "111012",
      Display = "Certainty of Finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The certainty that a device places on an impression, where 0 equals no certainty and 100 equals certainty
    /// </summary>
    public static readonly Coding CertaintyOfImpression = new Coding
    {
      Code = "111013",
      Display = "Certainty of Impression",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A location identifier based on clock-face numbering or anatomic sub-region
    /// </summary>
    public static readonly Coding ClockfaceOrRegion = new Coding
    {
      Code = "111014",
      Display = "Clockface or region",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An item that is an inferred correlation relating two or more individual findings or features
    /// </summary>
    public static readonly Coding CompositeFeature = new Coding
    {
      Code = "111015",
      Display = "Composite Feature",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The inferred relationship between the findings or features making up a composite feature
    /// </summary>
    public static readonly Coding CompositeType = new Coding
    {
      Code = "111016",
      Display = "Composite type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// General assessment of whether or not CAD processing was successful, and whether any findings resulted
    /// </summary>
    public static readonly Coding CADProcessingAndFindingsSummary = new Coding
    {
      Code = "111017",
      Display = "CAD Processing and Findings Summary",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The date the data creation started
    /// </summary>
    public static readonly Coding ContentDate = new Coding
    {
      Code = "111018",
      Display = "Content Date",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time the data creation started
    /// </summary>
    public static readonly Coding ContentTime = new Coding
    {
      Code = "111019",
      Display = "Content Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A location identifier based on a feature's inferred distance from the surface of the associated anatomy
    /// </summary>
    public static readonly Coding Depth = new Coding
    {
      Code = "111020",
      Display = "Depth",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A textual description of the change that occurred over time in a qualitative characteristic of a feature
    /// </summary>
    public static readonly Coding DescriptionOfChange = new Coding
    {
      Code = "111021",
      Display = "Description of Change",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The type of finding sought after by a specific algorithm applied to one image
    /// </summary>
    public static readonly Coding DetectionPerformed = new Coding
    {
      Code = "111022",
      Display = "Detection Performed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A general change that occurred within an imaged area between a prior imaging procedure and the current imaging procedure
    /// </summary>
    public static readonly Coding DifferentialDiagnosisImpression = new Coding
    {
      Code = "111023",
      Display = "Differential Diagnosis/Impression",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A group of analysis algorithms that were attempted, but failed
    /// </summary>
    public static readonly Coding FailedAnalyses = new Coding
    {
      Code = "111024",
      Display = "Failed Analyses",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A group of detection algorithms that were attempted, but failed
    /// </summary>
    public static readonly Coding FailedDetections = new Coding
    {
      Code = "111025",
      Display = "Failed Detections",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For projection radiography, the horizontal physical distance measured at the front plane of an Image Receptor housing between the center of each pixel. For tomographic images, the horizontal physical distance in the patient between the center of each pixel
    /// </summary>
    public static readonly Coding HorizontalPixelSpacing = new Coding
    {
      Code = "111026",
      Display = "Horizontal Pixel Spacing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Laterality of (possibly paired) body part contained in an image
    /// </summary>
    public static readonly Coding ImageLaterality = new Coding
    {
      Code = "111027",
      Display = "Image Laterality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A container that references all image data used as evidence to produce a report
    /// </summary>
    public static readonly Coding ImageLibrary = new Coding
    {
      Code = "111028",
      Display = "Image Library",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A numeric value in the range 0 to 100, inclusive, where 0 is worst quality and 100 is best quality
    /// </summary>
    public static readonly Coding ImageQualityRating = new Coding
    {
      Code = "111029",
      Display = "Image Quality Rating",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Purpose of reference for an SCOORD content item that identifies a specific region of interest within an image
    /// </summary>
    public static readonly Coding ImageRegion = new Coding
    {
      Code = "111030",
      Display = "Image Region",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The projection of the anatomic region of interest on an image receptor
    /// </summary>
    public static readonly Coding ImageView = new Coding
    {
      Code = "111031",
      Display = "Image View",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Modifier for Image View
    /// </summary>
    public static readonly Coding ImageViewModifier = new Coding
    {
      Code = "111032",
      Display = "Image View Modifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Free-form text describing the overall or an individual impression
    /// </summary>
    public static readonly Coding ImpressionDescription = new Coding
    {
      Code = "111033",
      Display = "Impression Description",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A container for a group of related results from interpretation of one or more images and associated clinical information
    /// </summary>
    public static readonly Coding IndividualImpressionRecommendation = new Coding
    {
      Code = "111034",
      Display = "Individual Impression/Recommendation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The X-Ray attenuation of a lesion relative to the expected attenuation of an equal volume of fibroglandular breast tissue
    /// </summary>
    public static readonly Coding LesionDensity = new Coding
    {
      Code = "111035",
      Display = "Lesion Density",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A structured report containing the results of computer-aided detection or diagnosis applied to breast imaging and associated clinical information
    /// </summary>
    public static readonly Coding MammographyCADReport = new Coding
    {
      Code = "111036",
      Display = "Mammography CAD Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The characteristic of the boundary, edges or border of a detected lesion
    /// </summary>
    public static readonly Coding Margins = new Coding
    {
      Code = "111037",
      Display = "Margins",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The quantity of calcifications detected within an identified group or cluster
    /// </summary>
    public static readonly Coding NumberOfCalcifications = new Coding
    {
      Code = "111038",
      Display = "Number of calcifications",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A non-lesion object identified within one or more images
    /// </summary>
    public static readonly Coding ObjectType = new Coding
    {
      Code = "111039",
      Display = "Object type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Purpose of reference for a COMPOSITE content item that identifies it as the original source of evidence for another content item in the report
    /// </summary>
    public static readonly Coding OriginalSource = new Coding
    {
      Code = "111040",
      Display = "Original Source",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Purpose of reference for an SCOORD content item that identifies the outline or bounding region of a finding or feature
    /// </summary>
    public static readonly Coding Outline = new Coding
    {
      Code = "111041",
      Display = "Outline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The inferred type of disease associated with an identified feature
    /// </summary>
    public static readonly Coding Pathology = new Coding
    {
      Code = "111042",
      Display = "Pathology",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The patient orientation relative to the image plane, specified by a value that designates the anatomical direction of the positive column axis (top to bottom)
    /// </summary>
    public static readonly Coding PatientOrientationColumn = new Coding
    {
      Code = "111043",
      Display = "Patient Orientation Column",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The patient orientation relative to the image plane, specified by a value that designates the anatomical direction of the positive row axis (left to right)
    /// </summary>
    public static readonly Coding PatientOrientationRow = new Coding
    {
      Code = "111044",
      Display = "Patient Orientation Row",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Purpose of reference for an SCOORD content item that is an outline of the pectoral muscle tissue only
    /// </summary>
    public static readonly Coding PectoralMuscleOutline = new Coding
    {
      Code = "111045",
      Display = "Pectoral Muscle Outline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Percent of breast area that is mammographically dense, excluding pectoralis muscle
    /// </summary>
    public static readonly Coding PercentFibroglandularTissue = new Coding
    {
      Code = "111046",
      Display = "Percent Fibroglandular Tissue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The likelihood that an identified finding or feature is cancerous
    /// </summary>
    public static readonly Coding ProbabilityOfCancer = new Coding
    {
      Code = "111047",
      Display = "Probability of cancer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A location identifier based on the division of an area into four regions
    /// </summary>
    public static readonly Coding QuadrantLocation = new Coding
    {
      Code = "111048",
      Display = "Quadrant location",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative characteristic of a feature that has changed over time
    /// </summary>
    public static readonly Coding QualitativeDifference = new Coding
    {
      Code = "111049",
      Display = "Qualitative Difference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The effect of the quality of an image on its usability
    /// </summary>
    public static readonly Coding QualityAssessment = new Coding
    {
      Code = "111050",
      Display = "Quality Assessment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The quality control standard used to make a quality assessment
    /// </summary>
    public static readonly Coding QualityControlStandard = new Coding
    {
      Code = "111051",
      Display = "Quality Control Standard",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A specific quality related deficiency detected within an image
    /// </summary>
    public static readonly Coding QualityFinding = new Coding
    {
      Code = "111052",
      Display = "Quality Finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Recommended type of follow-up to an imaging procedure, based on interpreted results
    /// </summary>
    public static readonly Coding RecommendedFollowUp = new Coding
    {
      Code = "111053",
      Display = "Recommended Follow-up",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Recommended follow-up date to an imaging procedure, based on interpreted results
    /// </summary>
    public static readonly Coding RecommendedFollowUpDate = new Coding
    {
      Code = "111054",
      Display = "Recommended Follow-up Date",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Recommended follow-up interval to an imaging procedure, based on interpreted results
    /// </summary>
    public static readonly Coding RecommendedFollowUpInterval = new Coding
    {
      Code = "111055",
      Display = "Recommended Follow-up Interval",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The recommendation of the producer of a content item regarding presentation of the content item by recipients of the report
    /// </summary>
    public static readonly Coding RenderingIntent = new Coding
    {
      Code = "111056",
      Display = "Rendering Intent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication of how widespread the detection of a feature is within the analyzed image data set
    /// </summary>
    public static readonly Coding ScopeOfFeature = new Coding
    {
      Code = "111057",
      Display = "Scope of Feature",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A textual description of the contents of a selected region identified within an image
    /// </summary>
    public static readonly Coding SelectedRegionDescription = new Coding
    {
      Code = "111058",
      Display = "Selected Region Description",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An item that was detected on one image
    /// </summary>
    public static readonly Coding SingleImageFinding = new Coding
    {
      Code = "111059",
      Display = "Single Image Finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Date on which the acquisition of the study information was started
    /// </summary>
    public static readonly Coding StudyDate = new Coding
    {
      Code = "111060",
      Display = "Study Date",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time at which the acquisition of the study information was started
    /// </summary>
    public static readonly Coding StudyTime = new Coding
    {
      Code = "111061",
      Display = "Study Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A group of analysis algorithms that were attempted and completed successfully
    /// </summary>
    public static readonly Coding SuccessfulAnalyses = new Coding
    {
      Code = "111062",
      Display = "Successful Analyses",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A group of detection algorithms that were attempted and completed successfully
    /// </summary>
    public static readonly Coding SuccessfulDetections = new Coding
    {
      Code = "111063",
      Display = "Successful Detections",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An overall indication of whether the CAD detection algorithms applied were completed successfully
    /// </summary>
    public static readonly Coding SummaryOfDetections = new Coding
    {
      Code = "111064",
      Display = "Summary of Detections",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An overall indication of whether the CAD analysis algorithms applied were completed successfully
    /// </summary>
    public static readonly Coding SummaryOfAnalyses = new Coding
    {
      Code = "111065",
      Display = "Summary of Analyses",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For projection radiography, the vertical physical distance measured at the front plane of an Image Receptor housing between the center of each pixel. For tomographic images, the vertical physical distance in the patient between the center of each pixel
    /// </summary>
    public static readonly Coding VerticalPixelSpacing = new Coding
    {
      Code = "111066",
      Display = "Vertical Pixel Spacing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A radiographic projection that has been with the patient lying on a table with the X-Ray source on one side of the table and the detector on the other; e.g. may describe a cross-table cervical spine, chest or pelvis X-Ray image
    /// </summary>
    public static readonly Coding Crosstable = new Coding
    {
      Code = "111069",
      Display = "Crosstable",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// One of a number of discrete points on the Receiver-Operator Characteristics (ROC) curve that reflects the expected sensitivity and specificity of a CAD algorithm, where zero indicates the highest specificity, lowest sensitivity operating point. The value should not exceed the Maximum CAD Operating Point
    /// </summary>
    public static readonly Coding CADOperatingPoint = new Coding
    {
      Code = "111071",
      Display = "CAD Operating Point",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The maximum value of CAD Operating Point for the specific CAD algorithm used
    /// </summary>
    public static readonly Coding MaximumCADOperatingPoint = new Coding
    {
      Code = "111072",
      Display = "Maximum CAD Operating Point",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The intended interpretation of a CAD Operating Point
    /// </summary>
    public static readonly Coding CADOperatingPointDescription = new Coding
    {
      Code = "111081",
      Display = "CAD Operating Point Description",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The number of false CAD markers per image. Correlates to inverse of Image Specificity
    /// </summary>
    public static readonly Coding FalseMarkersPerImage = new Coding
    {
      Code = "111086",
      Display = "False Markers per Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The number of false markers per collection of images that are CAD processed as a group. Correlates to inverse of Case Specificity
    /// </summary>
    public static readonly Coding FalseMarkersPerCase = new Coding
    {
      Code = "111087",
      Display = "False Markers per Case",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The percentage of cancers that should be detected by a CAD algorithm where CAD marks the cancers in at least one view
    /// </summary>
    public static readonly Coding CaseSensitivity = new Coding
    {
      Code = "111088",
      Display = "Case Sensitivity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The percentage of cancers that should be detected by a CAD algorithm where CAD marks the cancers in each view
    /// </summary>
    public static readonly Coding LesionSensitivity = new Coding
    {
      Code = "111089",
      Display = "Lesion Sensitivity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The percentage of cases (collections of images CAD processed as a group) without cancer that have no CAD findings whatsoever. Correlates to inverse of False Markers per Case
    /// </summary>
    public static readonly Coding CaseSpecificity = new Coding
    {
      Code = "111090",
      Display = "Case Specificity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The percentage of images without cancer that have no CAD findings whatsoever. Correlates to inverse of False Markers per Image
    /// </summary>
    public static readonly Coding ImageSpecificity = new Coding
    {
      Code = "111091",
      Display = "Image Specificity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The CAD operating point that is recommended for initial display by the creator of the structured report
    /// </summary>
    public static readonly Coding RecommendedCADOperatingPoint = new Coding
    {
      Code = "111092",
      Display = "Recommended CAD Operating Point",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A list of CAD operating points including their corresponding characteristics
    /// </summary>
    public static readonly Coding CADOperatingPointTable = new Coding
    {
      Code = "111093",
      Display = "CAD Operating Point Table",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A specific area of interest noted within an image
    /// </summary>
    public static readonly Coding SelectedRegion = new Coding
    {
      Code = "111099",
      Display = "Selected region",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The surface shape of all or a portion of breast related anatomy
    /// </summary>
    public static readonly Coding BreastGeometry = new Coding
    {
      Code = "111100",
      Display = "Breast geometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality incorporates the following clinical image evaluation parameters: assessment of positioning, compression, artifacts, exposure, contrast, sharpness, and labeling
    /// </summary>
    public static readonly Coding ImageQuality = new Coding
    {
      Code = "111101",
      Display = "Image Quality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A finding or feature that is identified as a non-anatomic foreign object
    /// </summary>
    public static readonly Coding NonLesion = new Coding
    {
      Code = "111102",
      Display = "Non-lesion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Straightening or thickening of Cooper's ligaments
    /// </summary>
    public static readonly Coding CooperQuoteSLigamentChanges = new Coding
    {
      Code = "111111",
      Display = "Cooper's ligament changes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An abnormality noted at imaging within the dermis of the breast
    /// </summary>
    public static readonly Coding MassInTheSkin = new Coding
    {
      Code = "111112",
      Display = "Mass in the skin",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An abnormality noted at imaging on the epidermis of the breast
    /// </summary>
    public static readonly Coding MassOnTheSkin = new Coding
    {
      Code = "111113",
      Display = "Mass on the skin",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An assessment category to indicate that images have been acquired to assess marker placement following a breast interventional procedure
    /// </summary>
    public static readonly Coding PostProcedureMammogramsForMarkerPlacement = new Coding
    {
      Code = "111120",
      Display = "Post Procedure Mammograms for Marker Placement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that the patient should seek post procedural follow-up directives from a clinical health care provider
    /// </summary>
    public static readonly Coding FollowUpPostBiopsyAsDirectedByClinician = new Coding
    {
      Code = "111121",
      Display = "Follow-up post biopsy as directed by clinician",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A recommendation on a patient with known cancer to take steps appropriate to the diagnosis
    /// </summary>
    public static readonly Coding KnownBiopsyProvenMalignancyTakeAppropriateAction = new Coding
    {
      Code = "111122",
      Display = "Known biopsy proven malignancy - take appropriate action",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Positioning of a radiopaque marker
    /// </summary>
    public static readonly Coding MarkerPlacement = new Coding
    {
      Code = "111123",
      Display = "Marker placement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient has previous diagnosis of breast cancer resulting in mastectomy
    /// </summary>
    public static readonly Coding PersonalHistoryOfBreastCancerWithMastectomy = new Coding
    {
      Code = "111124",
      Display = "Personal history of breast cancer with mastectomy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient has had biopsy containing proven malignancy
    /// </summary>
    public static readonly Coding KnownBiopsyProvenMalignancy = new Coding
    {
      Code = "111125",
      Display = "Known biopsy proven malignancy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient has a finding of mass reported on a prior imaging exam
    /// </summary>
    public static readonly Coding ImageDetectedMass = new Coding
    {
      Code = "111126",
      Display = "Image detected mass",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A breast imaging procedure performed on a specific area of the breast
    /// </summary>
    public static readonly Coding Targeted = new Coding
    {
      Code = "111127",
      Display = "Targeted",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A breast imaging procedure performed on the entire breast
    /// </summary>
    public static readonly Coding Survey = new Coding
    {
      Code = "111128",
      Display = "Survey",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A cluster of tiny anechoic foci each smaller than 2-3 mm in diameter with thin (less than 0.5 mm) intervening septations and no discrete solid components
    /// </summary>
    public static readonly Coding ClusteredMicrocysts = new Coding
    {
      Code = "111129",
      Display = "Clustered microcysts",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A fluid filled mass most commonly characterized by homogeneous low-level internal echoes on ultrasound
    /// </summary>
    public static readonly Coding ComplicatedCyst = new Coding
    {
      Code = "111130",
      Display = "Complicated cyst",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Views not inclusive of MLO and CC (BI-RADS®)
    /// </summary>
    public static readonly Coding AdditionalProjections = new Coding
    {
      Code = "111135",
      Display = "Additional projections",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A spot or coned down compression of the breast providing a reduction in the thickness and a magnification of the localized area of interest and improved separation of breast tissue
    /// </summary>
    public static readonly Coding SpotMagnificationViewS = new Coding
    {
      Code = "111136",
      Display = "Spot magnification view(s)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Obtain previous mammography studies to compare to present study
    /// </summary>
    public static readonly Coding OldFilmsForComparison = new Coding
    {
      Code = "111138",
      Display = "Old films for comparison",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Follow up study at 12 months for women 40 years of age having a prior negative study and no mitigating risk factors for breast cancer
    /// </summary>
    public static readonly Coding NormalIntervalFollowUp = new Coding
    {
      Code = "111140",
      Display = "Normal interval follow-up",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Any decision to perform tissue acquisition should be based on clinical assessment
    /// </summary>
    public static readonly Coding AnyDecisionToBiopsyShouldBeBasedOnClinicalAssessment = new Coding
    {
      Code = "111141",
      Display = "Any decision to biopsy should be based on clinical assessment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Follow-up at short interval (1-11 months)
    /// </summary>
    public static readonly Coding FollowUpAtShortInterval111Months = new Coding
    {
      Code = "111142",
      Display = "Follow-up at short interval (1-11 months)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Tissue acquisition should be considered
    /// </summary>
    public static readonly Coding BiopsyShouldBeConsidered = new Coding
    {
      Code = "111143",
      Display = "Biopsy should be considered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Breast tissue acquisition following the identification of an area of concern with the placement of a needle or needle-wire assembly
    /// </summary>
    public static readonly Coding NeedleLocalizationAndBiopsy = new Coding
    {
      Code = "111144",
      Display = "Needle localization and biopsy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pathologic analysis of breast tissue and lesions using core tissue samples
    /// </summary>
    public static readonly Coding HistologyUsingCoreBiopsy = new Coding
    {
      Code = "111145",
      Display = "Histology using core biopsy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lesions that do not have the characteristic morphologies of breast cancer but have a definite probability of being malignant. There is a sufficient concern to urge a biopsy
    /// </summary>
    public static readonly Coding SuggestiveOfMalignancyTakeAppropriateAction = new Coding
    {
      Code = "111146",
      Display = "Suggestive of malignancy - take appropriate action",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Cellular analysis of specimen
    /// </summary>
    public static readonly Coding CytologicAnalysis = new Coding
    {
      Code = "111147",
      Display = "Cytologic analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Tissue acquisition should be strongly considered
    /// </summary>
    public static readonly Coding BiopsyShouldBeStronglyConsidered = new Coding
    {
      Code = "111148",
      Display = "Biopsy should be strongly considered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lesions have a high probability of being cancer, which require additional action
    /// </summary>
    public static readonly Coding HighlySuggestiveOfMalignancyTakeAppropriateAction = new Coding
    {
      Code = "111149",
      Display = "Highly suggestive of malignancy - take appropriate action",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The producer of a report intends for a recipient of the report to present or display the associated content item
    /// </summary>
    public static readonly Coding PresentationRequiredRenderingDeviceIsExpectedToPresent = new Coding
    {
      Code = "111150",
      Display = "Presentation Required: Rendering device is expected to present",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The producer of a report considers the presentation or display of the associated content item by a recipient to be optional
    /// </summary>
    public static readonly Coding PresentationOptionalRenderingDeviceMayPresent = new Coding
    {
      Code = "111151",
      Display = "Presentation Optional: Rendering device may present",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The producer of a report intends for a recipient of the report NOT to present or display the associated content item
    /// </summary>
    public static readonly Coding NotForPresentationRenderingDeviceExpectedNotToPresent = new Coding
    {
      Code = "111152",
      Display = "Not for Presentation: Rendering device expected not to present",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The associated content items are identified as being the same finding or feature at different points in time
    /// </summary>
    public static readonly Coding TargetContentItemsAreRelatedTemporally = new Coding
    {
      Code = "111153",
      Display = "Target content items are related temporally",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The associated content items are identified as being the same finding or feature on different projections taken at the same point in time
    /// </summary>
    public static readonly Coding TargetContentItemsAreRelatedSpatially = new Coding
    {
      Code = "111154",
      Display = "Target content items are related spatially",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The associated content items are identified as being related side-to-side
    /// </summary>
    public static readonly Coding TargetContentItemsAreRelatedContraLaterally = new Coding
    {
      Code = "111155",
      Display = "Target content items are related contra-laterally",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// There is one image in the interpreted data set
    /// </summary>
    public static readonly Coding FeatureDetectedOnTheOnlyImage = new Coding
    {
      Code = "111156",
      Display = "Feature detected on the only image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// There is more than one image of the same modality in the interpreted data set
    /// </summary>
    public static readonly Coding FeatureDetectedOnOnlyOneOfTheImages = new Coding
    {
      Code = "111157",
      Display = "Feature detected on only one of the images",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// There is more than one image of the same modality in the interpreted data set
    /// </summary>
    public static readonly Coding FeatureDetectedOnMultipleImages = new Coding
    {
      Code = "111158",
      Display = "Feature detected on multiple images",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The interpreted data set contains images from multiple modalities
    /// </summary>
    public static readonly Coding FeatureDetectedOnImagesFromMultipleModalities = new Coding
    {
      Code = "111159",
      Display = "Feature detected on images from multiple modalities",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Site specific markers
    /// </summary>
    public static readonly Coding OtherMarker = new Coding
    {
      Code = "111175",
      Display = "Other Marker",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The value of the concept is not specified
    /// </summary>
    public static readonly Coding Unspecified = new Coding
    {
      Code = "111176",
      Display = "Unspecified",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQSA
    /// </summary>
    public static readonly Coding ViewAndLateralityMarkerIsMissing = new Coding
    {
      Code = "111177",
      Display = "View and Laterality Marker is missing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding ViewAndLateralityMarkerDoesNotHaveBothViewAndLaterality = new Coding
    {
      Code = "111178",
      Display = "View and Laterality Marker does not have both view and laterality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding ViewAndLateralityMarkerDoesNotHaveApprovedCodes = new Coding
    {
      Code = "111179",
      Display = "View and Laterality Marker does not have approved codes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding ViewAndLateralityMarkerIsNotNearTheAxilla = new Coding
    {
      Code = "111180",
      Display = "View and Laterality Marker is not near the axilla",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding ViewAndLateralityMarkerOverlapsBreastTissue = new Coding
    {
      Code = "111181",
      Display = "View and Laterality Marker overlaps breast tissue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding ViewAndLateralityMarkerIsPartiallyObscured = new Coding
    {
      Code = "111182",
      Display = "View and Laterality Marker is partially obscured",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency
    /// </summary>
    public static readonly Coding ViewAndLateralityMarkerIsIncorrect = new Coding
    {
      Code = "111183",
      Display = "View and Laterality Marker is incorrect",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency
    /// </summary>
    public static readonly Coding ViewAndLateralityMarkerIsOffImage = new Coding
    {
      Code = "111184",
      Display = "View and Laterality Marker is off image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding FlashIsNotNearEdgeOfFilm = new Coding
    {
      Code = "111185",
      Display = "Flash is not near edge of film",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQSA
    /// </summary>
    public static readonly Coding FlashIsIlligibleDoesNotFitOrIsLopsided = new Coding
    {
      Code = "111186",
      Display = "Flash is illigible, does not fit, or is lopsided",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding FlashDoesnQuoteTIncludePatientNameAndAdditionalPatientId = new Coding
    {
      Code = "111187",
      Display = "Flash doesn't include patient name and additional patient id",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding FlashDoesnQuoteTIncludeDateOfExamination = new Coding
    {
      Code = "111188",
      Display = "Flash doesn't include date of examination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQSA
    /// </summary>
    public static readonly Coding FlashDoesnQuoteTIncludeFacilityNameAndLocation = new Coding
    {
      Code = "111189",
      Display = "Flash doesn't include facility name and location",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding FlashDoesnQuoteTIncludeTechnologistIdentification = new Coding
    {
      Code = "111190",
      Display = "Flash doesn't include technologist identification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding FlashDoesnQuoteTIncludeCassetteScreenDetectorIdentification = new Coding
    {
      Code = "111191",
      Display = "Flash doesn't include cassette/screen/detector identification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding FlashDoesnQuoteTIncludeMammographyUnitIdentification = new Coding
    {
      Code = "111192",
      Display = "Flash doesn't include mammography unit identification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding DateStickerIsMissing = new Coding
    {
      Code = "111193",
      Display = "Date sticker is missing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding TechnicalFactorsMissing = new Coding
    {
      Code = "111194",
      Display = "Technical factors missing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding CollimationTooCloseToBreast = new Coding
    {
      Code = "111195",
      Display = "Collimation too close to breast",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding InadequateCompression = new Coding
    {
      Code = "111196",
      Display = "Inadequate compression",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding MLOInsufficientPectoralMuscle = new Coding
    {
      Code = "111197",
      Display = "MLO Insufficient pectoral muscle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding MLONoFatIsVisualizedPosteriorToFibroglandularTissues = new Coding
    {
      Code = "111198",
      Display = "MLO No fat is visualized posterior to fibroglandular tissues",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding MLOPoorSeparationOfDeepAndSuperficialBreastTissues = new Coding
    {
      Code = "111199",
      Display = "MLO Poor separation of deep and superficial breast tissues",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding MLOEvidenceOfMotionBlur = new Coding
    {
      Code = "111200",
      Display = "MLO Evidence of motion blur",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding MLOInframammaryFoldIsNotOpen = new Coding
    {
      Code = "111201",
      Display = "MLO Inframammary fold is not open",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding CCNotAllMedialTissueVisualized = new Coding
    {
      Code = "111202",
      Display = "CC Not all medial tissue visualized",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding CCNippleNotCenteredOnImage = new Coding
    {
      Code = "111203",
      Display = "CC Nipple not centered on image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding CCPosteriorNippleLineDoesNotMeasureWithin1CmOfMLO = new Coding
    {
      Code = "111204",
      Display = "CC Posterior nipple line does not measure within 1 cm of MLO",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency
    /// </summary>
    public static readonly Coding NippleNotInProfile = new Coding
    {
      Code = "111205",
      Display = "Nipple not in profile",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image quality deficiency according to MQCM
    /// </summary>
    public static readonly Coding InsufficientImplantDisplacementIncorrect = new Coding
    {
      Code = "111206",
      Display = "Insufficient implant displacement incorrect",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signals that do not faithfully reproduce actual anatomic structures because of distortion or of addition or deletion of information
    /// </summary>
    public static readonly Coding ImageArtifactS = new Coding
    {
      Code = "111207",
      Display = "Image artifact(s)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Feature(s) arising from the acquisition unit's anti-scatter grid mechanism. For two-dimensional systems, such features include those of mechanically damaged or incorrectly positioned grids. For moving or Bucky grids, artifacts may result from intentional grid motion that is inadequate in duration or velocity uniformity
    /// </summary>
    public static readonly Coding GridArtifactS = new Coding
    {
      Code = "111208",
      Display = "Grid artifact(s)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Inadequate arrangement of the anatomy of interest with respect to the X-Ray field and image detector sensitive area. Examples: 1) positioning is "cutoff" when the projection of anatomy of interest falls outside the sensitive area of the detector; 2) "cone cut", in which the X-Ray field does not adequately cover the anatomy of interest; 3) detector's sensitive surface is too small to cover the projection of the anatomy of interest; 4) improper angular orientation or "rotation" of anatomy of interest with respect to the X-Ray source, or detector; 5) projection of other anatomy or clothing over the anatomy of interest in the image
    /// </summary>
    public static readonly Coding Positioning = new Coding
    {
      Code = "111209",
      Display = "Positioning",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unacceptable image blur resulting from motion of the anatomy of interest during exposure or the inadequately compensated motion of X-Ray source with respect to the image detector during exposure
    /// </summary>
    public static readonly Coding MotionBlur = new Coding
    {
      Code = "111210",
      Display = "Motion blur",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Inadequate number of quanta reached the detector during exposure. Reasons for under exposed images include low kVp, low mAs product, excess Source Image Distance. Under exposed images have inadequate signal and higher noise in the areas of interest
    /// </summary>
    public static readonly Coding UnderExposed = new Coding
    {
      Code = "111211",
      Display = "Under exposed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An excess number of quanta reached the detector during exposure. Reasons for over exposed images include high kVp, high mAs product, short Source Image Distance. Over exposed images have high signal and lower noise in the areas of interest. Over exposed area may demonstrate lack of contrast from over saturation of the detector
    /// </summary>
    public static readonly Coding OverExposed = new Coding
    {
      Code = "111212",
      Display = "Over exposed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No evidence of a patient exposure
    /// </summary>
    public static readonly Coding NoImage = new Coding
    {
      Code = "111213",
      Display = "No image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Superposed features or flaws of the detector
    /// </summary>
    public static readonly Coding DetectorArtifactS = new Coding
    {
      Code = "111214",
      Display = "Detector artifact(s)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Features or discontinuities arising from causes other than the anti-scatter grid and image detector
    /// </summary>
    public static readonly Coding ArtifactSOtherThanGridOrDetectorArtifact = new Coding
    {
      Code = "111215",
      Display = "Artifact(s) other than grid or detector artifact",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Failure of the device to operate according to mechanical design specifications
    /// </summary>
    public static readonly Coding MechanicalFailure = new Coding
    {
      Code = "111216",
      Display = "Mechanical failure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Failure of a device to operate according to electrical design specifications
    /// </summary>
    public static readonly Coding ElectricalFailure = new Coding
    {
      Code = "111217",
      Display = "Electrical failure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Attributable to software used in generation or handling of image
    /// </summary>
    public static readonly Coding SoftwareFailure = new Coding
    {
      Code = "111218",
      Display = "Software failure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Images processed inappropriately, not following appropriate protocol
    /// </summary>
    public static readonly Coding InappropriateImageProcessing = new Coding
    {
      Code = "111219",
      Display = "Inappropriate image processing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Failure that is not mechanical or electrical or otherwise described
    /// </summary>
    public static readonly Coding OtherFailure = new Coding
    {
      Code = "111220",
      Display = "Other failure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unidentified or unknown cause of failure
    /// </summary>
    public static readonly Coding UnknownFailure = new Coding
    {
      Code = "111221",
      Display = "Unknown failure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The attempted process was completely successful
    /// </summary>
    public static readonly Coding Succeeded = new Coding
    {
      Code = "111222",
      Display = "Succeeded",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The attempted process succeeded in some ways, but failed in others
    /// </summary>
    public static readonly Coding PartiallySucceeded = new Coding
    {
      Code = "111223",
      Display = "Partially Succeeded",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The attempted process completely failed
    /// </summary>
    public static readonly Coding Failed = new Coding
    {
      Code = "111224",
      Display = "Failed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No process was performed
    /// </summary>
    public static readonly Coding NotAttempted = new Coding
    {
      Code = "111225",
      Display = "Not Attempted",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Analysis of a related group of findings or features detected during image data inspection, to produce a summary impression and/or recommendation
    /// </summary>
    public static readonly Coding IndividualImpressionRecommendationAnalysis = new Coding
    {
      Code = "111233",
      Display = "Individual Impression / Recommendation Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Analysis of all groups of findings or features, to produce a single impression and/or recommendation
    /// </summary>
    public static readonly Coding OverallImpressionRecommendationAnalysis = new Coding
    {
      Code = "111234",
      Display = "Overall Impression / Recommendation Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The usability of an image for diagnostic interpretation or CAD, based on a quality control standard
    /// </summary>
    public static readonly Coding UnusableQualityRendersImageUnusable = new Coding
    {
      Code = "111235",
      Display = "Unusable - Quality renders image unusable",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The usability of an image for diagnostic interpretation or CAD, based on a quality control standard
    /// </summary>
    public static readonly Coding UsableDoesNotMeetTheQualityControlStandard = new Coding
    {
      Code = "111236",
      Display = "Usable - Does not meet the quality control standard",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The usability of an image for diagnostic interpretation or CAD, based on a quality control standard
    /// </summary>
    public static readonly Coding UsableMeetsTheQualityControlStandard = new Coding
    {
      Code = "111237",
      Display = "Usable - Meets the quality control standard",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image quality control standard specified by the American College of Radiology
    /// </summary>
    public static readonly Coding MammographyQualityControlManual1999ACR = new Coding
    {
      Code = "111238",
      Display = "Mammography Quality Control Manual 1999, ACR",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image quality control standard in the US Code of Federal Regulations
    /// </summary>
    public static readonly Coding Title21CFRSection900SubpartB = new Coding
    {
      Code = "111239",
      Display = "Title 21 CFR Section 900, Subpart B",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image quality control standard specified or adopted by the institution responsible for the document
    /// </summary>
    public static readonly Coding InstitutionallyDefinedQualityControlStandard = new Coding
    {
      Code = "111240",
      Display = "Institutionally defined quality control standard",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No findings resulted upon successful completion of all attempted computer-aided detection and/or analysis
    /// </summary>
    public static readonly Coding AllAlgorithmsSucceededWithoutFindings = new Coding
    {
      Code = "111241",
      Display = "All algorithms succeeded; without findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// One or more findings resulted upon successful completion of all attempted computer-aided detection and/or analysis
    /// </summary>
    public static readonly Coding AllAlgorithmsSucceededWithFindings = new Coding
    {
      Code = "111242",
      Display = "All algorithms succeeded; with findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No findings resulted from the attempted computer-aided detection and/or analysis, but one or more failures occurred in the process
    /// </summary>
    public static readonly Coding NotAllAlgorithmsSucceededWithoutFindings = new Coding
    {
      Code = "111243",
      Display = "Not all algorithms succeeded; without findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// One or more findings resulted from the attempted computer-aided detection and/or analysis, but one or more failures occurred in the process
    /// </summary>
    public static readonly Coding NotAllAlgorithmsSucceededWithFindings = new Coding
    {
      Code = "111244",
      Display = "Not all algorithms succeeded; with findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// All of the attempted computer-aided detection and/or analysis failed, so there could be no findings
    /// </summary>
    public static readonly Coding NoAlgorithmsSucceededWithoutFindings = new Coding
    {
      Code = "111245",
      Display = "No algorithms succeeded; without findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Axillary node that is normal in appearance with no associated pathology
    /// </summary>
    public static readonly Coding NormalAxillaryNode = new Coding
    {
      Code = "111251",
      Display = "Normal axillary node",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Axillary node containing calcifications
    /// </summary>
    public static readonly Coding AxillaryNodeWithCalcifications = new Coding
    {
      Code = "111252",
      Display = "Axillary node with calcifications",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Excessive proliferation of normal tissue arrangement of the axillary node
    /// </summary>
    public static readonly Coding AxillaryNodeHyperplasia = new Coding
    {
      Code = "111253",
      Display = "Axillary node hyperplasia",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Cyst with benign morphology containing blood
    /// </summary>
    public static readonly Coding BenignCystWithBlood = new Coding
    {
      Code = "111255",
      Display = "Benign cyst with blood",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calcifications having typically benign morphology. They are not of intermediate or high probability of concern for malignancy
    /// </summary>
    public static readonly Coding BenignCalcifications = new Coding
    {
      Code = "111256",
      Display = "Benign Calcifications",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Adenoma located in mammary duct, present as discrete sclerotic nodules, solitary or multiple
    /// </summary>
    public static readonly Coding DuctalAdenoma = new Coding
    {
      Code = "111258",
      Display = "Ductal adenoma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The occurrence of fibrous tumor-forming stromal proliferation in patients with diabetes mellitus
    /// </summary>
    public static readonly Coding DiabeticFibrousMastopathy = new Coding
    {
      Code = "111259",
      Display = "Diabetic fibrous mastopathy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Excessive proliferation of fibroadenoma tissue
    /// </summary>
    public static readonly Coding FibroadenomatoidHyperplasia = new Coding
    {
      Code = "111263",
      Display = "Fibroadenomatoid hyperplasia",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A lipoma with an abundant stroma of fibrous tissue
    /// </summary>
    public static readonly Coding Fibroadenolipoma = new Coding
    {
      Code = "111264",
      Display = "Fibroadenolipoma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A form of fibrocystic disease in young woman with florid and sclerosing adenosis that microscopically may suggest carcinoma
    /// </summary>
    public static readonly Coding JuvenilePapillomatosis = new Coding
    {
      Code = "111277",
      Display = "Juvenile papillomatosis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Changes related to the process of lactation
    /// </summary>
    public static readonly Coding LactationalChange = new Coding
    {
      Code = "111279",
      Display = "Lactational change",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A papilloma pertaining to large mammary duct
    /// </summary>
    public static readonly Coding LargeDuctPapilloma = new Coding
    {
      Code = "111281",
      Display = "Large duct papilloma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Irregular clusters of small tubules are present in adipose or fibrous tissue, resembling tubular carcinoma but lacking stromal fibroblastic proliferation
    /// </summary>
    public static readonly Coding MicroglandularAdenosis = new Coding
    {
      Code = "111284",
      Display = "Microglandular adenosis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Papilloma typically involving an aggregate of adjacent ducts in the periphery of the breast, likely representing involvement of several foci of one or two duct systems
    /// </summary>
    public static readonly Coding MultipleIntraductalPapillomas = new Coding
    {
      Code = "111285",
      Display = "Multiple Intraductal Papillomas",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No abnormality
    /// </summary>
    public static readonly Coding NoAbnormality = new Coding
    {
      Code = "111286",
      Display = "No abnormality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Normal breast tissue
    /// </summary>
    public static readonly Coding NormalBreastTissue = new Coding
    {
      Code = "111287",
      Display = "Normal breast tissue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A cyst resulting from the loss of the epithelial lining of a sebaceous dermoid or lacteal cyst
    /// </summary>
    public static readonly Coding OilCystFatNecrosisCyst = new Coding
    {
      Code = "111290",
      Display = "Oil cyst (fat necrosis cyst)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Breast tissue with characteristics of a benign nature, following breast reduction surgery
    /// </summary>
    public static readonly Coding PostReductionMammoplasty = new Coding
    {
      Code = "111291",
      Display = "Post reduction mammoplasty",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A benign stromal lesion composed of intermixed stromal and epithelial elements. The lobular and duct structures of the breast parenchyma are separated by an increased amount of stroma, non specific proliferative epithelial changes include hyperplasia of duct and lobular epithelium often with accentuation of myoepithelial cells and aprocine metaplasia with or without cyst formation
    /// </summary>
    public static readonly Coding PseudoangiomatousStromalHyperplasia = new Coding
    {
      Code = "111292",
      Display = "Pseudoangiomatous stromal hyperplasia",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nodular inflammatory lesions due to the presence of silicone in the breast tissue
    /// </summary>
    public static readonly Coding SiliconeGranuloma = new Coding
    {
      Code = "111296",
      Display = "Silicone granuloma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The morphologic status of the nipple
    /// </summary>
    public static readonly Coding NippleCharacteristic = new Coding
    {
      Code = "111297",
      Display = "Nipple Characteristic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Spontaneous excessive proliferation of breast tissue, usually found in younger women
    /// </summary>
    public static readonly Coding VirginalHyperplasia = new Coding
    {
      Code = "111298",
      Display = "Virginal hyperplasia",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Papilloma(s) pertaining the peripheral ducts
    /// </summary>
    public static readonly Coding PeripheralDuctPapillomas = new Coding
    {
      Code = "111299",
      Display = "Peripheral duct papillomas",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Axillary node with lymphoid tissue neoplasm
    /// </summary>
    public static readonly Coding AxillaryNodeWithLymphoma = new Coding
    {
      Code = "111300",
      Display = "Axillary node with lymphoma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Metastatic disease to the axillary node
    /// </summary>
    public static readonly Coding AxillaryNodalMetastases = new Coding
    {
      Code = "111301",
      Display = "Axillary nodal metastases",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Histological changes to the vascular system related to an invasive process
    /// </summary>
    public static readonly Coding BloodVesselVascularInvasion = new Coding
    {
      Code = "111303",
      Display = "Blood vessel (vascular) invasion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Carcinoma of the breast found in patients less than 20 years of age
    /// </summary>
    public static readonly Coding CarcinomaInChildren = new Coding
    {
      Code = "111304",
      Display = "Carcinoma in children",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A carcinoma found in supernumerary breasts and aberrant breast tissue
    /// </summary>
    public static readonly Coding CarcinomaInEctopicBreast = new Coding
    {
      Code = "111305",
      Display = "Carcinoma in ectopic breast",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A carcinoma that synthesizes substances, including hormones, not considered to be normal products of the breast
    /// </summary>
    public static readonly Coding CarcinomaWithEndocrineDifferentiation = new Coding
    {
      Code = "111306",
      Display = "Carcinoma with endocrine differentiation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A basal cell carcinoma that arises in the nipple of the breast
    /// </summary>
    public static readonly Coding BasalCellCarcinomaOfNipple = new Coding
    {
      Code = "111307",
      Display = "Basal cell carcinoma of nipple",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Tissue changes to bones and cartilage
    /// </summary>
    public static readonly Coding CartilaginousAndOsseousChange = new Coding
    {
      Code = "111309",
      Display = "Cartilaginous and osseous change",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Carcinoma of the breast presenting during pregnancy or lactation
    /// </summary>
    public static readonly Coding CarcinomaInPregnancyAndLactation = new Coding
    {
      Code = "111310",
      Display = "Carcinoma in pregnancy and lactation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Comedocarcinoma of a duct with areas of necrotic tissue
    /// </summary>
    public static readonly Coding IntraductalComedocarcinomaWithNecrosis = new Coding
    {
      Code = "111312",
      Display = "Intraductal comedocarcinoma with necrosis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A non-invasive carcinoma restricted to the glandular lumen characterized by less aggressive malignant cytologic features and behavior
    /// </summary>
    public static readonly Coding IntraductalCarcinomaLowGrade = new Coding
    {
      Code = "111313",
      Display = "Intraductal carcinoma, low grade",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignant neoplasm characterized by the formation of numerous, irregular, finger-like projections of fibrous stroma that is covered with a surface layer of neoplastic epithelial cells found in a cyst
    /// </summary>
    public static readonly Coding IntracysticPapillaryCarcinoma = new Coding
    {
      Code = "111315",
      Display = "Intracystic papillary carcinoma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Carcinoma with both characteristics of localized and spreading disease
    /// </summary>
    public static readonly Coding InvasiveAndInSituCarcinoma = new Coding
    {
      Code = "111316",
      Display = "Invasive and in-situ carcinoma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mammary infiltrates as a secondary manifestation in patients with established leukemia
    /// </summary>
    public static readonly Coding LeukemicInfiltration = new Coding
    {
      Code = "111318",
      Display = "Leukemic infiltration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Histological changes to the lymphatic system related to an invasive process
    /// </summary>
    public static readonly Coding LympathicVesselInvasion = new Coding
    {
      Code = "111320",
      Display = "Lympathic vessel invasion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A small carcinoma, either asymptomatic or giving rise to metastases without symptoms due to the primary carcinoma presenting with metastatic disease in the axillary lymph nodes
    /// </summary>
    public static readonly Coding OccultCarcinomaPresentingWithAxillaryLymphNodeMetastases = new Coding
    {
      Code = "111322",
      Display = "Occult carcinoma presenting with axillary lymph node metastases",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignant lesion in the breast with morphologic patterns not typical of breast carcinoma arising from a non-mammary malignant neoplasm
    /// </summary>
    public static readonly Coding MetastaticCancerToTheBreast = new Coding
    {
      Code = "111323",
      Display = "Metastatic cancer to the breast",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignant lesion in the breast with morphologic patterns not typical of breast carcinoma arising from a neoplasm in the colon
    /// </summary>
    public static readonly Coding MetastaticCancerToTheBreastFromTheColon = new Coding
    {
      Code = "111324",
      Display = "Metastatic cancer to the breast from the colon",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignant lesion in the breast with morphologic patterns not typical of breast carcinoma arising from a neoplasm in the lung
    /// </summary>
    public static readonly Coding MetastaticCancerToTheBreastFromTheLung = new Coding
    {
      Code = "111325",
      Display = "Metastatic cancer to the breast from the lung",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignant lesion in the breast with morphologic patterns not typical of breast carcinoma arising from a melanoma
    /// </summary>
    public static readonly Coding MetastaticMelanomaToTheBreast = new Coding
    {
      Code = "111326",
      Display = "Metastatic melanoma to the breast",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignant lesion in the breast with morphologic patterns not typical of breast carcinoma arising from a neoplasm in the ovary
    /// </summary>
    public static readonly Coding MetastaticCancerToTheBreastFromTheOvary = new Coding
    {
      Code = "111327",
      Display = "Metastatic cancer to the breast from the ovary",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignant lesion in the breast with morphologic patterns not typical of breast carcinoma arising from a sarcoma
    /// </summary>
    public static readonly Coding MetastaticSarcomaToTheBreast = new Coding
    {
      Code = "111328",
      Display = "Metastatic sarcoma to the breast",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Multiple foci of non-invasive carcinoma restricted to the glandular lumen
    /// </summary>
    public static readonly Coding MultifocalIntraductalCarcinoma = new Coding
    {
      Code = "111329",
      Display = "Multifocal intraductal carcinoma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignant lesion in an axillary node arising from a non-axillary neoplasm
    /// </summary>
    public static readonly Coding MetastaticDiseaseToAxillaryNode = new Coding
    {
      Code = "111330",
      Display = "Metastatic disease to axillary node",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Multiple sites of ductal carcinoma
    /// </summary>
    public static readonly Coding MultifocalInvasiveDuctalCarcinoma = new Coding
    {
      Code = "111332",
      Display = "Multifocal invasive ductal carcinoma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignant lesion in a intramammary lymph node arising from a non-intramammary lymph node neoplasm
    /// </summary>
    public static readonly Coding MetastasisToAnIntramammaryLymphNode = new Coding
    {
      Code = "111333",
      Display = "Metastasis to an intramammary lymph node",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignant melanoma of the skin that arises in the nipple of the breast
    /// </summary>
    public static readonly Coding MalignantMelanomaOfNipple = new Coding
    {
      Code = "111334",
      Display = "Malignant melanoma of nipple",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Recurrent malignancy
    /// </summary>
    public static readonly Coding RecurrentMalignancy = new Coding
    {
      Code = "111338",
      Display = "Recurrent malignancy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Squamous cell carcinoma to the terminal portion of the alveolar
    /// </summary>
    public static readonly Coding SquamousCellCarcinomaOfTheNipple = new Coding
    {
      Code = "111340",
      Display = "Squamous cell carcinoma of the nipple",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A non-invasive carcinoma restricted to the glandular lumen characterized by more aggressive malignant cytologic features and behavior
    /// </summary>
    public static readonly Coding IntraductalCarcinomaHighGrade = new Coding
    {
      Code = "111341",
      Display = "Intraductal carcinoma, high grade",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that some or all of the margin of a lesion has sharp corners, often forming acute angles
    /// </summary>
    public static readonly Coding AngularMargins = new Coding
    {
      Code = "111343",
      Display = "Angular margins",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calcifications that vary in sizes and shapes and are usually smaller than0.5 mm in diameter
    /// </summary>
    public static readonly Coding FinePleomorphicCalcification = new Coding
    {
      Code = "111344",
      Display = "Fine pleomorphic calcification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Coarse calcifications that are 0.5 mm or greater in size
    /// </summary>
    public static readonly Coding Macrocalcifications = new Coding
    {
      Code = "111345",
      Display = "Macrocalcifications",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that calcifications are imbedded within a mass
    /// </summary>
    public static readonly Coding CalcificationsWithinAMass = new Coding
    {
      Code = "111346",
      Display = "Calcifications within a mass",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that calcifications are imaged outside of a mass finding
    /// </summary>
    public static readonly Coding CalcificationsOutsideOfAMass = new Coding
    {
      Code = "111347",
      Display = "Calcifications outside of a mass",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Tissue composition of the breast noted on sonography
    /// </summary>
    public static readonly Coding BreastBackgroundEchotexture = new Coding
    {
      Code = "111350",
      Display = "Breast background echotexture",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fat lobules and uniformly echogenic bands of supporting structures comprise the bulk of breast tissue
    /// </summary>
    public static readonly Coding HomogeneousFatEchotexture = new Coding
    {
      Code = "111351",
      Display = "Homogeneous fat echotexture",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A uniformly echogenic layer of fibroglandular tissue is seen beneath a thin layer of subcutaneous fat
    /// </summary>
    public static readonly Coding HomogeneousFibroglandularEchotexture = new Coding
    {
      Code = "111352",
      Display = "Homogeneous fibroglandular echotexture",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The breast texture is characterized by multiple small areas of increased and decreased echogenicity
    /// </summary>
    public static readonly Coding HeterogeneousEchotexture = new Coding
    {
      Code = "111353",
      Display = "Heterogeneous echotexture",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Referential relationship of the finding to the imaging device as noted on sonography
    /// </summary>
    public static readonly Coding Orientation = new Coding
    {
      Code = "111354",
      Display = "Orientation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The long axis of a lesion parallels the skin line ("wider-than-tall" or in a horizontal orientation)
    /// </summary>
    public static readonly Coding Parallel = new Coding
    {
      Code = "111355",
      Display = "Parallel",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The anterior-posterior or vertical dimension is greater than the transverse or horizontal dimension
    /// </summary>
    public static readonly Coding NotParallel = new Coding
    {
      Code = "111356",
      Display = "Not parallel",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The lesion boundary describes the transition zone between themas and the surrounding tissue
    /// </summary>
    public static readonly Coding LesionBoundary = new Coding
    {
      Code = "111357",
      Display = "Lesion boundary",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The sharp demarcation between the lesion and surrounding tissue can be imperceptible or a distinct well-defined echogenic rim of any thickness
    /// </summary>
    public static readonly Coding AbruptInterface = new Coding
    {
      Code = "111358",
      Display = "Abrupt interface",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// There is no sharp demarcation between the mass and the surrounding tissue, which is bridged by an echogenic transition zone
    /// </summary>
    public static readonly Coding EchogenicHalo = new Coding
    {
      Code = "111359",
      Display = "Echogenic halo",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An imaging characteristic of resonance noted during sonography
    /// </summary>
    public static readonly Coding EchoPattern = new Coding
    {
      Code = "111360",
      Display = "Echo pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Without internal echoes
    /// </summary>
    public static readonly Coding Anechoic = new Coding
    {
      Code = "111361",
      Display = "Anechoic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Having increased echogenicity relative to fat or equal to fibroglandular tissue
    /// </summary>
    public static readonly Coding Hyperechoic = new Coding
    {
      Code = "111362",
      Display = "Hyperechoic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mass contains both anechoic and echogenic components
    /// </summary>
    public static readonly Coding Complex = new Coding
    {
      Code = "111363",
      Display = "Complex",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Defined relative to fat; masses are characterized by low-level echoes throughout; e.g. appearance of a complicated cyst or fibroadenoma
    /// </summary>
    public static readonly Coding Hypoechoic = new Coding
    {
      Code = "111364",
      Display = "Hypoechoic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Having the same echogenicity as fat (a complicated cyst or fibroadenoma may be isoechoic or hypoechoic)
    /// </summary>
    public static readonly Coding Isoechoic = new Coding
    {
      Code = "111365",
      Display = "Isoechoic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The attenuation characteristics of a mass with respect to its acoustic transmission
    /// </summary>
    public static readonly Coding PosteriorAcousticFeatures = new Coding
    {
      Code = "111366",
      Display = "Posterior acoustic features",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No posterior shadowing or enhancement
    /// </summary>
    public static readonly Coding NoPosteriorAcousticFeatures = new Coding
    {
      Code = "111367",
      Display = "No posterior acoustic features",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Increased posterior echoes
    /// </summary>
    public static readonly Coding PosteriorEnhancement = new Coding
    {
      Code = "111368",
      Display = "Posterior enhancement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Decreased posterior echoes; edge shadows are excluded
    /// </summary>
    public static readonly Coding PosteriorShadowing = new Coding
    {
      Code = "111369",
      Display = "Posterior shadowing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// More than one pattern of posterior attenuation, both shadowing and enhancement
    /// </summary>
    public static readonly Coding CombinedPosteriorEnhancementAndShadowing = new Coding
    {
      Code = "111370",
      Display = "Combined posterior enhancement and shadowing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Sonographic appearance of adjacent structures relative to a mass finding
    /// </summary>
    public static readonly Coding IdentifiableEffectOnSurroundingTissues = new Coding
    {
      Code = "111371",
      Display = "Identifiable effect on surrounding tissues",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Characterization of vascularization in region of interest
    /// </summary>
    public static readonly Coding Vascularity = new Coding
    {
      Code = "111372",
      Display = "Vascularity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vascularity not evident, such as on ultrasound
    /// </summary>
    public static readonly Coding VascularityNotPresent = new Coding
    {
      Code = "111373",
      Display = "Vascularity not present",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vascularity not evaluated
    /// </summary>
    public static readonly Coding VascularityNotAssessed = new Coding
    {
      Code = "111374",
      Display = "Vascularity not assessed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vascularity on imaging is seen within a lesion
    /// </summary>
    public static readonly Coding VascularityPresentInLesion = new Coding
    {
      Code = "111375",
      Display = "Vascularity present in lesion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vascularity on imaging is seen immediately adjacent to a lesion
    /// </summary>
    public static readonly Coding VascularityPresentImmediatelyAdjacentToLesion = new Coding
    {
      Code = "111376",
      Display = "Vascularity present immediately adjacent to lesion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vascularity on imaging is considered diffusely elevated within the surrounding breast tissue
    /// </summary>
    public static readonly Coding DiffuselyIncreasedVascularityInSurroundingTissue = new Coding
    {
      Code = "111377",
      Display = "Diffusely increased vascularity in surrounding tissue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Relationship of the new anomaly to other clinical or imaging anomalies
    /// </summary>
    public static readonly Coding CorrelationToOtherFindings = new Coding
    {
      Code = "111380",
      Display = "Correlation to other Findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that the current imaging finding relates to a finding from a clinical breast exam
    /// </summary>
    public static readonly Coding CorrelatesToPhysicalExamFindings = new Coding
    {
      Code = "111381",
      Display = "Correlates to physical exam findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that the current imaging finding relates to a finding from a mammography exam
    /// </summary>
    public static readonly Coding CorrelatesToMammographyFindings = new Coding
    {
      Code = "111382",
      Display = "Correlates to mammography findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that the current imaging finding relates to a finding from a breast MRI exam
    /// </summary>
    public static readonly Coding CorrelatesToMRIFindings = new Coding
    {
      Code = "111383",
      Display = "Correlates to MRI findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that the current imaging finding relates to a finding from a breast ultrasound exam
    /// </summary>
    public static readonly Coding CorrelatesToUltrasoundFindings = new Coding
    {
      Code = "111384",
      Display = "Correlates to ultrasound findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that the current imaging finding relates to a finding from an imaging exam
    /// </summary>
    public static readonly Coding CorrelatesToOtherImagingFindings = new Coding
    {
      Code = "111385",
      Display = "Correlates to other imaging findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that the current imaging finding has no relation to findings from any other imaging exam
    /// </summary>
    public static readonly Coding NoCorrelationToOtherImagingFindings = new Coding
    {
      Code = "111386",
      Display = "No correlation to other imaging findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that the current imaging finding has no relation to any other clinical findings
    /// </summary>
    public static readonly Coding NoCorrelationToClinicalFindings = new Coding
    {
      Code = "111387",
      Display = "No correlation to clinical findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Classification of the cancer as invasive, DCIS, or other
    /// </summary>
    public static readonly Coding MalignancyType = new Coding
    {
      Code = "111388",
      Display = "Malignancy Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A malignancy that has spread beyond an area of focus
    /// </summary>
    public static readonly Coding InvasiveBreastCarcinoma = new Coding
    {
      Code = "111389",
      Display = "Invasive breast carcinoma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A breast cancer with malignant pathology findings that are not classified as invasive or in situ
    /// </summary>
    public static readonly Coding OtherMalignancyType = new Coding
    {
      Code = "111390",
      Display = "Other malignancy type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A specific timeframe during menses
    /// </summary>
    public static readonly Coding MenstrualCyclePhase = new Coding
    {
      Code = "111391",
      Display = "Menstrual Cycle Phase",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// In the first week of the menstrual cycle phase, that is, one week following menses
    /// </summary>
    public static readonly Coding VAL1stWeek = new Coding
    {
      Code = "111392",
      Display = "1st week",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// In the second week of the menstrual cycle phase, that is, two weeks following menses
    /// </summary>
    public static readonly Coding VAL2ndWeek = new Coding
    {
      Code = "111393",
      Display = "2nd week",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// In the third week of the menstrual cycle phase, that is, three weeks following menses
    /// </summary>
    public static readonly Coding VAL3rdWeek = new Coding
    {
      Code = "111394",
      Display = "3rd week",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An estimated period of time
    /// </summary>
    public static readonly Coding EstimatedTimeframe = new Coding
    {
      Code = "111395",
      Display = "Estimated Timeframe",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An event occurred less than 3 months ago
    /// </summary>
    public static readonly Coding LessThan3MonthsAgo = new Coding
    {
      Code = "111396",
      Display = "< 3 months ago",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An event occurred between 4 months and 1 year ago
    /// </summary>
    public static readonly Coding VAL4MonthsTo1YearAgo = new Coding
    {
      Code = "111397",
      Display = "4 months to 1 year ago",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An event occurred longer than 1 year ago
    /// </summary>
    public static readonly Coding GreaterThan1YearAgo = new Coding
    {
      Code = "111398",
      Display = "> 1 year ago",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The timing of an event is not recalled
    /// </summary>
    public static readonly Coding TimeframeUncertain = new Coding
    {
      Code = "111399",
      Display = "Timeframe uncertain",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report title for the diagnostic report for one or more breast imaging or intervention procedures
    /// </summary>
    public static readonly Coding BreastImagingReport = new Coding
    {
      Code = "111400",
      Display = "Breast Imaging Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Concept name for the description of why a procedure has been performed
    /// </summary>
    public static readonly Coding ReasonForProcedure = new Coding
    {
      Code = "111401",
      Display = "Reason for procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A finding during clinical examination (i.e., history and physical examination) such as pain, palpable mass or discharge
    /// </summary>
    public static readonly Coding ClinicalFinding = new Coding
    {
      Code = "111402",
      Display = "Clinical Finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// First screening mammogram taken for patient that is used as a comparison baseline for further examinations
    /// </summary>
    public static readonly Coding BaselineScreeningMammogram = new Coding
    {
      Code = "111403",
      Display = "Baseline screening mammogram",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// First mammogram taken for a patient without regard to whether it was for screening or a diagnostic procedure
    /// </summary>
    public static readonly Coding FirstMammogramEver = new Coding
    {
      Code = "111404",
      Display = "First mammogram ever",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Concept name for the material of which a breast prosthetic device is constructed
    /// </summary>
    public static readonly Coding ImplantType = new Coding
    {
      Code = "111405",
      Display = "Implant type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A numeric count of findings classified as similar in nature
    /// </summary>
    public static readonly Coding NumberOfSimilarFindings = new Coding
    {
      Code = "111406",
      Display = "Number of similar findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Concept name for the status of a breast prosthetic device as noted by imaging
    /// </summary>
    public static readonly Coding ImplantFinding = new Coding
    {
      Code = "111407",
      Display = "Implant finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mammogram using traditional X-Ray film
    /// </summary>
    public static readonly Coding FilmScreenMammography = new Coding
    {
      Code = "111408",
      Display = "Film Screen Mammography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mammogram using a digital image acquisition system
    /// </summary>
    public static readonly Coding DigitalMammography = new Coding
    {
      Code = "111409",
      Display = "Digital Mammography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Referred for evaluation by a surgeon
    /// </summary>
    public static readonly Coding SurgicalConsult = new Coding
    {
      Code = "111410",
      Display = "Surgical consult",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Computer aided detection and/or computer aided diagnosis for mammography
    /// </summary>
    public static readonly Coding MammographyCAD = new Coding
    {
      Code = "111411",
      Display = "Mammography CAD",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Concept name for a text-based section of a report
    /// </summary>
    public static readonly Coding NarrativeSummary = new Coding
    {
      Code = "111412",
      Display = "Narrative Summary",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A title for a report section that summarizes all interpretation results for a report with one overriding assessment; e.g. benign or negative
    /// </summary>
    public static readonly Coding OverallAssessment = new Coding
    {
      Code = "111413",
      Display = "Overall Assessment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Concept name for a collection of supporting evidence for a report
    /// </summary>
    public static readonly Coding SupplementaryData = new Coding
    {
      Code = "111414",
      Display = "Supplementary Data",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prior study indicates that additional imaging be performed to further evaluate a suspicious or questionable anatomic region
    /// </summary>
    public static readonly Coding AdditionalEvaluationRequestedFromPriorStudy = new Coding
    {
      Code = "111415",
      Display = "Additional evaluation requested from prior study",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The prior study recommended a follow-up breast imaging exam in 1 to 11 months (generally in 6 months)
    /// </summary>
    public static readonly Coding FollowUpAtShortIntervalFromPriorStudy = new Coding
    {
      Code = "111416",
      Display = "Follow-up at short interval from prior study",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prior breast augmentation (breast enlargement) and is not presenting with any symptoms
    /// </summary>
    public static readonly Coding HistoryOfBreastAugmentationAsymptomatic = new Coding
    {
      Code = "111417",
      Display = "History of breast augmentation, asymptomatic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Review or second opinion made on an image performed outside of the facility
    /// </summary>
    public static readonly Coding ReviewOfAnOutsideStudy = new Coding
    {
      Code = "111418",
      Display = "Review of an outside study",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Additional breast imaging performed at the time of the patient's screening mammogram
    /// </summary>
    public static readonly Coding AdditionalEvaluationRequestedFromAbnormalScreeningExam = new Coding
    {
      Code = "111419",
      Display = "Additional evaluation requested from abnormal screening exam",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient has had previous benign breast biopsies
    /// </summary>
    public static readonly Coding HistoryOfBenignBreastBiopsy = new Coding
    {
      Code = "111420",
      Display = "History of benign breast biopsy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient has had a prior surgery such as a lumpectomy or quadrantectomy to remove malignant breast tissue, but breast tissue remains
    /// </summary>
    public static readonly Coding PersonalHistoryOfBreastCancerWithBreastConservationTherapy = new Coding
    {
      Code = "111421",
      Display = "Personal history of breast cancer with breast conservation therapy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The results of a physical examination performed on the patient, possibly including the results of inspection, palpation, auscultation, or percussion
    /// </summary>
    public static readonly Coding PhysicalExaminationResults = new Coding
    {
      Code = "111423",
      Display = "Physical Examination Results",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The result of assessing the current imaging exam in comparison to previous imaging exams
    /// </summary>
    public static readonly Coding ComparisonToPreviousFindings = new Coding
    {
      Code = "111424",
      Display = "Comparison to previous findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An abnormality observed during ductography where the ductal system within the breast fills in an abnormal pattern. Ductography is an imaging exam in which a radio opaque contrast media is introduced into the ductal system of the breast through the nipple and images of the ductal system are obtained
    /// </summary>
    public static readonly Coding IntraluminalFillingDefect = new Coding
    {
      Code = "111425",
      Display = "Intraluminal filling defect",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// During ductography an observation of more than one filling abnormality within the breast ductal system
    /// </summary>
    public static readonly Coding MultipleFillingDefect = new Coding
    {
      Code = "111426",
      Display = "Multiple filling defect",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An abnormality observed during ductography where the ductal system within the breast terminates in an unusual fashion
    /// </summary>
    public static readonly Coding AbruptDuctTermination = new Coding
    {
      Code = "111427",
      Display = "Abrupt duct termination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Abnormal flowage of contrast media within the breast noted on ductography
    /// </summary>
    public static readonly Coding Extravasation = new Coding
    {
      Code = "111428",
      Display = "Extravasation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An abnormality observed during ductography where the ductal system within the breast appears narrow
    /// </summary>
    public static readonly Coding DuctNarrowing = new Coding
    {
      Code = "111429",
      Display = "Duct narrowing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// During ductography an observation of the contrast media filling a cyst within the breast
    /// </summary>
    public static readonly Coding CystFill = new Coding
    {
      Code = "111430",
      Display = "Cyst fill",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The area and line within the anatomy through which a needle or instrument passes during an interventional procedure
    /// </summary>
    public static readonly Coding InstrumentApproach = new Coding
    {
      Code = "111431",
      Display = "Instrument Approach",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The line within the anatomy from the lower outer to the upper inner aspect; e.g. through which a needle or instrument passes in an interventional procedure
    /// </summary>
    public static readonly Coding InferolateralToSuperomedial = new Coding
    {
      Code = "111432",
      Display = "Inferolateral to superomedial",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The line within the anatomy from the lower inner to the upper outer aspect; e.g. through which a needle or instrument passes in an interventional procedure
    /// </summary>
    public static readonly Coding InferomedialToSuperolateral = new Coding
    {
      Code = "111433",
      Display = "Inferomedial to superolateral",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The line within the anatomy from the upper outer to the lower inner aspect; e.g. through which a needle or instrument passes in an interventional procedure
    /// </summary>
    public static readonly Coding SuperolateralToInferomedial = new Coding
    {
      Code = "111434",
      Display = "Superolateral to inferomedial",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The line within the anatomy from the upper inner to the lower outer aspect; e.g. through which a needle or instrument passes in an interventional procedure
    /// </summary>
    public static readonly Coding SuperomedialToInferolateral = new Coding
    {
      Code = "111435",
      Display = "Superomedial to inferolateral",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The number of times a biopsy instrument is passed through an area of interest
    /// </summary>
    public static readonly Coding NumberOfPasses = new Coding
    {
      Code = "111436",
      Display = "Number of passes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The number of biopsy specimens obtained from an interventional procedure
    /// </summary>
    public static readonly Coding NumberOfSpecimens = new Coding
    {
      Code = "111437",
      Display = "Number of specimens",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator of whether or not a biopsy or localizing needle in an interventional procedure is seen to be in the area of interest
    /// </summary>
    public static readonly Coding NeedleInTarget = new Coding
    {
      Code = "111438",
      Display = "Needle in target",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The number of localizing needles placed around the area of interest in an interventional procedure
    /// </summary>
    public static readonly Coding NumberOfNeedlesAroundTarget = new Coding
    {
      Code = "111439",
      Display = "Number of needles around target",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator of whether or not an incision was made in the anatomy during an interventional procedure
    /// </summary>
    public static readonly Coding IncisionMade = new Coding
    {
      Code = "111440",
      Display = "Incision made",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator of the degree of success of an interventional procedure
    /// </summary>
    public static readonly Coding ConfirmationOfTarget = new Coding
    {
      Code = "111442",
      Display = "Confirmation of target",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that during an interventional procedure the area of interest was fully excised and is noted in the resultant biopsy specimen
    /// </summary>
    public static readonly Coding TargetCompletelyContainedInTheSpecimen = new Coding
    {
      Code = "111443",
      Display = "Target completely contained in the specimen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that during an interventional procedure the area of interest was partially excised and is noted in the resultant biopsy specimen
    /// </summary>
    public static readonly Coding TargetPartiallyObtainedInTheSpecimen = new Coding
    {
      Code = "111444",
      Display = "Target partially obtained in the specimen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that following an interventional procedure the area of interest is not seen in the resultant biopsy specimen
    /// </summary>
    public static readonly Coding TargetNotInTheSpecimen = new Coding
    {
      Code = "111445",
      Display = "Target not in the specimen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that following an interventional procedure the targeted calcifications are noted in the resultant biopsy specimen
    /// </summary>
    public static readonly Coding CalcificationsSeenInTheCore = new Coding
    {
      Code = "111446",
      Display = "Calcifications seen in the core",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that during an interventional procedure the area of interest was fully excised and is noted in the resultant biopsy specimen
    /// </summary>
    public static readonly Coding LesionCompletelyRemoved = new Coding
    {
      Code = "111447",
      Display = "Lesion completely removed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that during an interventional procedure the area of interest was partially excised and is noted in the resultant biopsy specimen
    /// </summary>
    public static readonly Coding LesionPartiallyRemoved = new Coding
    {
      Code = "111448",
      Display = "Lesion partially removed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that during an interventional procedure fluid was successfully aspirated
    /// </summary>
    public static readonly Coding FluidObtained = new Coding
    {
      Code = "111449",
      Display = "Fluid obtained",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Color that is a light shade of brown
    /// </summary>
    public static readonly Coding LightBrownColor = new Coding
    {
      Code = "111450",
      Display = "Light brown color",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Color that is a dark shade of red
    /// </summary>
    public static readonly Coding DarkRedColor = new Coding
    {
      Code = "111451",
      Display = "Dark red color",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Color that is a dark shade of brown
    /// </summary>
    public static readonly Coding DarkBrownColor = new Coding
    {
      Code = "111452",
      Display = "Dark brown color",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Color that is a bright shade of red
    /// </summary>
    public static readonly Coding BrightRedColor = new Coding
    {
      Code = "111453",
      Display = "Bright red color",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Color that is tinged with the color of blood
    /// </summary>
    public static readonly Coding BloodTingedColor = new Coding
    {
      Code = "111454",
      Display = "Blood tinged color",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator of whether or not the fluid obtained during an interventional procedure contains red blood cells
    /// </summary>
    public static readonly Coding OccultBloodTestResult = new Coding
    {
      Code = "111455",
      Display = "Occult blood test result",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator of whether or not fluid during an interventional procedure was sent for cytological analysis or simply discarded
    /// </summary>
    public static readonly Coding ActionOnFluid = new Coding
    {
      Code = "111456",
      Display = "Action on fluid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that fluid obtained during an interventional procedure was sent to a laboratory for analysis
    /// </summary>
    public static readonly Coding SentForAnalysis = new Coding
    {
      Code = "111457",
      Display = "Sent for analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator that fluid obtained during an interventional procedure was discarded
    /// </summary>
    public static readonly Coding Discarded = new Coding
    {
      Code = "111458",
      Display = "Discarded",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A radiopaque density noted during diagnostic imaging that has associated calcific densities
    /// </summary>
    public static readonly Coding MassWithCalcifications = new Coding
    {
      Code = "111459",
      Display = "Mass with calcifications",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A fluid-filled sac with greater than normal characteristics
    /// </summary>
    public static readonly Coding ComplexCyst = new Coding
    {
      Code = "111460",
      Display = "Complex cyst",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A tumor within a cyst
    /// </summary>
    public static readonly Coding IntracysticLesion = new Coding
    {
      Code = "111461",
      Display = "Intracystic lesion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A tumor or lesion
    /// </summary>
    public static readonly Coding SolidMass = new Coding
    {
      Code = "111462",
      Display = "Solid mass",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Supporting evidence for interpretation results of an interventional procedure
    /// </summary>
    public static readonly Coding SupplementaryDataForIntervention = new Coding
    {
      Code = "111463",
      Display = "Supplementary Data for Intervention",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A descriptor that further qualifies or characterizes a type of procedure
    /// </summary>
    public static readonly Coding ProcedureModifier = new Coding
    {
      Code = "111464",
      Display = "Procedure Modifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Needle size (diameter) characterization; e.g. of a biopsy needle
    /// </summary>
    public static readonly Coding NeedleGauge = new Coding
    {
      Code = "111465",
      Display = "Needle Gauge",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator of the gravity of a problem experienced by a patient, related to a procedure that was performed
    /// </summary>
    public static readonly Coding SeverityOfComplication = new Coding
    {
      Code = "111466",
      Display = "Severity of Complication",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distance from the hub or bushing to the tip of the needle
    /// </summary>
    public static readonly Coding NeedleLength = new Coding
    {
      Code = "111467",
      Display = "Needle Length",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The collection of observations and findings from pathologic analysis
    /// </summary>
    public static readonly Coding PathologyResults = new Coding
    {
      Code = "111468",
      Display = "Pathology Results",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The date and time that the sample was collected from the patient
    /// </summary>
    public static readonly Coding SamplingDateTime = new Coding
    {
      Code = "111469",
      Display = "Sampling DateTime",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates that the margin of the biopsy specimen was not involved with the tumor
    /// </summary>
    public static readonly Coding Uninvolved = new Coding
    {
      Code = "111470",
      Display = "Uninvolved",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates that the margin of the biopsy specimen was involved with the tumor
    /// </summary>
    public static readonly Coding Involved = new Coding
    {
      Code = "111471",
      Display = "Involved",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates whether the nipple was involved in an interventional procedure or pathologic analysis
    /// </summary>
    public static readonly Coding NippleInvolved = new Coding
    {
      Code = "111472",
      Display = "Nipple involved",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates the number of lymph nodes removed
    /// </summary>
    public static readonly Coding NumberOfNodesRemoved = new Coding
    {
      Code = "111473",
      Display = "Number of nodes removed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates the number of lymph nodes removed that contain cancer cells
    /// </summary>
    public static readonly Coding NumberOfNodesPositive = new Coding
    {
      Code = "111474",
      Display = "Number of nodes positive",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The result of a test for the presence of a protein that binds with estrogen
    /// </summary>
    public static readonly Coding EstrogenReceptor = new Coding
    {
      Code = "111475",
      Display = "Estrogen receptor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The result of a test for the presence of a protein that binds with progesterone
    /// </summary>
    public static readonly Coding ProgesteroneReceptor = new Coding
    {
      Code = "111476",
      Display = "Progesterone receptor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates the percentage of cells in S phase. Cell division is defined by phases; the S phase is the stage during which DNA replicates
    /// </summary>
    public static readonly Coding SPhase = new Coding
    {
      Code = "111477",
      Display = "S Phase",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The visible emission of non-bloody fluid from the nipple
    /// </summary>
    public static readonly Coding NonBloodyDischargeFromNipple = new Coding
    {
      Code = "111478",
      Display = "Non-bloody discharge (from nipple)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The inability to discern normal versus abnormal breast tissue during palpation
    /// </summary>
    public static readonly Coding DifficultPhysicalClinicalExamination = new Coding
    {
      Code = "111479",
      Display = "Difficult physical/clinical examination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that a patient has or had a malignant occurrence in an area of the body other than the breast
    /// </summary>
    public static readonly Coding CancerElsewhere = new Coding
    {
      Code = "111480",
      Display = "Cancer elsewhere",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A salt water filled prosthetic device implanted in the breast
    /// </summary>
    public static readonly Coding SalineImplant = new Coding
    {
      Code = "111481",
      Display = "Saline implant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A polymer based (plastic) prosthetic device implanted in the breast
    /// </summary>
    public static readonly Coding PolyurethaneImplant = new Coding
    {
      Code = "111482",
      Display = "Polyurethane implant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The introduction of polymeric organic silicon based material through the skin, as for breast augmentation or reconstruction
    /// </summary>
    public static readonly Coding PercutaneousSiliconeInjection = new Coding
    {
      Code = "111483",
      Display = "Percutaneous silicone injection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A prosthetic device that contains more than one material implanted in the breast
    /// </summary>
    public static readonly Coding CombinationImplant = new Coding
    {
      Code = "111484",
      Display = "Combination implant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A breast implant placed in front of the pectoralis major muscle
    /// </summary>
    public static readonly Coding PrePectoralImplant = new Coding
    {
      Code = "111485",
      Display = "Pre-pectoral implant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A breast implant placed behind the pectoralis major muscle
    /// </summary>
    public static readonly Coding RetroPectoralImplant = new Coding
    {
      Code = "111486",
      Display = "Retro-pectoral implant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Using X-Ray technique and a superimposed set of crossed lines for detection or placement
    /// </summary>
    public static readonly Coding MammographicCrosshair = new Coding
    {
      Code = "111487",
      Display = "Mammographic (crosshair)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Using X-Ray technique and a superimposed aperture for detection or placement
    /// </summary>
    public static readonly Coding MammographicGrid = new Coding
    {
      Code = "111488",
      Display = "Mammographic (grid)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Using physical touch for detection or placement
    /// </summary>
    public static readonly Coding PalpationGuided = new Coding
    {
      Code = "111489",
      Display = "Palpation guided",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The performance of a biopsy procedure using a vacuum device attached to the biopsy needle
    /// </summary>
    public static readonly Coding VacuumAssisted = new Coding
    {
      Code = "111490",
      Display = "Vacuum assisted",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unusual or unexpected emission of fluid
    /// </summary>
    public static readonly Coding AbnormalDischarge = new Coding
    {
      Code = "111491",
      Display = "Abnormal discharge",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Having experienced no adverse medical conditions related to or resulting from an interventional procedure
    /// </summary>
    public static readonly Coding NoComplications = new Coding
    {
      Code = "111492",
      Display = "No complications",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// TNM grouping of tumor stage, from AJCC, where primary tumor is Tis, regional lymph node is N0, and distant metastasis is M0
    /// </summary>
    public static readonly Coding Stage0 = new Coding
    {
      Code = "111494",
      Display = "Stage 0",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// TNM grouping of tumor stage, from AJCC, where primary tumor is T1, regional lymph node is N0, and distant metastasis is M0
    /// </summary>
    public static readonly Coding StageI = new Coding
    {
      Code = "111495",
      Display = "Stage I",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// TNM grouping of tumor stage, from AJCC, where primary tumor is T0 or T1, with regional lymph node N1 and distant metastasis is M0, or T2 with N0 and M0
    /// </summary>
    public static readonly Coding StageIIA = new Coding
    {
      Code = "111496",
      Display = "Stage IIA",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// TNM grouping of tumor stage, from AJCC, where primary tumor is T2, with regional lymph node N1 and distant metastasis is M0, or T3 with N0 and M0
    /// </summary>
    public static readonly Coding StageIIB = new Coding
    {
      Code = "111497",
      Display = "Stage IIB",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// TNM grouping of tumor stage, from AJCC, where primary tumor is T0, T1 or T2, with regional lymph node N2 and distant metastasis is M0, or T3 with N1 or N2 and M0
    /// </summary>
    public static readonly Coding StageIIIA = new Coding
    {
      Code = "111498",
      Display = "Stage IIIA",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// TNM grouping of tumor stage, from AJCC, where primary tumor is T4, regional lymph node is N0, N1 or N2, and distant metastasis is M0
    /// </summary>
    public static readonly Coding StageIIIB = new Coding
    {
      Code = "111499",
      Display = "Stage IIIB",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// TNM grouping of tumor stage, from AJCC, where primary tumor is any T value, regional lymph node is N3, and distant metastasis is M0
    /// </summary>
    public static readonly Coding StageIIIC = new Coding
    {
      Code = "111500",
      Display = "Stage IIIC",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// TNM grouping of tumor stage, from AJCC, where primary tumor is any T value, regional lymph node is any N value, and distant metastasis is M1
    /// </summary>
    public static readonly Coding StageIV = new Coding
    {
      Code = "111501",
      Display = "Stage IV",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Histologic tumor grade (sometimes called Scarff-Bloom-Richardson grade) is based on the arrangement of the cells in relation to each other -- whether they form tubules, how closely they resemble normal breast cells (nuclear grade) and how many of the cancer cells are in the process of dividing (mitotic count)
    /// </summary>
    public static readonly Coding BloomRichardsonGrade = new Coding
    {
      Code = "111502",
      Display = "Bloom-Richardson Grade",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Breast prosthetic devices are intact, not leaking, and are in a normal shape and form
    /// </summary>
    public static readonly Coding NormalImplants = new Coding
    {
      Code = "111503",
      Display = "Normal implants",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Breast prosthetic devices are not symmetric, equal, corresponding in form, or are in one breast (unilateral)
    /// </summary>
    public static readonly Coding AsymmetricImplants = new Coding
    {
      Code = "111504",
      Display = "Asymmetric implants",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fibrous or calcific contracture of the tissue capsule that forms around a breast prosthetic device
    /// </summary>
    public static readonly Coding CalcifiedImplant = new Coding
    {
      Code = "111505",
      Display = "Calcified implant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Breast prosthetic device is twisted out of normal shape or form
    /// </summary>
    public static readonly Coding DistortedImplant = new Coding
    {
      Code = "111506",
      Display = "Distorted implant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Silicone from breast prosthetic device found in lymphatic tissue
    /// </summary>
    public static readonly Coding SiliconeLadenLymphNodes = new Coding
    {
      Code = "111507",
      Display = "Silicone-laden lymph nodes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Silicone found in breast tissue outside of the prosthetic capsule or implant membrane
    /// </summary>
    public static readonly Coding FreeSilicone = new Coding
    {
      Code = "111508",
      Display = "Free silicone",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Protrusion of part of the structure normally encapsulating the content of the breast prosthetic device
    /// </summary>
    public static readonly Coding HerniatedImplant = new Coding
    {
      Code = "111509",
      Display = "Herniated implant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Evidence of removal of a breast prosthetic device
    /// </summary>
    public static readonly Coding Explantation = new Coding
    {
      Code = "111510",
      Display = "Explantation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Historical patient health information of interest to the breast health clinician
    /// </summary>
    public static readonly Coding RelevantPatientInformationForBreastImaging = new Coding
    {
      Code = "111511",
      Display = "Relevant Patient Information for Breast Imaging",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Interventional or non-interventional procedures previously performed on the patient, such as breast biopsies
    /// </summary>
    public static readonly Coding RelevantPreviousProcedures = new Coding
    {
      Code = "111513",
      Display = "Relevant Previous Procedures",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Personal, familial, and other health factors that may indicate an increase in the patient's chances of developing a health condition or disease, such as breast cancer
    /// </summary>
    public static readonly Coding RelevantRiskFactors = new Coding
    {
      Code = "111515",
      Display = "Relevant Risk Factors",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A classification of a medicinal substance, such as hormonal contraceptive or antibiotic
    /// </summary>
    public static readonly Coding MedicationType = new Coding
    {
      Code = "111516",
      Display = "Medication Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Historical patient health information for general purpose use
    /// </summary>
    public static readonly Coding RelevantPatientInformation = new Coding
    {
      Code = "111517",
      Display = "Relevant Patient Information",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The age of the patient at the first occurrence of menses
    /// </summary>
    public static readonly Coding AgeWhenFirstMenstrualPeriodOccurred = new Coding
    {
      Code = "111518",
      Display = "Age when first menstrual period occurred",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The age of the patient at the time of her first full term pregnancy
    /// </summary>
    public static readonly Coding AgeAtFirstFullTermPregnancy = new Coding
    {
      Code = "111519",
      Display = "Age at First Full Term Pregnancy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The age of the patient at the cessation of menses
    /// </summary>
    public static readonly Coding AgeAtMenopause = new Coding
    {
      Code = "111520",
      Display = "Age at Menopause",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The age of the patient at the time her uterus was removed
    /// </summary>
    public static readonly Coding AgeWhenHysterectomyPerformed = new Coding
    {
      Code = "111521",
      Display = "Age when hysterectomy performed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The age of the patient at the time she had her left ovary removed
    /// </summary>
    public static readonly Coding AgeWhenLeftOvaryRemoved = new Coding
    {
      Code = "111522",
      Display = "Age when left ovary removed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The age of the patient at the time she had her right ovary removed
    /// </summary>
    public static readonly Coding AgeWhenRightOvaryRemoved = new Coding
    {
      Code = "111523",
      Display = "Age when right ovary removed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The age of a patient on the first occurrence of an event, such as the first use of a medication
    /// </summary>
    public static readonly Coding AgeStarted = new Coding
    {
      Code = "111524",
      Display = "Age Started",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The age of a patient on the last occurrence of an event, such as the last use of a medication
    /// </summary>
    public static readonly Coding AgeEnded = new Coding
    {
      Code = "111525",
      Display = "Age Ended",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The date and time of the first occurrence of an event, such as the first use of a medication
    /// </summary>
    public static readonly Coding DateTimeStarted = new Coding
    {
      Code = "111526",
      Display = "DateTime Started",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The date and time of the last occurrence of an event, such as the last use of a medication
    /// </summary>
    public static readonly Coding DateTimeEnded = new Coding
    {
      Code = "111527",
      Display = "DateTime Ended",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator of whether an event is still in progress, such as the use of a medication or substance, or environmental exposure
    /// </summary>
    public static readonly Coding Ongoing = new Coding
    {
      Code = "111528",
      Display = "Ongoing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Product name of a device or substance, such as medication, to identify it as the product of a single firm or manufacturer
    /// </summary>
    public static readonly Coding BrandName = new Coding
    {
      Code = "111529",
      Display = "Brand Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A descriptor that further qualifies or characterizes a risk factor
    /// </summary>
    public static readonly Coding RiskFactorModifier = new Coding
    {
      Code = "111530",
      Display = "Risk Factor modifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A prior non-interventional exam or interventional procedure performed on a patient
    /// </summary>
    public static readonly Coding PreviousProcedure = new Coding
    {
      Code = "111531",
      Display = "Previous Procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Describes the pregnancy state of a referenced subject
    /// </summary>
    public static readonly Coding PregnancyStatus = new Coding
    {
      Code = "111532",
      Display = "Pregnancy Status",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A symptom experienced by a patient that is used as the reason for performing an exam or procedure
    /// </summary>
    public static readonly Coding IndicatedProblem = new Coding
    {
      Code = "111533",
      Display = "Indicated Problem",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The function of the individual who is reporting information on a patient, which could be a specific health care related profession, the patient him/herself, or a relative or friend
    /// </summary>
    public static readonly Coding RoleOfPersonReporting = new Coding
    {
      Code = "111534",
      Display = "Role of person reporting",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The date and time that a symptom was noted
    /// </summary>
    public static readonly Coding DateTimeProblemObserved = new Coding
    {
      Code = "111535",
      Display = "DateTime problem observed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The date and time of the most recent evaluation of an indicated problem
    /// </summary>
    public static readonly Coding DateTimeOfLastEvaluation = new Coding
    {
      Code = "111536",
      Display = "DateTime of last evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A patient's biological relative who exhibits a health factor that may indicate an increase in the patient's chances of developing a particular disease or medical problem
    /// </summary>
    public static readonly Coding FamilyMemberWithRiskFactor = new Coding
    {
      Code = "111537",
      Display = "Family Member with Risk Factor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The age at which an individual experienced a specific event, such as breast cancer
    /// </summary>
    public static readonly Coding AgeAtOccurrence = new Coding
    {
      Code = "111538",
      Display = "Age at Occurrence",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The current stage of an individual in her gynecological development
    /// </summary>
    public static readonly Coding MenopausalPhase = new Coding
    {
      Code = "111539",
      Display = "Menopausal phase",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator of paternal or maternal relationship
    /// </summary>
    public static readonly Coding SideOfFamily = new Coding
    {
      Code = "111540",
      Display = "Side of Family",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Relating to biological female parentage
    /// </summary>
    public static readonly Coding Maternal = new Coding
    {
      Code = "111541",
      Display = "Maternal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A gynecological hormone for which the specific type is not specified; e.g. contraceptive, estrogen, Tamoxifen
    /// </summary>
    public static readonly Coding UnspecifiedGynecologicalHormone = new Coding
    {
      Code = "111542",
      Display = "Unspecified gynecological hormone",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indicator of whether or not a patient ever provided breast milk to her offspring
    /// </summary>
    public static readonly Coding BreastFeedingHistory = new Coding
    {
      Code = "111543",
      Display = "Breast feeding history",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The average length of time that a patient provided breast milk to her offspring
    /// </summary>
    public static readonly Coding AverageBreastFeedingPeriod = new Coding
    {
      Code = "111544",
      Display = "Average breast feeding period",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Information regarding usage by the patient of certain legal or illicit substances
    /// </summary>
    public static readonly Coding SubstanceUseHistory = new Coding
    {
      Code = "111545",
      Display = "Substance Use History",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A classification of a substance, such as alcohol or a legal or illicit drug
    /// </summary>
    public static readonly Coding UsedSubstanceType = new Coding
    {
      Code = "111546",
      Display = "Used Substance Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Information regarding exposure of the patient to potentially harmful environmental factors
    /// </summary>
    public static readonly Coding EnvironmentalExposureHistory = new Coding
    {
      Code = "111547",
      Display = "Environmental Exposure History",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A classification of a potentially harmful substance or gas in a subject's environment, such as asbestos, lead, or carcinogens
    /// </summary>
    public static readonly Coding EnvironmentalFactor = new Coding
    {
      Code = "111548",
      Display = "Environmental Factor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Previous Structured Reports that could have relevant information for a current imaging service request
    /// </summary>
    public static readonly Coding PreviousReports = new Coding
    {
      Code = "111549",
      Display = "Previous Reports",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An indication that a patient has had a previous malignancy of the breast
    /// </summary>
    public static readonly Coding PersonalBreastCancerHistory = new Coding
    {
      Code = "111550",
      Display = "Personal breast cancer history",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates a previous occurrence of cancer of the lining of the uterus
    /// </summary>
    public static readonly Coding HistoryOfEndometrialCancer = new Coding
    {
      Code = "111551",
      Display = "History of endometrial cancer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates a previous occurrence of cancer of the lining of the ovary
    /// </summary>
    public static readonly Coding HistoryOfOvarianCancer = new Coding
    {
      Code = "111552",
      Display = "History of ovarian cancer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates a prior diagnosis of pre-cancerous cells or tissue removed for pathologic evaluation
    /// </summary>
    public static readonly Coding HistoryOfHighRiskLesionOnPreviousBiopsy = new Coding
    {
      Code = "111553",
      Display = "History of high risk lesion on previous biopsy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A female patient whose menstrual periods have ceased
    /// </summary>
    public static readonly Coding PostMenopausalPatient = new Coding
    {
      Code = "111554",
      Display = "Post menopausal patient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A female patient whose first child was born after the patient was 30 years old
    /// </summary>
    public static readonly Coding LateChildBearingAfter30 = new Coding
    {
      Code = "111555",
      Display = "Late child bearing (after 30)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The first level genetic marker indicating risk for breast cancer
    /// </summary>
    public static readonly Coding BRCA1BreastCancerGene = new Coding
    {
      Code = "111556",
      Display = "BRCA1 breast cancer gene",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The second level genetic marker indicating risk for breast cancer
    /// </summary>
    public static readonly Coding BRCA2BreastCancerGene = new Coding
    {
      Code = "111557",
      Display = "BRCA2 breast cancer gene",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The third level genetic marker indicating risk for breast cancer
    /// </summary>
    public static readonly Coding BRCA3BreastCancerGene = new Coding
    {
      Code = "111558",
      Display = "BRCA3 breast cancer gene",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A patient's biological aunt, grandmother, or female cousin was diagnosed with breast cancer. Definition from BI-RADS®
    /// </summary>
    public static readonly Coding WeakFamilyHistoryOfBreastCancer = new Coding
    {
      Code = "111559",
      Display = "Weak family history of breast cancer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A patient's biological mother or sister was diagnosed with breast cancer after they had gone through menopause. Definition from BI-RADS®
    /// </summary>
    public static readonly Coding IntermediateFamilyHistoryOfBreastCancer = new Coding
    {
      Code = "111560",
      Display = "Intermediate family history of breast cancer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A patient's biological mother or sister was diagnosed with breast cancer before they had gone through menopause, or more than one of the patient's first-degree relatives (biological mother or sister) were diagnosed with breast cancer after they had gone through menopause. Definition from BI-RADS®
    /// </summary>
    public static readonly Coding VeryStrongFamilyHistoryOfBreastCancer = new Coding
    {
      Code = "111561",
      Display = "Very strong family history of breast cancer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Previous diagnosis of a malignancy of the prostate gland in a biological relative
    /// </summary>
    public static readonly Coding FamilyHistoryOfProstateCancer = new Coding
    {
      Code = "111562",
      Display = "Family history of prostate cancer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The health record of a patient's biological relatives is not known
    /// </summary>
    public static readonly Coding FamilyHistoryUnknown = new Coding
    {
      Code = "111563",
      Display = "Family history unknown",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The study of cells obtained from fluid emitted from the breast
    /// </summary>
    public static readonly Coding NippleDischargeCytology = new Coding
    {
      Code = "111564",
      Display = "Nipple discharge cytology",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A developmental abnormality resulting in an abnormal shape of the uterus
    /// </summary>
    public static readonly Coding UterineMalformations = new Coding
    {
      Code = "111565",
      Display = "Uterine malformations",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A naturally occurring premature expulsion from the uterus of the products of conception - the embryo or a nonviable fetus
    /// </summary>
    public static readonly Coding SpontaneousAbortion = new Coding
    {
      Code = "111566",
      Display = "Spontaneous Abortion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An ailment/abnormality or state of the female reproductive tract
    /// </summary>
    public static readonly Coding GynecologicCondition = new Coding
    {
      Code = "111567",
      Display = "Gynecologic condition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A surgical operation performed on any portion of the female reproductive tract
    /// </summary>
    public static readonly Coding GynecologicSurgery = new Coding
    {
      Code = "111568",
      Display = "Gynecologic surgery",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prior pregnancy with a low birth weight baby or a fetus with Intrauterine Growth Restriction or Retardation
    /// </summary>
    public static readonly Coding PreviousLBWOrIUGRBirth = new Coding
    {
      Code = "111569",
      Display = "Previous LBW or IUGR birth",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// History of at least one prior pregnancy with fetal anatomic abnormality(s)
    /// </summary>
    public static readonly Coding PreviousFetalMalformationSyndrome = new Coding
    {
      Code = "111570",
      Display = "Previous fetal malformation/syndrome",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// History of delivering a Rhesis Isoimmunization affected child(ren) or a child(ren) with another blood disorder
    /// </summary>
    public static readonly Coding PreviousRHNegativeOrBloodDyscrasiaAtBirth = new Coding
    {
      Code = "111571",
      Display = "Previous RH negative or blood dyscrasia at birth",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// History of at least one pregnancy that contained more than one fetus; e.g. twins, triplets, etc.
    /// </summary>
    public static readonly Coding HistoryOfMultipleFetuses = new Coding
    {
      Code = "111572",
      Display = "History of multiple fetuses",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// At least one fetus of this pregnancy has an anatomic abnormality(s) that is known to exist, or a "marker" is present that suggests the abnormality(s) may be present
    /// </summary>
    public static readonly Coding CurrentPregnancyKnownOrSuspectedMalformationsSyndromes = new Coding
    {
      Code = "111573",
      Display = "Current pregnancy, known or suspected malformations/syndromes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Biological relatives have previously conceived a fetus with an anatomic abnormality(s)
    /// </summary>
    public static readonly Coding FamilyHistoryFetalMalformationSyndrome = new Coding
    {
      Code = "111574",
      Display = "Family history, fetal malformation/syndrome",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A subjective descriptor for an elevated amount of exposure, use, or dosage, incurring high risk of adverse effects
    /// </summary>
    public static readonly Coding High = new Coding
    {
      Code = "111575",
      Display = "High",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A subjective descriptor for a moderate amount of exposure, use, or dosage, incurring medium risk of adverse effects
    /// </summary>
    public static readonly Coding Medium = new Coding
    {
      Code = "111576",
      Display = "Medium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A subjective descriptor for a limited amount of exposure, use, or dosage, incurring low risk of adverse effects
    /// </summary>
    public static readonly Coding Low = new Coding
    {
      Code = "111577",
      Display = "Low",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A measurement of the rate of occurrence of which a patient takes a certain medication
    /// </summary>
    public static readonly Coding DoseFrequency = new Coding
    {
      Code = "111578",
      Display = "Dose frequency",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The quantity per unit of time that a patient was or is being exposed to an environmental irritant
    /// </summary>
    public static readonly Coding RateOfExposure = new Coding
    {
      Code = "111579",
      Display = "Rate of exposure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The quantity per unit of time that a medication or substance was or is being used
    /// </summary>
    public static readonly Coding VolumeOfUse = new Coding
    {
      Code = "111580",
      Display = "Volume of use",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor for the amount of a medication that was or is being taken
    /// </summary>
    public static readonly Coding RelativeDoseAmount = new Coding
    {
      Code = "111581",
      Display = "Relative dose amount",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor for the amount of present or past exposure to an environmental irritant
    /// </summary>
    public static readonly Coding RelativeAmountOfExposure = new Coding
    {
      Code = "111582",
      Display = "Relative amount of exposure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor for the amount of a medication or substance that was or is being used
    /// </summary>
    public static readonly Coding RelativeAmountOfUse = new Coding
    {
      Code = "111583",
      Display = "Relative amount of use",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor for the frequency with which a medication was or is being taken
    /// </summary>
    public static readonly Coding RelativeDoseFrequency = new Coding
    {
      Code = "111584",
      Display = "Relative dose frequency",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor for the frequency of present or past exposure to an environmental irritant
    /// </summary>
    public static readonly Coding RelativeFrequencyOfExposure = new Coding
    {
      Code = "111585",
      Display = "Relative frequency of exposure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor for the frequency with which a medication or substance was or is being used
    /// </summary>
    public static readonly Coding RelativeFrequencyOfUse = new Coding
    {
      Code = "111586",
      Display = "Relative frequency of use",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient is not known to have been exposed to or used the substance or medication
    /// </summary>
    public static readonly Coding NoKnownExposure = new Coding
    {
      Code = "111587",
      Display = "No known exposure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient returns for additional images to improve the quality of the most recent exam
    /// </summary>
    public static readonly Coding RecallForTechnicalReasons = new Coding
    {
      Code = "111590",
      Display = "Recall for technical reasons",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient returns for additional images to clarify findings from the most recent exam
    /// </summary>
    public static readonly Coding RecallForImagingFindings = new Coding
    {
      Code = "111591",
      Display = "Recall for imaging findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient returns for additional images to clarify symptoms or signs reported by the patient or a healthcare professional at the time of the most recent exam
    /// </summary>
    public static readonly Coding RecallForPatientSymptomsClinicalFindings = new Coding
    {
      Code = "111592",
      Display = "Recall for patient symptoms/ clinical findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of births with low birth weight or intrauterine growth restriction
    /// </summary>
    public static readonly Coding LBWOrIUGR = new Coding
    {
      Code = "111593",
      Display = "LBW or IUGR",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No filter used
    /// </summary>
    public static readonly Coding NoFilter = new Coding
    {
      Code = "111609",
      Display = "No filter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Joslin NM-1 is a 45 degree field focused centrally between the temporal margin of optic disc and the center of the macula: Center the camera on the papillomacular bundle midway between the temporal margin of the optic disc and the center of the macula. The horizontal centerline of the image should pass directly through the center of the disc
    /// </summary>
    public static readonly Coding Field1ForJoslin3Field = new Coding
    {
      Code = "111621",
      Display = "Field 1 for Joslin 3 field",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Joslin NM-2 is a 45 degree field focused superior temporal to the optic disc: Center the camera laterally approximately one-half disc diameter temporal to the center of the macula. The lower edge of the field is tangent to a horizontal line passing through the upper edge of the optic disc. The image is taken temporal to the macula but includes more retinal nasal and superior to the macula than standard field 2
    /// </summary>
    public static readonly Coding Field2ForJoslin3Field = new Coding
    {
      Code = "111622",
      Display = "Field 2 for Joslin 3 field",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Joslin NM-3 is a 45 degree field focused nasal to the optic disc: This field is nasal to the optic disc and may include part of the optic disc. The horizontal centerline of the image should pass tangent to the lower edge of the optic disc
    /// </summary>
    public static readonly Coding Field3ForJoslin3Field = new Coding
    {
      Code = "111623",
      Display = "Field 3 for Joslin 3 field",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A broad or "soft" light supplied from a single source
    /// </summary>
    public static readonly Coding DiffuseDirectIllumination = new Coding
    {
      Code = "111625",
      Display = "Diffuse direct illumination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A slit reflected light microscope, which has the ability to form an image of the back scattered light from the eye in a sagittal plane. Scheimpflug cameras are able to achieve a wide depth of focus by employing the "Sheimpflug principle" where the lens and image planes are not parallel with each other. Rotating Sheimplug cameras are able to generate three-dimensional images and calculate measurements of the anterior chamber of the eye
    /// </summary>
    public static readonly Coding ScheimpflugCamera = new Coding
    {
      Code = "111626",
      Display = "Scheimpflug Camera",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lighting condition approximately 0.04 lux
    /// </summary>
    public static readonly Coding ScotopicLight = new Coding
    {
      Code = "111627",
      Display = "Scotopic light",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lighting condition approximately 4 lux
    /// </summary>
    public static readonly Coding MesopicLight = new Coding
    {
      Code = "111628",
      Display = "Mesopic light",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lighting condition approximately 40 lux
    /// </summary>
    public static readonly Coding PhotopicLight = new Coding
    {
      Code = "111629",
      Display = "Photopic light",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition preceded by intense light
    /// </summary>
    public static readonly Coding DynamicLight = new Coding
    {
      Code = "111630",
      Display = "Dynamic light",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calculated from values of entrance exposure in air, the X-Ray beam quality (half-value layer), and compressed breast thickness, is the energy deposited per unit mass of glandular tissue averaged over all the glandular tissue in the breast
    /// </summary>
    public static readonly Coding AverageGlandularDose = new Coding
    {
      Code = "111631",
      Display = "Average Glandular Dose",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The primary material in the anode of an X-Ray source
    /// </summary>
    public static readonly Coding AnodeTargetMaterial = new Coding
    {
      Code = "111632",
      Display = "Anode Target Material",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The average thickness of the body part examined when compressed, if compression has been applied during X-Ray exposure
    /// </summary>
    public static readonly Coding CompressionThickness = new Coding
    {
      Code = "111633",
      Display = "Compression Thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Thickness of Aluminum required to reduce the X-Ray output at the patient entrance surface by a factor of two
    /// </summary>
    public static readonly Coding HalfValueLayer = new Coding
    {
      Code = "111634",
      Display = "Half Value Layer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An anti-scatter device based on radiation absorbing strips above the detector; e.g. in the patient support
    /// </summary>
    public static readonly Coding XRayGrid = new Coding
    {
      Code = "111635",
      Display = "X-Ray Grid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Exposure measurement in air at the reference point that does not include back scatter, according to MQCM 1999
    /// </summary>
    public static readonly Coding EntranceExposureAtRP = new Coding
    {
      Code = "111636",
      Display = "Entrance Exposure at RP",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Average Glandular Dose to a single breast accumulated over multiple images
    /// </summary>
    public static readonly Coding AccumulatedAverageGlandularDose = new Coding
    {
      Code = "111637",
      Display = "Accumulated Average Glandular Dose",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Value of the control variable used to parametrize the Automatic Exposure Control (AEC) closed loop; e.g. "Water Value"
    /// </summary>
    public static readonly Coding PatientEquivalentThickness = new Coding
    {
      Code = "111638",
      Display = "Patient Equivalent Thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An X-Ray Grid that does not move during exposure
    /// </summary>
    public static readonly Coding FixedGrid = new Coding
    {
      Code = "111641",
      Display = "Fixed grid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An X-Ray Grid with radiation absorbing strips that are focused toward the focal spot, to eliminate grid cutoff
    /// </summary>
    public static readonly Coding FocusedGrid = new Coding
    {
      Code = "111642",
      Display = "Focused grid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An X-Ray Grid that is designed to move during exposure, to eliminate the appearance of grid lines on the image
    /// </summary>
    public static readonly Coding ReciprocatingGrid = new Coding
    {
      Code = "111643",
      Display = "Reciprocating grid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An X-Ray Grid with radiation absorbing strips that are parallel to each other and that is used only with long source to image distances
    /// </summary>
    public static readonly Coding ParallelGrid = new Coding
    {
      Code = "111644",
      Display = "Parallel grid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An X-Ray Grid with crossed radiation absorbing strips used for more complete cleanup of scatter radiation
    /// </summary>
    public static readonly Coding CrossedGrid = new Coding
    {
      Code = "111645",
      Display = "Crossed grid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No X-Ray Grid was used due to low scatter conditions
    /// </summary>
    public static readonly Coding NoGrid = new Coding
    {
      Code = "111646",
      Display = "No grid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The spectacle prescription for a patient
    /// </summary>
    public static readonly Coding SpectaclePrescriptionReport = new Coding
    {
      Code = "111671",
      Display = "Spectacle Prescription Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Refractive measurements of the eye to correct for inability to focus at near while wearing the distance prescription
    /// </summary>
    public static readonly Coding AddNear = new Coding
    {
      Code = "111672",
      Display = "Add Near",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Refractive measurements of the eye to correct for inability to focus at intermediate distance while wearing the distance prescription
    /// </summary>
    public static readonly Coding AddIntermediate = new Coding
    {
      Code = "111673",
      Display = "Add Intermediate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Refractive measurements of the eye to correct for inability to focus at the specified distance while wearing the distance prescription
    /// </summary>
    public static readonly Coding AddOther = new Coding
    {
      Code = "111674",
      Display = "Add Other",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The power of a prism to bend light in the horizontal direction, in prism diopters
    /// </summary>
    public static readonly Coding HorizontalPrismPower = new Coding
    {
      Code = "111675",
      Display = "Horizontal Prism Power",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Direction of the base of a horizontal prism -- either in (toward the nose), or out (away from the nose)
    /// </summary>
    public static readonly Coding HorizontalPrismBase = new Coding
    {
      Code = "111676",
      Display = "Horizontal Prism Base",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The power of a prism to bend light in the vertical direction, in prism diopters
    /// </summary>
    public static readonly Coding VerticalPrismPower = new Coding
    {
      Code = "111677",
      Display = "Vertical Prism Power",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Direction of the base of a vertical prism -- either up, or down
    /// </summary>
    public static readonly Coding VerticalPrismBase = new Coding
    {
      Code = "111678",
      Display = "Vertical Prism Base",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distance in mm between the pupils when the patient's object of regard is in the distance
    /// </summary>
    public static readonly Coding DistancePupillaryDistance = new Coding
    {
      Code = "111679",
      Display = "Distance Pupillary Distance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distance in mm between the pupils when the patient's object of regard is at near
    /// </summary>
    public static readonly Coding NearPupillaryDistance = new Coding
    {
      Code = "111680",
      Display = "Near Pupillary Distance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A patient's vision with the correction measured by an autorefractor in place
    /// </summary>
    public static readonly Coding AutorefractionVisualAcuity = new Coding
    {
      Code = "111685",
      Display = "Autorefraction Visual Acuity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A patient's vision with whichever vision correction the patient customarily wears
    /// </summary>
    public static readonly Coding HabitualVisualAcuity = new Coding
    {
      Code = "111686",
      Display = "Habitual Visual Acuity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A patient's vision with the final spectacle prescription in place
    /// </summary>
    public static readonly Coding PrescriptionVisualAcuity = new Coding
    {
      Code = "111687",
      Display = "Prescription Visual Acuity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The spectacle prescription for the right eye
    /// </summary>
    public static readonly Coding RightEyeRx = new Coding
    {
      Code = "111688",
      Display = "Right Eye Rx",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The spectacle prescription for the left eye
    /// </summary>
    public static readonly Coding LeftEyeRx = new Coding
    {
      Code = "111689",
      Display = "Left Eye Rx",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A macular grid thickness and volume report for a patient. The macular grid is an analytic tool described in PS3.1
    /// </summary>
    public static readonly Coding MacularGridThicknessAndVolumeReport = new Coding
    {
      Code = "111690",
      Display = "Macular Grid Thickness and Volume Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of images used for the macular grid measurement
    /// </summary>
    public static readonly Coding NumberOfImagesUsedForMacularMeasurements = new Coding
    {
      Code = "111691",
      Display = "Number of Images Used for Macular Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of samples used per Image for analysis
    /// </summary>
    public static readonly Coding NumberOfSamplesUsedPerImage = new Coding
    {
      Code = "111692",
      Display = "Number of Samples Used per Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A numeric rating of the quality of the entire analysis with respect to grading and diagnostic purposes. Higher numbers indicate greater quality
    /// </summary>
    public static readonly Coding AnalysisQualityRating = new Coding
    {
      Code = "111693",
      Display = "Analysis Quality Rating",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A numeric rating of the quality of an entire image set with respect to grading and diagnostic purposes. Higher numbers indicate greater quality
    /// </summary>
    public static readonly Coding ImageSetQualityRating = new Coding
    {
      Code = "111694",
      Display = "Image Set Quality Rating",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Tear film or drops affecting test quality
    /// </summary>
    public static readonly Coding InterferingTearsOrDrops = new Coding
    {
      Code = "111695",
      Display = "Interfering Tears or Drops",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The assessment of the centricity and persistence of the visual fixation (direction of gaze) during the acquisition
    /// </summary>
    public static readonly Coding VisualFixationQualityDuringAcquisition = new Coding
    {
      Code = "111696",
      Display = "Visual Fixation Quality During Acquisition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The reason why the patient's visual fixation was not steady or was indeterminate
    /// </summary>
    public static readonly Coding VisualFixationQualityProblem = new Coding
    {
      Code = "111697",
      Display = "Visual Fixation Quality Problem",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The reason why the macular grid measurements may be questionable
    /// </summary>
    public static readonly Coding OphthalmicMacularGridProblem = new Coding
    {
      Code = "111698",
      Display = "Ophthalmic Macular Grid Problem",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of container (box, block, microscope slide, etc.) for the specimen under observation
    /// </summary>
    public static readonly Coding SpecimenContainerIdentifier = new Coding
    {
      Code = "111700",
      Display = "Specimen Container Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of processing that tissue specimen underwent
    /// </summary>
    public static readonly Coding ProcessingType = new Coding
    {
      Code = "111701",
      Display = "Processing type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Date and time of processing step
    /// </summary>
    public static readonly Coding DateTimeOfProcessing = new Coding
    {
      Code = "111702",
      Display = "DateTime of processing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Description of the individual step in the tissue processing sequence
    /// </summary>
    public static readonly Coding ProcessingStepDescription = new Coding
    {
      Code = "111703",
      Display = "Processing step description",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of sampling used to derive specimen from its parent
    /// </summary>
    public static readonly Coding SamplingMethod = new Coding
    {
      Code = "111704",
      Display = "Sampling Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of the parent specimen that gave rise to the current specimen
    /// </summary>
    public static readonly Coding ParentSpecimenIdentifier = new Coding
    {
      Code = "111705",
      Display = "Parent Specimen Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assigning authority for parent specimen's identifier
    /// </summary>
    public static readonly Coding IssuerOfParentSpecimenIdentifier = new Coding
    {
      Code = "111706",
      Display = "Issuer of Parent Specimen Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Parent specimen type that gave rise to current specimen
    /// </summary>
    public static readonly Coding ParentSpecimenType = new Coding
    {
      Code = "111707",
      Display = "Parent specimen type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Description of coordinate system and origin reference point on parent specimen, or parent specimen container, or image used for localizing the sampling site or location within container or image
    /// </summary>
    public static readonly Coding PositionFrameOfReference = new Coding
    {
      Code = "111708",
      Display = "Position Frame of Reference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference to image of parent specimen localizing the sampling site; may include referenced Presentation State object
    /// </summary>
    public static readonly Coding LocationOfSamplingSite = new Coding
    {
      Code = "111709",
      Display = "Location of sampling site",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location of sampling site of specimen (nominal center) relative to the Position Frame of Reference in the X dimension
    /// </summary>
    public static readonly Coding LocationOfSamplingSiteXOffset = new Coding
    {
      Code = "111710",
      Display = "Location of sampling site X offset",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location of sampling site of specimen (nominal center) relative to the Position Frame of Reference in the Y dimension
    /// </summary>
    public static readonly Coding LocationOfSamplingSiteYOffset = new Coding
    {
      Code = "111711",
      Display = "Location of sampling site Y offset",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location of sampling site of specimen (nominal center) relative to the Position Frame of Reference in the Z dimension
    /// </summary>
    public static readonly Coding LocationOfSamplingSiteZOffset = new Coding
    {
      Code = "111712",
      Display = "Location of sampling site Z offset",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Description of specimen location, either in absolute terms or relative to the Position Frame of Reference
    /// </summary>
    public static readonly Coding LocationOfSpecimen = new Coding
    {
      Code = "111718",
      Display = "Location of Specimen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location of specimen (nominal center) relative to the Position Frame of Reference in the X dimension
    /// </summary>
    public static readonly Coding LocationOfSpecimenXOffset = new Coding
    {
      Code = "111719",
      Display = "Location of Specimen X offset",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location of specimen (nominal center) relative to the Position Frame of Reference in the Y dimension
    /// </summary>
    public static readonly Coding LocationOfSpecimenYOffset = new Coding
    {
      Code = "111720",
      Display = "Location of Specimen Y offset",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location of specimen (nominal center) relative to the Position Frame of Reference in the Z dimension
    /// </summary>
    public static readonly Coding LocationOfSpecimenZOffset = new Coding
    {
      Code = "111721",
      Display = "Location of Specimen Z offset",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Description of visual distinguishing identifiers; e.g. ink, or a particular shape of the specimen
    /// </summary>
    public static readonly Coding VisualMarkingOfSpecimen = new Coding
    {
      Code = "111723",
      Display = "Visual Marking of Specimen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assigning authority for specimen identifier
    /// </summary>
    public static readonly Coding IssuerOfSpecimenIdentifier = new Coding
    {
      Code = "111724",
      Display = "Issuer of Specimen Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dissection of specimen with submission of all its sections for further processing or examination
    /// </summary>
    public static readonly Coding DissectionWithEntireSpecimenSubmission = new Coding
    {
      Code = "111726",
      Display = "Dissection with entire specimen submission",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dissection of specimen with submission of representative sections for further processing or examination
    /// </summary>
    public static readonly Coding DissectionWithRepresentativeSectionsSubmission = new Coding
    {
      Code = "111727",
      Display = "Dissection with representative sections submission",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A workflow step, during which tissue specimens are stored in a climate-controlled environment
    /// </summary>
    public static readonly Coding SpecimenStorage = new Coding
    {
      Code = "111729",
      Display = "Specimen storage",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Transmission illumination method for specimen microscopy
    /// </summary>
    public static readonly Coding TransmissionIllumination = new Coding
    {
      Code = "111741",
      Display = "Transmission illumination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reflection illumination method for specimen microscopy
    /// </summary>
    public static readonly Coding ReflectionIllumination = new Coding
    {
      Code = "111742",
      Display = "Reflection illumination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Epifluorescence illumination method for specimen microscopy
    /// </summary>
    public static readonly Coding EpifluorescenceIllumination = new Coding
    {
      Code = "111743",
      Display = "Epifluorescence illumination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Brightfield illumination method for specimen microscopy
    /// </summary>
    public static readonly Coding BrightfieldIllumination = new Coding
    {
      Code = "111744",
      Display = "Brightfield illumination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Darkfield illumination method for specimen microscopy
    /// </summary>
    public static readonly Coding DarkfieldIllumination = new Coding
    {
      Code = "111745",
      Display = "Darkfield illumination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Oblique illumination method for specimen microscopy
    /// </summary>
    public static readonly Coding ObliqueIllumination = new Coding
    {
      Code = "111746",
      Display = "Oblique illumination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Phase contrast illumination method for specimen microscopy
    /// </summary>
    public static readonly Coding PhaseContrastIllumination = new Coding
    {
      Code = "111747",
      Display = "Phase contrast illumination",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Differential interference contrast method for specimen microscopy
    /// </summary>
    public static readonly Coding DifferentialInterferenceContrast = new Coding
    {
      Code = "111748",
      Display = "Differential interference contrast",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total internal reflection fluorescence method for specimen microscopy
    /// </summary>
    public static readonly Coding TotalInternalReflectionFluorescence = new Coding
    {
      Code = "111749",
      Display = "Total internal reflection fluorescence",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of obtaining ophthalmic axial measurements that uses ultrasound, and that requires applanation of the cornea
    /// </summary>
    public static readonly Coding UltrasoundContact = new Coding
    {
      Code = "111750",
      Display = "Ultrasound Contact",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of obtaining ophthalmic axial measurements that uses ultrasound, and that requires immersion of the patient's eye in fluid as he lies in a supine position
    /// </summary>
    public static readonly Coding UltrasoundImmersion = new Coding
    {
      Code = "111751",
      Display = "Ultrasound Immersion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of obtaining ophthalmic axial measurements that uses light
    /// </summary>
    public static readonly Coding Optical = new Coding
    {
      Code = "111752",
      Display = "Optical",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurements taken of the corneal curvature using a manual keratometer
    /// </summary>
    public static readonly Coding ManualKeratometry = new Coding
    {
      Code = "111753",
      Display = "Manual Keratometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurements taken of the corneal curvature using an automated keratometer
    /// </summary>
    public static readonly Coding AutoKeratometry = new Coding
    {
      Code = "111754",
      Display = "Auto Keratometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Simulated Keratometry measurements derived from corneal topography
    /// </summary>
    public static readonly Coding SimulatedKeratometry = new Coding
    {
      Code = "111755",
      Display = "Simulated Keratometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Corneal power measurements using Scheimpflug camera
    /// </summary>
    public static readonly Coding EquivalentKReading = new Coding
    {
      Code = "111756",
      Display = "Equivalent K-reading",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Haigis IOL calculation formula. Haigis W, Lege B, Miller N, Schneider B. Comparison of immersion ultrasound biometry and partial coherence interferometry for intraocular lens calculation according to Haigis. Graefes Arch Clin Exp Ophthalmol 2000;238:765-73
    /// </summary>
    public static readonly Coding Haigis = new Coding
    {
      Code = "111760",
      Display = "Haigis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Haigis-L IOL calculation formula. Haigis W. Intraocular lens calculation after refractive surgery for myopia: Haigis-L formula. J Cataract Refract Surg. 2008 Oct;34(10):1658-63
    /// </summary>
    public static readonly Coding HaigisL = new Coding
    {
      Code = "111761",
      Display = "Haigis-L",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Holladay 1 IOL calculation formula. Holladay JT, Prager TC, Chandler TY, Musgrove KH, Lewis JW, Ruiz RS. A three-part system for refining intraocular lens power calculations. J Cataract Refract Surg. 1988; 14:17-24
    /// </summary>
    public static readonly Coding Holladay1 = new Coding
    {
      Code = "111762",
      Display = "Holladay 1",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Holladay 2 IOL calculation formula
    /// </summary>
    public static readonly Coding Holladay2 = new Coding
    {
      Code = "111763",
      Display = "Holladay 2",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Hoffer Q IOL calculation formula. Hoffer KJ. The Hoffer Q formula: a comparison of theoretic and regression formulas. J Cataract Refract Surg 1993;19:700-12. Errata. J Cataract Refract Surg 1994;20:677 and 2007;33:2-3
    /// </summary>
    public static readonly Coding HofferQ = new Coding
    {
      Code = "111764",
      Display = "Hoffer Q",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Olsen IOL calculation formula. Olsen T. Calculation of intraocular lens power: a review. Acta Ophthalmol. Scand. 2007: 85: 472-485
    /// </summary>
    public static readonly Coding Olsen = new Coding
    {
      Code = "111765",
      Display = "Olsen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The SRKII IOL calculation formula. Sanders DR, Retzlaff J, Kraff MC. Comparison of the SRK II formula and other second generation formulas. J Cataract Refract Surg. 1988 Mar;14(2):136-41
    /// </summary>
    public static readonly Coding SRKII = new Coding
    {
      Code = "111766",
      Display = "SRKII",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The SRK-T IOL calculation formula. Retzlaff JA, Sanders DR, Kraff MC. Development of the SRK/T intraocular lens implant power calculation formula. J Cataract Refract Surg 1990;16:333-40. Erratum 1990;16:528
    /// </summary>
    public static readonly Coding SRKT = new Coding
    {
      Code = "111767",
      Display = "SRK-T",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The "ACD Constant" used in IOL calculation
    /// </summary>
    public static readonly Coding ACDConstant = new Coding
    {
      Code = "111768",
      Display = "ACD Constant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The "Haigis a0" constant used in IOL calculation
    /// </summary>
    public static readonly Coding HaigisA0 = new Coding
    {
      Code = "111769",
      Display = "Haigis a0",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The "Haigis a1" constant used in IOL calculation
    /// </summary>
    public static readonly Coding HaigisA1 = new Coding
    {
      Code = "111770",
      Display = "Haigis a1",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The "Haigis a2" constant used in IOL calculation
    /// </summary>
    public static readonly Coding HaigisA2 = new Coding
    {
      Code = "111771",
      Display = "Haigis a2",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The "Hoffer pACD Constant" used in IOL calculation
    /// </summary>
    public static readonly Coding HofferPACDConstant = new Coding
    {
      Code = "111772",
      Display = "Hoffer pACD Constant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The "Surgeon Factor" constant used in IOL calculation
    /// </summary>
    public static readonly Coding SurgeonFactor = new Coding
    {
      Code = "111773",
      Display = "Surgeon Factor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Anterior chamber depth defined as the front of the cornea to the front of the lens
    /// </summary>
    public static readonly Coding FrontOfCorneaToFrontOfLens = new Coding
    {
      Code = "111776",
      Display = "Front Of Cornea To Front Of Lens",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Anterior chamber depth defined as the back of the cornea to the front of the lens
    /// </summary>
    public static readonly Coding BackOfCorneaToFrontOfLens = new Coding
    {
      Code = "111777",
      Display = "Back Of Cornea To Front Of Lens",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Refers to the anterior lens when there are two lenses in the eye. The distance, in mm, from the anterior surface of the lens to the posterior surface of the lens
    /// </summary>
    public static readonly Coding SingleOrAnteriorLens = new Coding
    {
      Code = "111778",
      Display = "Single or Anterior Lens",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Refers to the posterior lens when there are two lenses in the eye. The distance, in mm, from the anterior surface of the lens to the posterior surface of the lens
    /// </summary>
    public static readonly Coding PosteriorLens = new Coding
    {
      Code = "111779",
      Display = "Posterior Lens",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Value obtained from measurements taken by the device creating this SOP Instance
    /// </summary>
    public static readonly Coding MeasurementFromThisDevice = new Coding
    {
      Code = "111780",
      Display = "Measurement From This Device",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Value obtained by data transfer from an external source - not from measurements taken by the device providing the value
    /// </summary>
    public static readonly Coding ExternalDataSource = new Coding
    {
      Code = "111781",
      Display = "External Data Source",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Axial Measurements DICOM SOP Instance
    /// </summary>
    public static readonly Coding AxialMeasurementsSOPInstance = new Coding
    {
      Code = "111782",
      Display = "Axial Measurements SOP Instance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Refractive Measurements DICOM SOP Instance
    /// </summary>
    public static readonly Coding RefractiveMeasurementsSOPInstance = new Coding
    {
      Code = "111783",
      Display = "Refractive Measurements SOP Instance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Standard Deviation is a simple measure of the variability of a data set
    /// </summary>
    public static readonly Coding StandardDeviationOfMeasurementsUsed = new Coding
    {
      Code = "111786",
      Display = "Standard Deviation of measurements used",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal to Noise Ratio of the data samples taken to create a measurement
    /// </summary>
    public static readonly Coding SignalToNoiseRatio = new Coding
    {
      Code = "111787",
      Display = "Signal to Noise Ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Projection from 2D image pixels to 3D Cartesian coordinates based on a spherical mathematical model
    /// </summary>
    public static readonly Coding SphericalProjection = new Coding
    {
      Code = "111791",
      Display = "Spherical projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mapping from 2D image pixels to 3D Cartesian coordinates based on measurements of the retinal surface; e.g. of the retina, derived via a measurement technology such as Optical Coherence Tomography, Ultrasound etc.
    /// </summary>
    public static readonly Coding SurfaceContourMapping = new Coding
    {
      Code = "111792",
      Display = "Surface contour mapping",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern, nominally covering an area within 24° of fixation. Consists of 54 test points a minimum of 3° from each meridian and placed 6° apart. The "-2" distinguishes this from another 24° pattern (no longer supported)
    /// </summary>
    public static readonly Coding VisualField242TestPattern = new Coding
    {
      Code = "111800",
      Display = "Visual Field 24-2 Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern, nominally covering an area within 10° of fixation. Consists of 68 test points a minimum of 1° from each meridian and placed 2° apart. The "-2" in this case indicates its point layout to be similar to the 30-2 and 24-2
    /// </summary>
    public static readonly Coding VisualField102TestPattern = new Coding
    {
      Code = "111801",
      Display = "Visual Field 10-2 Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern consisting of test point locations within 30° of fixation. Consists of 76 test points a minimum of 3° from each meridian and placed 6° apart. The "-2" distinguishes this from another 30° pattern (no longer supported)
    /// </summary>
    public static readonly Coding VisualField302TestPattern = new Coding
    {
      Code = "111802",
      Display = "Visual Field 30-2 Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern consisting of 60 test point locations between 30° and 60° of fixation a minimum of 6° from each meridian and placed 12° apart. The "-4" distinguishes this from a similar 60° pattern having 4 additional points
    /// </summary>
    public static readonly Coding VisualField604TestPattern = new Coding
    {
      Code = "111803",
      Display = "Visual Field 60-4 Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern consisting of 16 test point locations within 10° of fixation a minimum of 1° from each meridian and placed 2° apart
    /// </summary>
    public static readonly Coding VisualFieldMaculaTestPattern = new Coding
    {
      Code = "111804",
      Display = "Visual Field Macula Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern consisting of 40 test point locations within 30° of fixation that spread out radially from fixation
    /// </summary>
    public static readonly Coding VisualFieldCentral40PointTestPattern = new Coding
    {
      Code = "111805",
      Display = "Visual Field Central 40 Point Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern consisting of 76 test point locations within 30° of fixation a minimum of 3° from each meridian and placed 6° apart
    /// </summary>
    public static readonly Coding VisualFieldCentral76PointTestPattern = new Coding
    {
      Code = "111806",
      Display = "Visual Field Central 76 Point Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern consisting of 60 test point locations between 30° and 60° of fixation a minimum of 6° from each meridian and placed 12° apart
    /// </summary>
    public static readonly Coding VisualFieldPeripheral60PointTestPattern = new Coding
    {
      Code = "111807",
      Display = "Visual Field Peripheral 60 Point Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern consisting of 81 test point locations within 60° of fixation that spread out radially from fixation
    /// </summary>
    public static readonly Coding VisualFieldFullField81PointTestPattern = new Coding
    {
      Code = "111808",
      Display = "Visual Field Full Field 81 Point Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern consisting of 120 test point locations within 60° of fixation that spread out radially from fixation, concentrated in the nasal hemisphere
    /// </summary>
    public static readonly Coding VisualFieldFullField120PointTestPattern = new Coding
    {
      Code = "111809",
      Display = "Visual Field Full Field 120 Point Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern for Glaucoma and general visual field assessment with 59 test locations of which 16 test locations are in the macular area (up to 10° eccentricity) and where the density of test location is reduced with eccentricity. The test can be extended with the inclusion of 14 test locations between 30° and 60° eccentricity, 6 of which are located at the nasal step
    /// </summary>
    public static readonly Coding VisualFieldGTestPattern = new Coding
    {
      Code = "111810",
      Display = "Visual Field G Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Test pattern for the macular area. Orthogonal test pattern with 0.7° spacing within the central 4° of eccentricity and reduced density of test locations between 4 and 10, 5° of eccentricity. 81 test locations over all. The test can be extended to include the test locations of the Visual Field G Test Pattern between 10, 5° and 60°
    /// </summary>
    public static readonly Coding VisualFieldMTestPattern = new Coding
    {
      Code = "111811",
      Display = "Visual Field M Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Full field test pattern with 48 test locations from 0-30° and 82 test locations from 30-70°. Reduced test point density with increased eccentricity. Can be combined with screening and threshold strategies
    /// </summary>
    public static readonly Coding VisualField07TestPattern = new Coding
    {
      Code = "111812",
      Display = "Visual Field 07 Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Low Vision Central. Orthogonal off-center test pattern with 6° spacing. 75 test locations within the central 30°. Corresponds with the 32/30-2 excluding the 2 locations at the blind spot, including a macular test location. The LVC is linked with a staircase threshold strategy starting at 0 dB intensity and applies stimulus area V
    /// </summary>
    public static readonly Coding VisualFieldLVCTestPattern = new Coding
    {
      Code = "111813",
      Display = "Visual Field LVC Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// General test corresponding to the 30-2 but excluding the 2 test locations in the blind spot area, hence with 74 instead of 76 test locations
    /// </summary>
    public static readonly Coding VisualFieldCentralTestPattern = new Coding
    {
      Code = "111814",
      Display = "Visual Field Central Test Pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Swedish Interactive Thresholding Algorithm (SITA). Strategy gains testing efficiency through use of visual field and information theory models. In: Bengtsson B, Olsson J, Heijl A, Rootzen H. A new generation of algorithms for computerized threshold perimetry, SITA. Acta Ophthalmologica Scandinavica, 1997, 75: 368-375
    /// </summary>
    public static readonly Coding VisualFieldSITAStandardTestStrategy = new Coding
    {
      Code = "111815",
      Display = "Visual Field SITA-Standard Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Adaptation of SITA testing methods to Blue-Yellow testing
    /// </summary>
    public static readonly Coding VisualFieldSITASWAPTestStrategy = new Coding
    {
      Code = "111816",
      Display = "Visual Field SITA-SWAP Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Similar to SITA-Standard but with less strict criteria for closing test points. Intended for patients who must be tested in the shortest possible time. In: Bengtsson B, Hejl A. SITA Fast, a new rapid perimetric threshold test. Description of methods and evaluation in patients with manifest and suspect glaucoma. Acta Ophthalmologica Scandinavica, 1998, 76: 431-437
    /// </summary>
    public static readonly Coding VisualFieldSITAFastTestStrategy = new Coding
    {
      Code = "111817",
      Display = "Visual Field SITA-Fast Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Threshold test algorithm that determines a patient's sensitivity at each test point in the threshold test pattern by adjusting intensity by 4 dB steps until the patient changes their response, and then adjusts the intensity in the opposite direction by 2 dB steps until the patient changes their response again. The last stimulus seen by the patient is recognized as the threshold for that point. The starting values are determined by first thresholding a "primary" point in each quadrant then using the results of each primary point to determine the starting values for neighboring points
    /// </summary>
    public static readonly Coding VisualFieldFullThresholdTestStrategy = new Coding
    {
      Code = "111818",
      Display = "Visual Field Full Threshold Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Similar to the Full Threshold algorithm except that it steps by 3 dB and only crosses the threshold only once. In: Flanagan JG, Wild JM, Trope GE. Evaluation of FASTPAC, a new strategy for threshold estimation with the Humphrey Field Analyzer, in a glaucomatous population. Ophthalmology, 1993, 100: 949-954
    /// </summary>
    public static readonly Coding VisualFieldFastPacTestStrategy = new Coding
    {
      Code = "111819",
      Display = "Visual Field FastPac Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identical to Full Threshold except that starting values are determined by the results of a previous test performed using the same test pattern and the Full Threshold test strategy
    /// </summary>
    public static readonly Coding VisualFieldFullFromPriorTestStrategy = new Coding
    {
      Code = "111820",
      Display = "Visual Field Full From Prior Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Similar to FastPac except that the steps are pseudo-dynamic (differ based on the intensity of the last presentation)
    /// </summary>
    public static readonly Coding VisualFieldOptimaTestStrategy = new Coding
    {
      Code = "111821",
      Display = "Visual Field Optima Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Suprathreshold testing strategy, in which each point is initially tested using stimulus that is 6 dB brighter than the expected hill of vision. If the patient does not respond, the stimulus is presented a second time at the same brightness. If the patient sees either presentation, the point is marked as "seen"; otherwise it is marked as "not seen"
    /// </summary>
    public static readonly Coding VisualFieldTwoZoneTestStrategy = new Coding
    {
      Code = "111822",
      Display = "Visual Field Two-Zone Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An extension of the two-zone strategy in which test points where the second stimulus is not seen are presented with a third stimulus at maximum brightness
    /// </summary>
    public static readonly Coding VisualFieldThreeZoneTestStrategy = new Coding
    {
      Code = "111823",
      Display = "Visual Field Three-Zone Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An extension of the two-zone strategy, in which test points where the second stimulus is not seen receive threshold testing to quantify the depth of any detected scotomas
    /// </summary>
    public static readonly Coding VisualFieldQuantifyDefectsTestStrategy = new Coding
    {
      Code = "111824",
      Display = "Visual Field Quantify-Defects Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Tendency Oriented Perimetry. Fast thresholding algorithm. Test strategy makes use of the interaction between neighboring test locations to reduce the test time compared to normal full threshold strategy by 60-80%. In: Morales J, Weitzman ML, Gonzalez de la Rosa M. Comparison between Tendency-Oriented Perimetry (TOP) and octopus threshold perimetry. Ophthalmology, 2000, 107: 134-142
    /// </summary>
    public static readonly Coding VisualFieldTOPTestStrategy = new Coding
    {
      Code = "111825",
      Display = "Visual Field TOP Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dynamic strategy is a fast thresholding strategy reducing test duration by adapting the dB step sizes according to the frequency-of-seeing curve of the threshold. Reduction of test time compared to normal full threshold strategy 30-50%
    /// </summary>
    public static readonly Coding VisualFieldDynamicTestStrategy = new Coding
    {
      Code = "111826",
      Display = "Visual Field Dynamic Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Traditional full threshold staircase strategy. Initial intensities are presented, based on anchor point sensitivities in each quadrant and based on already known neighboring sensitivities. In a first run, thresholds are changed in 4dB steps until the first response reversal. Then the threshold is changed in 2 dB steps until the second response reversal. The threshold is calculated as the average between the last seen and last not-seen stimulus, supposed to correspond with the 50% point in the frequency-of-seeing curve
    /// </summary>
    public static readonly Coding VisualFieldNormalTestStrategy = new Coding
    {
      Code = "111827",
      Display = "Visual Field Normal Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// One level screening test: Each test location is tested with a single intensity. The result is shown as seen or not-seen. The intensity can either be a 0 dB stimulus or a predefined intensity
    /// </summary>
    public static readonly Coding VisualField1LTTestStrategy = new Coding
    {
      Code = "111828",
      Display = "Visual Field 1-LT Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Two level screening test: Each test location is initially tested 6 dB brighter than the age corrected normal value
    /// </summary>
    public static readonly Coding VisualField2LTTestStrategy = new Coding
    {
      Code = "111829",
      Display = "Visual Field 2-LT Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Low Vision Strategy is a full threshold normal strategy with the exception that it starts at 0 dB intensity and applies stimulus area V
    /// </summary>
    public static readonly Coding VisualFieldLVSTestStrategy = new Coding
    {
      Code = "111830",
      Display = "Visual Field LVS Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// German Adaptive Threshold Estimation is a fast strategy based on a modified 4-2 staircase algorithm, using prior visual fields to calculate the starting intensity. In: Chiefer U, Pascual JP, Edmunds B, Feudner E, Hoffmann EM, Johnson CA, Lagreze WA, Pfeiffer N, Sample PA, Staubach F, Weleber RG, Vonthein R, Krapp E, Paetzold J. Comparison of the new perimetric GATE strategy with conventional full-threshold and SITA standard strategies. Investigative Ophthalmology and Visual Science, 2009, 51: 488-494
    /// </summary>
    public static readonly Coding VisualFieldGATETestStrategy = new Coding
    {
      Code = "111831",
      Display = "Visual Field GATE Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Similar to GATE. The i stands for initial. If there was no prior visual field test to calculate the starting values, an anchor point method is used to define the local start values
    /// </summary>
    public static readonly Coding VisualFieldGATEiTestStrategy = new Coding
    {
      Code = "111832",
      Display = "Visual Field GATEi Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A test started as two level screening test. In the course of the test, the threshold of relative defects and/or normal test locations has been quantified using the dynamic threshold strategy
    /// </summary>
    public static readonly Coding VisualField2LTDynamicTestStrategy = new Coding
    {
      Code = "111833",
      Display = "Visual Field 2LT-Dynamic Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A test started as two level screening test. In the course of the test, the threshold of relative defects and/or normal test locations has been quantified using the normal full threshold strategy
    /// </summary>
    public static readonly Coding VisualField2LTNormalTestStrategy = new Coding
    {
      Code = "111834",
      Display = "Visual Field 2LT-Normal Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Takes neighborhood test point results into account and offers stimuli with an adapted value to save time
    /// </summary>
    public static readonly Coding VisualFieldFastThresholdTestStrategy = new Coding
    {
      Code = "111835",
      Display = "Visual Field Fast Threshold Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Continuous Luminance Incremental Perimetry, which measures at first the individual reaction time of the patient and threshold values in every quadrant. The starting value for the main test is slightly below in individual threshold
    /// </summary>
    public static readonly Coding VisualFieldCLIPTestStrategy = new Coding
    {
      Code = "111836",
      Display = "Visual Field CLIP Test Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A supra threshold screening strategy. The starting stimuli intensities depend on the classification of the patient's visual hill by measuring the central (fovea) or peripheral (15° meridian) threshold. The result of each dot slightly underestimates the sensitivity value (within 5 dB)
    /// </summary>
    public static readonly Coding VisualFieldCLASSStrategy = new Coding
    {
      Code = "111837",
      Display = "Visual Field CLASS Strategy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mode for determining the starting luminance for screening test points - the starting luminance s is chosen based on the age of the patient
    /// </summary>
    public static readonly Coding AgeCorrected = new Coding
    {
      Code = "111838",
      Display = "Age corrected",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mode for determining the starting luminance for screening test points - the starting luminance is chosen based on the results of thresholding a set of "primary" test points (one in each quadrant)
    /// </summary>
    public static readonly Coding ThresholdRelated = new Coding
    {
      Code = "111839",
      Display = "Threshold related",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mode for determining the starting luminance for screening test points - in this case, all starting luminance is set to the same value
    /// </summary>
    public static readonly Coding SingleLuminance = new Coding
    {
      Code = "111840",
      Display = "Single luminance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mode for determining the starting luminance for screening test points - the starting luminance is chosen based on the result of the foveal threshold value
    /// </summary>
    public static readonly Coding FovealSensitivityRelated = new Coding
    {
      Code = "111841",
      Display = "Foveal sensitivity related",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mode for determining the starting luminance for screening test points - the starting luminance is chosen based on the result of four threshold values measured near the 15° meridian (one in each quadrant)
    /// </summary>
    public static readonly Coding RelatedToNonMacularSensitivity = new Coding
    {
      Code = "111842",
      Display = "Related to non macular sensitivity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Real time evaluation of the camera image to recognize blinks and fixation losses with influence on the test procedure. Blinks that interfere with stimuli presentation cause the automated repetition of such stimulus presentations. Fixation losses can be used to delay the stimulus presentation until correct fixation is regained
    /// </summary>
    public static readonly Coding AutomatedOptical = new Coding
    {
      Code = "111843",
      Display = "Automated Optical",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of monitoring the patient's fixation by periodically presenting stimulus in a location on the background surface that corresponds to the patient's blind spot
    /// </summary>
    public static readonly Coding BlindSpotMonitoring = new Coding
    {
      Code = "111844",
      Display = "Blind Spot Monitoring",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of monitoring the patient's fixation by presenting the stimulus to the patient's macula
    /// </summary>
    public static readonly Coding MacularFixationTesting = new Coding
    {
      Code = "111845",
      Display = "Macular Fixation Testing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of monitoring the patient's fixation by observation from the examiner of the patient
    /// </summary>
    public static readonly Coding ObservationByExaminer = new Coding
    {
      Code = "111846",
      Display = "Observation by Examiner",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Analysis Results are outside normal limits
    /// </summary>
    public static readonly Coding OutsideNormalLimits = new Coding
    {
      Code = "111847",
      Display = "Outside normal limits",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Analysis Results are borderline
    /// </summary>
    public static readonly Coding Borderline = new Coding
    {
      Code = "111848",
      Display = "Borderline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Analysis Results identify abnormally high sensitivity
    /// </summary>
    public static readonly Coding AbnormallyHighSensitivity = new Coding
    {
      Code = "111849",
      Display = "Abnormally high sensitivity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Analysis Results identify general reduction in sensitivity
    /// </summary>
    public static readonly Coding GeneralReductionInSensitivity = new Coding
    {
      Code = "111850",
      Display = "General reduction in sensitivity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Analysis Results identify Borderline and general reduction in sensitivity
    /// </summary>
    public static readonly Coding BorderlineAndGeneralReductionInSensitivity = new Coding
    {
      Code = "111851",
      Display = "Borderline and general reduction in sensitivity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Index of a patient's remaining visual field normalized for both age and generalized defect
    /// </summary>
    public static readonly Coding VisualFieldIndex = new Coding
    {
      Code = "111852",
      Display = "Visual Field Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Estimate of the portion of a patient's visual field loss that is diffuse (i.e., spread evenly across all portions of the visual field)
    /// </summary>
    public static readonly Coding VisualFieldLossDueToDiffuseDefect = new Coding
    {
      Code = "111853",
      Display = "Visual Field Loss Due to Diffuse Defect",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Estimate of the portion of a patient's visual field loss that is local (i.e., not spread evenly across all portions of the visual field)
    /// </summary>
    public static readonly Coding VisualFieldLossDueToLocalDefect = new Coding
    {
      Code = "111854",
      Display = "Visual Field Loss Due to Local Defect",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An analysis of asymmetry between zones of the superior and inferior visual field. It is designed to be specific for defects due to glaucoma
    /// </summary>
    public static readonly Coding GlaucomaHemifieldTestAnalysis = new Coding
    {
      Code = "111855",
      Display = "Glaucoma Hemifield Test Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The data output of an optical fixation monitoring process, consisting of a list of positive and negative numbers indicating the quality of patient fixation over the course of a visual field test. The value 0 represents the initial fixation. Negative numbers indicate a measuring error (i.e., the patient blinked). Positive numbers quantify the degree of eccentricity from initial fixation
    /// </summary>
    public static readonly Coding OpticalFixationMeasurements = new Coding
    {
      Code = "111856",
      Display = "Optical Fixation Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend that is centered on the macula; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding MaculaCentered = new Coding
    {
      Code = "111900",
      Display = "Macula centered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend that is centered on the optic disc; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding DiscCentered = new Coding
    {
      Code = "111901",
      Display = "Disc centered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of any angular subtend that is centered on a lesion located in any region of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding LesionCentered = new Coding
    {
      Code = "111902",
      Display = "Lesion centered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend centered midway between the disc and macula and containing at least a portion of the disc and both the disc and the macula; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding DiscMaculaCentered = new Coding
    {
      Code = "111903",
      Display = "Disc-macula centered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the central zone and the equator, and spanning both the superior-temporal and superior-nasal quadrants of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding MidPeripheralSuperior = new Coding
    {
      Code = "111904",
      Display = "Mid-peripheral-superior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the central zone and the equator in the superior-temporal quadrant of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding MidPeripheralSuperiorTemporal = new Coding
    {
      Code = "111905",
      Display = "Mid-peripheral-superior temporal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the central zone and the equator, and spanning both the superior-temporal and inferior-temporal quadrants of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding MidPeripheralTemporal = new Coding
    {
      Code = "111906",
      Display = "Mid-peripheral-temporal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the central zone and the equator in the inferior-temporal quadrant of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding MidPeripheralInferiorTemporal = new Coding
    {
      Code = "111907",
      Display = "Mid-peripheral-inferior temporal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the central zone and the equator, and spanning both the inferior-temporal and inferior-nasal quadrants of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding MidPeripheralInferior = new Coding
    {
      Code = "111908",
      Display = "Mid-peripheral-inferior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the central zone and the equator in the inferior-nasal quadrant of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding MidPeripheralInferiorNasal = new Coding
    {
      Code = "111909",
      Display = "Mid-peripheral-inferior nasal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the central zone and the equator, and spanning both the superior-nasal and inferior-nasal quadrants of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding MidPeripheralNasal = new Coding
    {
      Code = "111910",
      Display = "Mid-peripheral-nasal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the central zone and the equator in the superior-nasal quadrant of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding MidPeripheralSuperiorNasal = new Coding
    {
      Code = "111911",
      Display = "Mid-peripheral-superior nasal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the equator and the ora serrata, and spanning both the superior temporal and superior nasal quadrants of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding PeripheralSuperior = new Coding
    {
      Code = "111912",
      Display = "Peripheral-superior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the equator and ora serrata in the superior-temporal quadrant of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding PeripheralSuperiorTemporal = new Coding
    {
      Code = "111913",
      Display = "Peripheral-superior temporal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the equator and ora serrata, and spanning both the superior-temporal and inferior-temporal quadrants of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding PeripheralTemporal = new Coding
    {
      Code = "111914",
      Display = "Peripheral-temporal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the equator and ora serrata in the inferior-temporal quadrant of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding PeripheralInferiorTemporal = new Coding
    {
      Code = "111915",
      Display = "Peripheral-inferior temporal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the equator and ora serrata, and spanning both the inferior-temporal and inferior-nasal quadrants of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding PeripheralInferior = new Coding
    {
      Code = "111916",
      Display = "Peripheral-inferior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the equator and ora serrata in the inferior-nasal quadrant of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding PeripheralInferiorNasal = new Coding
    {
      Code = "111917",
      Display = "Peripheral-inferior nasal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the equator and ora serrata, and spanning both the superior-nasal and inferior-nasal quadrants of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding PeripheralNasal = new Coding
    {
      Code = "111918",
      Display = "Peripheral-nasal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image of at least 15° angular subtend positioned between the equator and ora serrata in the superior-nasal quadrant of the fundus; see Section U.1.8 "Relative Image Position Definitions" in PS3.17
    /// </summary>
    public static readonly Coding PeripheralSuperiorNasal = new Coding
    {
      Code = "111919",
      Display = "Peripheral-superior nasal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifies the use of physical signals with respect to time to capture information
    /// </summary>
    public static readonly Coding TimeDomain = new Coding
    {
      Code = "111920",
      Display = "Time domain",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifies the use of physical signals with respect to multiple frequencies to capture information
    /// </summary>
    public static readonly Coding SpectralDomain = new Coding
    {
      Code = "111921",
      Display = "Spectral domain",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No compensation algorithm for corneal birefringence
    /// </summary>
    public static readonly Coding NoCornealCompensation = new Coding
    {
      Code = "111922",
      Display = "No corneal compensation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Algorithm to compensate for variability in corneal birefringence
    /// </summary>
    public static readonly Coding CornealBirefringenceCompensation = new Coding
    {
      Code = "111923",
      Display = "Corneal birefringence compensation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement of the retinal surface contour relative to an assigned datum plane
    /// </summary>
    public static readonly Coding RetinalTopography = new Coding
    {
      Code = "111924",
      Display = "Retinal topography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement approximating the distance related to the structure between the internal limiting membrane (ILM) and the outer boarder of the retinal nerve fiber layer (RNFL); see Section III.6 "Retinal Thickness Definition" in PS3.17
    /// </summary>
    public static readonly Coding RetinalNerveFiberLayerThickness = new Coding
    {
      Code = "111925",
      Display = "Retinal nerve fiber layer thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement approximating the distance related to the structure between the ILM and the outer border of the inner plexiform layer (IPL), called the ganglion cell complex (GCC); see Section III.6 "Retinal Thickness Definition" in PS3.17
    /// </summary>
    public static readonly Coding GanglionCellComplexThickness = new Coding
    {
      Code = "111926",
      Display = "Ganglion cell complex thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement approximating the distance related to the structure between the ILM and the inner-outer segment junction (IS-OS); see Section III.6 "Retinal Thickness Definition" in PS3.17
    /// </summary>
    public static readonly Coding TotalRetinalThicknessILMToISOS = new Coding
    {
      Code = "111927",
      Display = "Total retinal thickness (ILM to IS-OS)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement approximating the distance related to the structure between the ILM and the retinal pigment epithelium (RPE); see Section III.6 "Retinal Thickness Definition" in PS3.17
    /// </summary>
    public static readonly Coding TotalRetinalThicknessILMToRPE = new Coding
    {
      Code = "111928",
      Display = "Total retinal thickness (ILM to RPE)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement approximating the distance related to the structure between the ILM and the Bruch's membrane (BM); see Section III.6 "Retinal Thickness Definition" in PS3.17
    /// </summary>
    public static readonly Coding TotalRetinalThicknessILMToBM = new Coding
    {
      Code = "111929",
      Display = "Total retinal thickness (ILM to BM)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Thickness of a component of the posterior segment of the eye; e.g. thickness of retina, choroid, etc.
    /// </summary>
    public static readonly Coding AbsoluteOphthalmicThickness = new Coding
    {
      Code = "111930",
      Display = "Absolute ophthalmic thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ophthalmic Thickness map based upon statistical significance category (such as percentile) from a normative data set
    /// </summary>
    public static readonly Coding ThicknessDeviationCategoryFromNormativeData = new Coding
    {
      Code = "111931",
      Display = "Thickness deviation category from normative data",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ophthalmic Thickness map based upon deviation (such as microns) from a normative data set
    /// </summary>
    public static readonly Coding ThicknessDeviationFromNormativeData = new Coding
    {
      Code = "111932",
      Display = "Thickness deviation from normative data",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ophthalmic Thickness Map related to another Ophthalmic Thickness Map or another SOP Instance
    /// </summary>
    public static readonly Coding RelatedOphthalmicThicknessMap = new Coding
    {
      Code = "111933",
      Display = "Related ophthalmic thickness map",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An anatomic point centered midway between the disc and fovea centralis
    /// </summary>
    public static readonly Coding DiscFovea = new Coding
    {
      Code = "111934",
      Display = "Disc-Fovea",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assuming the null hypothesis is true, the conditional percent probability of observing this result is not statistically significant
    /// </summary>
    public static readonly Coding PGreaterThan5Percent = new Coding
    {
      Code = "111935",
      Display = "p>5%",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assuming the null hypothesis is true, the conditional percent probability of observing this result is statistically significant, 95% unlikely to happen by chance
    /// </summary>
    public static readonly Coding PLessThan5Percent = new Coding
    {
      Code = "111936",
      Display = "p<5%",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assuming the null hypothesis is true, the conditional percent probability of observing this result is statistically significant, 98% unlikely to happen by chance
    /// </summary>
    public static readonly Coding PLessThan2Percent = new Coding
    {
      Code = "111937",
      Display = "p<2%",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assuming the null hypothesis is true, the conditional percent probability of observing this result is statistically significant, 99% unlikely to happen by chance
    /// </summary>
    public static readonly Coding PLessThan1Percent = new Coding
    {
      Code = "111938",
      Display = "p<1%",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assuming the null hypothesis is true, the conditional percent probability of observing this result is statistically significant, 99.5% unlikely to happen by chance
    /// </summary>
    public static readonly Coding PLessThan05Percent = new Coding
    {
      Code = "111939",
      Display = "p<0.5%",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A two dimensional representation of the axial curvature of the cornea. Axial curvature is calculated from the reciprocal of the distance from a point on a meridian normal at the point to the corneal topographer axis. Also known as sagittal curvature
    /// </summary>
    public static readonly Coding CornealAxialPowerMap = new Coding
    {
      Code = "111940",
      Display = "Corneal axial power map",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A two dimensional representation of the instantaneous curvature of the cornea. Instantaneous curvature is calculated from the reciprocal of the distance from a point on a meridian normal at the point to the center of curvature of that point. Also called tangential curvature
    /// </summary>
    public static readonly Coding CornealInstantaneousPowerMap = new Coding
    {
      Code = "111941",
      Display = "Corneal instantaneous power map",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A two dimensional representation of the refractive power of the cornea. Corneal refractive power is calculated using Snell's Law
    /// </summary>
    public static readonly Coding CornealRefractivePowerMap = new Coding
    {
      Code = "111942",
      Display = "Corneal refractive power map",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A two dimensional representation of the elevation of the cornea. Elevation is calculated as the distance from a point on the corneal surface to a point on a reference surface along a line parallel to the corneal topographer axis. For the purpose of visualization the reference surface is usually a sphere or an ellipse
    /// </summary>
    public static readonly Coding CornealElevationMap = new Coding
    {
      Code = "111943",
      Display = "Corneal elevation map",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A two dimensional representation of a wavefront aberration surface of the cornea. Wavefront aberration surface is calculated from the corneal elevation data fit with either the Zernike polynomial series or the Fourier Series. Maps generally display total aberrations and selectable higher order aberrations
    /// </summary>
    public static readonly Coding CornealWavefrontMap = new Coding
    {
      Code = "111944",
      Display = "Corneal wavefront map",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A device that measures corneal anterior surface shape using elevation-based methods (stereographic and light slit-based). Rasterstereography images a grid pattern illuminating the fluorescein dyed tear film with 2 cameras to produce 3D. Slit-based devices scan the cornea, usually by rotation about the instrument axis centered on the cornea vertex
    /// </summary>
    public static readonly Coding ElevationBasedCornealTomographer = new Coding
    {
      Code = "111945",
      Display = "Elevation-based corneal tomographer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A reflection-based device that projects a pattern of light onto the cornea and an image of the reflection of that pattern from the tear film is recorded in one video frame. Light patterns include the circular mire pattern (Placido disc) and spot matrix patterns. Sequential scanning of light spots reflected from the corneal surface is also used requiring multiple video frames for recording
    /// </summary>
    public static readonly Coding ReflectionBasedCornealTopographer = new Coding
    {
      Code = "111946",
      Display = "Reflection-based corneal topographer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An Interference-based device that projects a beam of light onto and through the cornea. Light reflected from within the cornea is combined with a reference beam giving rise to an interference pattern. Appropriately scanned, this imaging is used to construct 3-dimensional images of the cornea from anterior to posterior surfaces; e.g. swept source OCT
    /// </summary>
    public static readonly Coding InterferometryBasedCornealTomographer = new Coding
    {
      Code = "111947",
      Display = "Interferometry-based corneal tomographer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A structured report containing the results of computer-aided detection or diagnosis applied to chest imaging and associated clinical information
    /// </summary>
    public static readonly Coding ChestCADReport = new Coding
    {
      Code = "112000",
      Display = "Chest CAD Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The shadow of an absorber that attenuates the X-Ray beam more effectively than do surrounding absorbers. In a radiograph, any circumscribed area that appears more nearly white (of lesser photometric density) than its surround [Fraser and Pare]
    /// </summary>
    public static readonly Coding Opacity = new Coding
    {
      Code = "112001",
      Display = "Opacity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A unique identifier for a series of DICOM SOP instances
    /// </summary>
    public static readonly Coding SeriesInstanceUID = new Coding
    {
      Code = "112002",
      Display = "Series Instance UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A named anatomic region within the chest cavity
    /// </summary>
    public static readonly Coding AssociatedChestComponent = new Coding
    {
      Code = "112003",
      Display = "Associated Chest Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A collection of opacities detected within the continuum of loose connective tissue throughout the lung, that is not expected in a diagnostically normal radiograph
    /// </summary>
    public static readonly Coding AbnormalInterstitialPattern = new Coding
    {
      Code = "112004",
      Display = "Abnormal interstitial pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A type of anatomy that is expected to be detectable on a radiographic (X-Ray based) image
    /// </summary>
    public static readonly Coding RadiographicAnatomy = new Coding
    {
      Code = "112005",
      Display = "Radiographic anatomy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Characteristic of the extent of spreading of a finding or feature
    /// </summary>
    public static readonly Coding DistributionDescriptor = new Coding
    {
      Code = "112006",
      Display = "Distribution Descriptor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Characteristic of the clarity of the boundary or edges of a finding or feature
    /// </summary>
    public static readonly Coding BorderDefinition = new Coding
    {
      Code = "112007",
      Display = "Border definition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The part(s) of the anatomy affected or encompassed by a finding or feature
    /// </summary>
    public static readonly Coding SiteInvolvement = new Coding
    {
      Code = "112008",
      Display = "Site involvement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Characteristic of the matter or substance within a finding or feature
    /// </summary>
    public static readonly Coding TypeOfContent = new Coding
    {
      Code = "112009",
      Display = "Type of Content",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Characteristic of the surface or consistency of a finding or feature
    /// </summary>
    public static readonly Coding TextureDescriptor = new Coding
    {
      Code = "112010",
      Display = "Texture Descriptor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Position of the X-Ray beam about the patient from the RAO to LAO direction where movement from RAO to vertical is positive
    /// </summary>
    public static readonly Coding PositionerPrimaryAngle = new Coding
    {
      Code = "112011",
      Display = "Positioner Primary Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Position of the X-Ray beam about the patient from the caudal to cranial direction where movement from caudal to vertical is positive
    /// </summary>
    public static readonly Coding PositionerSecondaryAngle = new Coding
    {
      Code = "112012",
      Display = "Positioner Secondary Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The zone, lobe or segment within the chest cavity in which a finding or feature is situated
    /// </summary>
    public static readonly Coding LocationInChest = new Coding
    {
      Code = "112013",
      Display = "Location in Chest",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vertical refers to orientation parallel to the superior-inferior (cephalad-caudad) axis of the body, with horizontal being perpendicular to this, and an oblique orientation having projections in both the horizontal and vertical
    /// </summary>
    public static readonly Coding OrientationDescriptor = new Coding
    {
      Code = "112014",
      Display = "Orientation Descriptor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Characteristic of the shape formed by the boundary or edges of a finding or feature
    /// </summary>
    public static readonly Coding BorderShape = new Coding
    {
      Code = "112015",
      Display = "Border shape",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates whether a finding was considered a target lesion, non-target lesion, or non-lesion during evaluation of a baseline series, according to a method such as RECIST
    /// </summary>
    public static readonly Coding BaselineCategory = new Coding
    {
      Code = "112016",
      Display = "Baseline Category",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The extent of a detected cavity, represented as the percent of the surrounding volume that it occupies
    /// </summary>
    public static readonly Coding CavityExtentAsPercentOfVolume = new Coding
    {
      Code = "112017",
      Display = "Cavity extent as percent of volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The extent of a detected calcification, represented as the percent of the surrounding surface that it occupies
    /// </summary>
    public static readonly Coding CalcificationExtentAsPercentOfSurface = new Coding
    {
      Code = "112018",
      Display = "Calcification extent as percent of surface",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The extent of a detected calcification, represented as the percent of the surrounding volume that it occupies
    /// </summary>
    public static readonly Coding CalcificationExtentAsPercentOfVolume = new Coding
    {
      Code = "112019",
      Display = "Calcification extent as percent of volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A heading for the reporting of response evaluation for treatment of solid tumors
    /// </summary>
    public static readonly Coding ResponseEvaluation = new Coding
    {
      Code = "112020",
      Display = "Response Evaluation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The system applied in the reporting of response evaluation for treatment of solid tumors
    /// </summary>
    public static readonly Coding ResponseEvaluationMethod = new Coding
    {
      Code = "112021",
      Display = "Response Evaluation Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Response Evaluation Criteria In Solid Tumors; see Normative References
    /// </summary>
    public static readonly Coding RECIST = new Coding
    {
      Code = "112022",
      Display = "RECIST",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A term that further specifies the name of an item that is an inferred correlation relating two or more individual findings or features
    /// </summary>
    public static readonly Coding CompositeFeatureModifier = new Coding
    {
      Code = "112023",
      Display = "Composite Feature Modifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A term that further specifies the name of an item that was detected on one image
    /// </summary>
    public static readonly Coding SingleImageFindingModifier = new Coding
    {
      Code = "112024",
      Display = "Single Image Finding Modifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor for the extent of a finding or feature
    /// </summary>
    public static readonly Coding SizeDescriptor = new Coding
    {
      Code = "112025",
      Display = "Size Descriptor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor for the thickness of tubular structures, such as blood vessels
    /// </summary>
    public static readonly Coding WidthDescriptor = new Coding
    {
      Code = "112026",
      Display = "Width Descriptor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A characteristic that further describes the nature of an opacity
    /// </summary>
    public static readonly Coding OpacityDescriptor = new Coding
    {
      Code = "112027",
      Display = "Opacity Descriptor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The type of adverse affect that a finding or feature is having on the surrounding anatomy
    /// </summary>
    public static readonly Coding AbnormalDistributionOfAnatomicStructure = new Coding
    {
      Code = "112028",
      Display = "Abnormal Distribution of Anatomic Structure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Response evaluation method as defined in chapter 5, "Reporting of Response" of the WHO Handbook for Reporting Results for Cancer Treatment; see Normative References
    /// </summary>
    public static readonly Coding WHO = new Coding
    {
      Code = "112029",
      Display = "WHO",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identification of the morphology of detected calcifications
    /// </summary>
    public static readonly Coding CalcificationDescriptor = new Coding
    {
      Code = "112030",
      Display = "Calcification Descriptor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A quantitative numerical statement of the relative attenuation of the X-Ray beam at a specified point. Coefficient that describes the fraction of a beam of X-Rays or gamma rays that is absorbed or scattered per unit thickness of the absorber. This value basically accounts for the number of atoms in a cubic cm volume of material and the probability of a photon being scattered or absorbed from the nucleus or an electron of one of these atoms. Usually expressed in Hounsfield units [referred to as CT Number in Fraser and Pare]
    /// </summary>
    public static readonly Coding AttenuationCoefficient = new Coding
    {
      Code = "112031",
      Display = "Attenuation Coefficient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An X-Ray attenuation coefficient that is used as a threshold; e.g. in calcium scoring
    /// </summary>
    public static readonly Coding ThresholdAttenuationCoefficient = new Coding
    {
      Code = "112032",
      Display = "Threshold Attenuation Coefficient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An opacity that is not expected in a diagnostically normal radiograph
    /// </summary>
    public static readonly Coding AbnormalOpacity = new Coding
    {
      Code = "112033",
      Display = "Abnormal opacity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A textual description of the mathematical method of calculation that resulted in a calculated value
    /// </summary>
    public static readonly Coding CalculationDescription = new Coding
    {
      Code = "112034",
      Display = "Calculation Description",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// American College of Radiology. ACR Standard for the Performance of Pediatric and Adult Chest Radiography. In: Standards. Reston, Va: 2001:95-98
    /// </summary>
    public static readonly Coding PerformanceOfPediatricAndAdultChestRadiographyACR = new Coding
    {
      Code = "112035",
      Display = "Performance of Pediatric and Adult Chest Radiography, ACR",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// American College of Radiology. ACR Position Statement for Quality Control and Improvement, Safety, Infection Control, and Patient Concerns. In: Practice Guidelines and Technical Standards. Reston, Va: 2001:iv
    /// </summary>
    public static readonly Coding ACRPositionStatement = new Coding
    {
      Code = "112036",
      Display = "ACR Position Statement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A descriptor for a non-lesion object finding or feature, used to indicate whether the object was detected as being internal or external to the patient's body
    /// </summary>
    public static readonly Coding NonLesionModifier = new Coding
    {
      Code = "112037",
      Display = "Non-lesion Modifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A concept modifier for an Osseous Anatomy, or bone related, finding
    /// </summary>
    public static readonly Coding OsseousModifier = new Coding
    {
      Code = "112038",
      Display = "Osseous Modifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A text label used for tracking a finding or feature, potentially across multiple reporting objects, over time. This label shall be unique within the domain in which it is used
    /// </summary>
    public static readonly Coding TrackingIdentifier = new Coding
    {
      Code = "112039",
      Display = "Tracking Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A unique identifier used for tracking a finding or feature, potentially across multiple reporting objects, over time
    /// </summary>
    public static readonly Coding TrackingUniqueIdentifier = new Coding
    {
      Code = "112040",
      Display = "Tracking Unique Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Disappearance of all target lesions
    /// </summary>
    public static readonly Coding TargetLesionCompleteResponse = new Coding
    {
      Code = "112041",
      Display = "Target Lesion Complete Response",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// At least a 30% decrease in the sum of the Longest Diameter of target lesions, taking as reference the baseline sum Longest Diameter
    /// </summary>
    public static readonly Coding TargetLesionPartialResponse = new Coding
    {
      Code = "112042",
      Display = "Target Lesion Partial Response",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// At least a 20% increase in the sum of the Longest Diameter of target lesions, taking as reference the smallest sum Longest Diameter recorded since the treatment started, or the appearance of one or more new lesions
    /// </summary>
    public static readonly Coding TargetLesionProgressiveDisease = new Coding
    {
      Code = "112043",
      Display = "Target Lesion Progressive Disease",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Neither sufficient shrinkage to qualify for Partial Response nor sufficient increase to qualify for Progressive Disease, taking as reference the smallest sum Longest Diameter since the treatment started
    /// </summary>
    public static readonly Coding TargetLesionStableDisease = new Coding
    {
      Code = "112044",
      Display = "Target Lesion Stable Disease",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Disappearance of all non-target lesions and normalization of tumor marker level
    /// </summary>
    public static readonly Coding NonTargetLesionCompleteResponse = new Coding
    {
      Code = "112045",
      Display = "Non-Target Lesion Complete Response",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Persistence of one or more non-target lesions and/or maintenance of tumor marker level above the normal limits
    /// </summary>
    public static readonly Coding NonTargetLesionIncompleteResponseOrStableDisease = new Coding
    {
      Code = "112046",
      Display = "Non-Target Lesion Incomplete Response or Stable Disease",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Appearance of one or more new lesions and/or unequivocal progression of existing non-target lesions
    /// </summary>
    public static readonly Coding NonTargetLesionProgressiveDisease = new Coding
    {
      Code = "112047",
      Display = "Non-Target Lesion Progressive Disease",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The current response evaluation for treatment of solid tumors, according to a method such as RECIST
    /// </summary>
    public static readonly Coding CurrentResponse = new Coding
    {
      Code = "112048",
      Display = "Current Response",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Best response recorded from the start of the treatment until disease progression/recurrence, taking as reference for Progressive Disease the smallest measurements recorded since the treatment started, according to a method such as RECIST
    /// </summary>
    public static readonly Coding BestOverallResponse = new Coding
    {
      Code = "112049",
      Display = "Best Overall Response",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A text identifier of an anatomic feature when a multiplicity of features of that type may be present, such as "Rib 1", "Rib 2" or thoracic vertebrae "T1" or "T2"
    /// </summary>
    public static readonly Coding AnatomicIdentifier = new Coding
    {
      Code = "112050",
      Display = "Anatomic Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A measured or calculated evaluation of response; e.g. according to a method such as RECIST, the value would be the calculated sum of the lengths of the longest axes of a set of target lesions
    /// </summary>
    public static readonly Coding MeasurementOfResponse = new Coding
    {
      Code = "112051",
      Display = "Measurement of Response",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Of or relating to a bronchial (lung) specific channel for the conveyance of a body fluid
    /// </summary>
    public static readonly Coding Bronchovascular = new Coding
    {
      Code = "112052",
      Display = "Bronchovascular",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Of, relating to, or composed of bone
    /// </summary>
    public static readonly Coding Osseous = new Coding
    {
      Code = "112053",
      Display = "Osseous",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The smallest unit of lung surrounded by connective tissue septa; the unit of lung subtended by any bronchiole that gives off three to five terminal bronchioles [Fraser and Pare]
    /// </summary>
    public static readonly Coding SecondaryPulmonaryLobule = new Coding
    {
      Code = "112054",
      Display = "Secondary pulmonary lobule",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of calculating an overall calcium score, reflecting the calcification of coronary arteries, based on the maximum X-Ray attenuation coefficient and the area of calcium deposits
    /// </summary>
    public static readonly Coding AgatstonScoringMethod = new Coding
    {
      Code = "112055",
      Display = "Agatston scoring method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of calculating an overall calcium score, reflecting the calcification of coronary arteries, based on the volume of each calcification, typically expressed in mm3
    /// </summary>
    public static readonly Coding VolumeScoringMethod = new Coding
    {
      Code = "112056",
      Display = "Volume scoring method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of calculating an overall calcium score, reflecting the calcification of coronary arteries, based on the total mass of calcification, typically expressed in mg
    /// </summary>
    public static readonly Coding MassScoringMethod = new Coding
    {
      Code = "112057",
      Display = "Mass scoring method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A measure often arrived at through calculation of findings from CT examination, which is a common predictor of significant stenosis of the coronary arteries
    /// </summary>
    public static readonly Coding CalciumScore = new Coding
    {
      Code = "112058",
      Display = "Calcium score",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The combination of a focus of pneumonia due to a primary infection with granulomas in the draining hilar or mediastinal lymph nodes [Fraser and Pare]
    /// </summary>
    public static readonly Coding PrimaryComplex = new Coding
    {
      Code = "112059",
      Display = "Primary complex",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// General or local decrease in the apparent width of visible pulmonary vessels, suggesting less than normal blood flow (reduced blood flow) [Fraser and Pare]
    /// </summary>
    public static readonly Coding Oligemia = new Coding
    {
      Code = "112060",
      Display = "Oligemia",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Linear opacity of very fine width, i.e., a nearly one dimensional opacity
    /// </summary>
    public static readonly Coding AbnormalLines1D = new Coding
    {
      Code = "112061",
      Display = "Abnormal lines (1D)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Area of abnormal very low X-Ray attenuation, typically lower than aerated lung when occurring in or projecting over lung, or lower than soft tissue when occurring in or projecting over soft tissue
    /// </summary>
    public static readonly Coding AbnormalLucency = new Coding
    {
      Code = "112062",
      Display = "Abnormal lucency",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A calcific opacity within the lung that may be organized, but does not display the trabecular organization of true bone [Fraser and Pare]
    /// </summary>
    public static readonly Coding AbnormalCalcifications = new Coding
    {
      Code = "112063",
      Display = "Abnormal calcifications",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Relatively homogeneous, extended, pattern of abnormal opacity in the lung, typically low in contrast
    /// </summary>
    public static readonly Coding AbnormalTexture = new Coding
    {
      Code = "112064",
      Display = "Abnormal texture",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A collection of innumerable small, linear, and nodular opacities that together produce a composite appearance resembling a net with small superimposed nodules. The reticular and nodular elements are dimensionally of similar magnitude [Fraser and Pare]
    /// </summary>
    public static readonly Coding ReticulonodularPattern = new Coding
    {
      Code = "112065",
      Display = "Reticulonodular pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Irregular septal thickening that suggests the appearance of a row of beads; usually a sign of lymphangitic carcinomatosis, but may also occur rarely in sarcoidosis [Fraser and Pare]
    /// </summary>
    public static readonly Coding BeadedSeptumSign = new Coding
    {
      Code = "112066",
      Display = "Beaded septum sign",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A collection of innumerable, small discrete opacities ranging in diameter from 2-10 mm, generally uniform in size and widespread in distribution, and without marginal spiculation [Fraser and Pare]
    /// </summary>
    public static readonly Coding NodularPattern = new Coding
    {
      Code = "112067",
      Display = "Nodular pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An irregular band of peripheral pulmonary opacity adjacent to visceral pleura that simulates the appearance of a pleural plaque and is formed by coalescence of small nodules [Fraser and Pare] 
    /// </summary>
    public static readonly Coding Pseudoplaque = new Coding
    {
      Code = "112068",
      Display = "Pseudoplaque",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A ring of opacities (usually representing a dilated, thick-walled bronchus) in association with a smaller, round, soft tissue opacity (the adjacent pulmonary artery) suggesting a "signet ring" [Fraser and Pare]
    /// </summary>
    public static readonly Coding SignetRingSign = new Coding
    {
      Code = "112069",
      Display = "Signet-ring sign",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equivalent of air bronchogram, but in airways assumed to be bronchioles because of peripheral location and diameter [Fraser and Pare]
    /// </summary>
    public static readonly Coding AirBronchiologram = new Coding
    {
      Code = "112070",
      Display = "Air bronchiologram",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiographic shadow of an air-containing bronchus; presumed to represent an air-containing segment of the bronchial tree (identity often inferred) [Fraser and Pare]
    /// </summary>
    public static readonly Coding AirBronchogram = new Coding
    {
      Code = "112071",
      Display = "Air bronchogram",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Air in a crescentic shape in a nodule or mass, in which the air separates the outer wall of the lesion from an inner sequestrum, which most commonly is a fungus ball of Aspergillusspecies [Fraser and Pare]
    /// </summary>
    public static readonly Coding AirCrescent = new Coding
    {
      Code = "112072",
      Display = "Air crescent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ground-glass opacity surrounding the circumference of a nodule or mass. May be a sign of invasive aspergillosis or hemorrhage of various causes [Fraser and Pare]
    /// </summary>
    public static readonly Coding HaloSign = new Coding
    {
      Code = "112073",
      Display = "Halo sign",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Flag denoting that this lesion was identified, at baseline, as a target lesion intended for tracking over time [RECIST]
    /// </summary>
    public static readonly Coding TargetLesionAtBaseline = new Coding
    {
      Code = "112074",
      Display = "Target Lesion at Baseline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Flag denoting that this lesion was not identified, at baseline, as a target lesion, and was not intended for tracking over time [RECIST]
    /// </summary>
    public static readonly Coding NonTargetLesionAtBaseline = new Coding
    {
      Code = "112075",
      Display = "Non-Target Lesion at Baseline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Flag denoting that this finding was identified, at baseline, as a category other than a lesion, and was not intended for tracking over time [RECIST]
    /// </summary>
    public static readonly Coding NonLesionAtBaseline = new Coding
    {
      Code = "112076",
      Display = "Non-Lesion at Baseline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Local or general reduction in the caliber of visible pulmonary vessels, presumed to result from decreased flow occasioned by contraction of muscular pulmonary arteries [Fraser and Pare]
    /// </summary>
    public static readonly Coding Vasoconstriction = new Coding
    {
      Code = "112077",
      Display = "Vasoconstriction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Local or general increase in the width of visible pulmonary vessels resulting from increased pulmonary blood flow [Fraser and Pare]
    /// </summary>
    public static readonly Coding Vasodilation = new Coding
    {
      Code = "112078",
      Display = "Vasodilation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A manifestation of lung disease in which bronchi, pulmonary vessels, a fissure or fissures, or septa of secondary pulmonary lobules are abnormally displaced [Fraser and Pare]
    /// </summary>
    public static readonly Coding ArchitecturalDistortion = new Coding
    {
      Code = "112079",
      Display = "Architectural distortion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A patchwork of regions of varied attenuation, interpreted as secondary to regional differences in perfusion [Fraser and Pare]
    /// </summary>
    public static readonly Coding MosaicPerfusion = new Coding
    {
      Code = "112080",
      Display = "Mosaic perfusion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Increased blood flow to the lungs or a portion thereof, manifested by a general or local increase in the width of visible pulmonary vessels [Fraser and Pare]
    /// </summary>
    public static readonly Coding Pleonemia = new Coding
    {
      Code = "112081",
      Display = "Pleonemia",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The common boundary between the shadows of two juxtaposed structures or tissues of different texture or opacity (edge, border) [Fraser and Pare]
    /// </summary>
    public static readonly Coding Interface = new Coding
    {
      Code = "112082",
      Display = "Interface",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A longitudinal opacity no greater than 2 mm in width [Fraser and Pare]
    /// </summary>
    public static readonly Coding Line = new Coding
    {
      Code = "112083",
      Display = "Line",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The shadow of an absorber that attenuates the primary X-Ray beam less effectively than do surrounding absorbers. In a radiograph, any circumscribed area that appears more nearly black (of greater photometric density) than its surround [Fraser and Pare]
    /// </summary>
    public static readonly Coding Lucency = new Coding
    {
      Code = "112084",
      Display = "Lucency",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A midlung region, characterized by the absence of large blood vessels and by a paucity of small blood vessels, that corresponds to the minor fissure and adjacent peripheral lung [Fraser and Pare]
    /// </summary>
    public static readonly Coding MidlungWindow = new Coding
    {
      Code = "112085",
      Display = "Midlung window",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The angle formed by the right and left main bronchi at the tracheal bifurcation [Fraser and Pare]
    /// </summary>
    public static readonly Coding CarinaAngle = new Coding
    {
      Code = "112086",
      Display = "Carina angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The pulmonary artery and its immediate branches in a secondary lobule; HRCT depicts these vessels in certain cases; a.k.a. core structures or lobular core structures [Fraser and Pare]
    /// </summary>
    public static readonly Coding CentrilobularStructures = new Coding
    {
      Code = "112087",
      Display = "Centrilobular structures",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A vertically oriented linear or curvilinear opacity approximately 1-2 mm wide, commonly projected on the tracheal air shadow [Fraser and Pare]
    /// </summary>
    public static readonly Coding AnteriorJunctionLine = new Coding
    {
      Code = "112088",
      Display = "Anterior junction line",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A vertically oriented, linear or curvilinear opacity approximately 2 mm wide, commonly projected on the tracheal air shadow, and usually slightly concave to the right [Fraser and Pare]
    /// </summary>
    public static readonly Coding PosteriorJunctionLine = new Coding
    {
      Code = "112089",
      Display = "Posterior junction line",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A space in the right side of the mediastinum into which the medial edge of the right lower lobe extends [Fraser and Pare]
    /// </summary>
    public static readonly Coding AzygoesophagealRecessInterface = new Coding
    {
      Code = "112090",
      Display = "Azygoesophageal recess interface",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A vertically oriented interface usually seen in a frontal chest radiograph to the left of the thoracic vertebral column [Fraser and Pare]
    /// </summary>
    public static readonly Coding ParaspinalLine = new Coding
    {
      Code = "112091",
      Display = "Paraspinal line",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A vertically oriented linear opacity ranging in width from 2-5 mm, extending from the thoracic inlet to the bifurcation of the trachea, and visible only on lateral radiographs of the chest [Fraser and Pare]
    /// </summary>
    public static readonly Coding PosteriorTrachealStripe = new Coding
    {
      Code = "112092",
      Display = "Posterior tracheal stripe",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A vertically oriented linear opacity approximately 2-3 mm wide extending from the thoracic inlet to the right tracheobronchial angle [Fraser and Pare]
    /// </summary>
    public static readonly Coding RightTrachealStripe = new Coding
    {
      Code = "112093",
      Display = "Right tracheal stripe",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A longitudinal composite opacity measuring 2-5 mm in width; acceptable when limited to anatomic structures within the mediastinum [Fraser and Pare]
    /// </summary>
    public static readonly Coding Stripe = new Coding
    {
      Code = "112094",
      Display = "Stripe",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A gap or passage through an anatomical part or organ; especially : a gap through which another part or organ passes
    /// </summary>
    public static readonly Coding Hiatus = new Coding
    {
      Code = "112095",
      Display = "Hiatus",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A small rounded elevation or eminence on the first rib for the attachment of the scalenus anterior
    /// </summary>
    public static readonly Coding RibScaleneTubercle = new Coding
    {
      Code = "112096",
      Display = "Rib Scalene Tubercle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A groove that serves for the transmission of the vertebral artery
    /// </summary>
    public static readonly Coding VertebralIntervertebralNotch = new Coding
    {
      Code = "112097",
      Display = "Vertebral Intervertebral Notch",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The concave depression of the anterior surface of the scapula
    /// </summary>
    public static readonly Coding SubscapularFossa = new Coding
    {
      Code = "112098",
      Display = "Subscapular Fossa",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A sloping ridge dividing the dorsal surface of the scapula into the supraspinatous fossa (above), and the infraspinatous fossa (below)
    /// </summary>
    public static readonly Coding ScapularSpine = new Coding
    {
      Code = "112099",
      Display = "Scapular Spine",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The portion of the dorsal surface of the scapula above the scapular spine
    /// </summary>
    public static readonly Coding ScapularSupraspinatusFossa = new Coding
    {
      Code = "112100",
      Display = "Scapular Supraspinatus Fossa",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The portion of the dorsal surface of the scapula below the scapular spine
    /// </summary>
    public static readonly Coding ScapularInfraspinatusFossa = new Coding
    {
      Code = "112101",
      Display = "Scapular Infraspinatus Fossa",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The portion of the aortic arch that defines the transition between its ascending and descending limbs
    /// </summary>
    public static readonly Coding AorticKnob = new Coding
    {
      Code = "112102",
      Display = "Aortic knob",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Section of Azygos vein near the fourth thoracic vertebra, where it arches forward over the root of the right lung, and ends in the superior vena cava, just before that vessel pierces the pericardium
    /// </summary>
    public static readonly Coding ArchOfTheAzygosVein = new Coding
    {
      Code = "112103",
      Display = "Arch of the Azygos vein",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A local collection of gas and liquid that, when traversed by a horizontal X-Ray beam, creates a shadow characterized by a sharp horizontal interface between gas density above and liquid density below [Fraser and Pare]
    /// </summary>
    public static readonly Coding AirFluidLevel = new Coding
    {
      Code = "112104",
      Display = "Air-fluid level",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A circumferential pattern of fine linear spicules, approximately 5 mm long, extending outward from the margin of a solitary pulmonary nodule through a zone of relative lucency [Fraser and Pare]
    /// </summary>
    public static readonly Coding CoronaRadiata = new Coding
    {
      Code = "112105",
      Display = "Corona radiata",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A number of closely approximated ring shadows representing air spaces 5-10 mm in diameter with walls 2-3 mm thick that resemble a true honeycomb; implies "end-stage" lung [Fraser and Pare]
    /// </summary>
    public static readonly Coding HoneycombPattern = new Coding
    {
      Code = "112106",
      Display = "Honeycomb pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A straight, curved, or irregular linear opacity that is visible in multiple projections; usually situated in the lower half of the lung; vary markedly in length and width [Fraser and Pare]
    /// </summary>
    public static readonly Coding FleischnerQuoteSLineS = new Coding
    {
      Code = "112107",
      Display = "Fleischner's line(s)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fine linear opacities present in a lobule when the intralobular interstitium is thickened. When numerous, they may appear as a fine reticular pattern [Fraser and Pare]
    /// </summary>
    public static readonly Coding IntralobularLines = new Coding
    {
      Code = "112108",
      Display = "Intralobular lines",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Essentially straight linear opacity 2-6 cm in length and 1-3 mm in width, usually in an upper lung zone [Fraser and Pare]
    /// </summary>
    public static readonly Coding KerleyALine = new Coding
    {
      Code = "112109",
      Display = "Kerley A line",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A straight linear opacity 1.5-2 cm in length and 1-2 mm in width, usually at the lung base [Fraser and Pare]
    /// </summary>
    public static readonly Coding KerleyBLine = new Coding
    {
      Code = "112110",
      Display = "Kerley B line",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A group of branching, linear opacities producing the appearing of a fine net, at the lung base [Fraser and Pare]
    /// </summary>
    public static readonly Coding KerleyCLines = new Coding
    {
      Code = "112111",
      Display = "Kerley C lines",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Elongated opacity, usually several millimeters wide and up to about 5 cm long, often extending to the pleura, which may be thickened and retracted at the site of contact [Fraser and Pare]
    /// </summary>
    public static readonly Coding ParenchymalBand = new Coding
    {
      Code = "112112",
      Display = "Parenchymal band",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A collection of innumerable small linear opacities that together produce an appearance resembling a net [Fraser and Pare]
    /// </summary>
    public static readonly Coding ReticularPattern = new Coding
    {
      Code = "112113",
      Display = "Reticular pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Usually used in the plural, a generic term for linear opacities of varied distribution produced when the interstitium between pulmonary lobules is thickened [Fraser and Pare]
    /// </summary>
    public static readonly Coding SeptalLineS = new Coding
    {
      Code = "112114",
      Display = "Septal line(s)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A thin curvilinear opacity, a few millimeters or less in thickness, usually less than 1 cm from the pleural surface and paralleling the pleura [Fraser and Pare]
    /// </summary>
    public static readonly Coding SubpleuralLine = new Coding
    {
      Code = "112115",
      Display = "Subpleural line",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Parallel or slightly convergent linear opacities that suggest the planar projection of tubular structures and that correspond in location and orientation to elements of the bronchial tree [Fraser and Pare]
    /// </summary>
    public static readonly Coding TramlineShadow = new Coding
    {
      Code = "112116",
      Display = "Tramline shadow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Paired, parallel, or slightly convergent linear opacities presumed to represent the walls of a tubular structure seen en face; used if the anatomic nature of a shadow is obscure [Fraser and Pare]
    /// </summary>
    public static readonly Coding TubularShadow = new Coding
    {
      Code = "112117",
      Display = "Tubular shadow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The opacity of a radiographic shadow to visible light; film blackening; the term should never be used to mean an "opacity" or "radiopacity" [Fraser and Pare]
    /// </summary>
    public static readonly Coding Density = new Coding
    {
      Code = "112118",
      Display = "Density",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Subpleural increased attenuation in dependent lung. The increased attenuation disappears when the region of lung is nondependent; a.k.a. dependent increased attenuation [Fraser and Pare]
    /// </summary>
    public static readonly Coding DependentOpacity = new Coding
    {
      Code = "112119",
      Display = "Dependent opacity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hazy increased attenuation of lung, but with preservation of bronchial and vascular margins; caused by partial filling of air spaces, interstitial thickening, partial collapse of alveoli, normal expiration, or increased capillary blood volume [Fraser and Pare]
    /// </summary>
    public static readonly Coding GroundGlassOpacity = new Coding
    {
      Code = "112120",
      Display = "Ground glass opacity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Any ill-defined opacity in the lung [Fraser and Pare]
    /// </summary>
    public static readonly Coding Infiltrate = new Coding
    {
      Code = "112121",
      Display = "Infiltrate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Discrete, small, round, focal opacity of at least soft tissue attenuation and with a diameter no greater than 7 mm [Fraser and Pare]
    /// </summary>
    public static readonly Coding Micronodule = new Coding
    {
      Code = "112122",
      Display = "Micronodule",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A shadow produced by a local collection of fluid in one of the interlobar fissures, usually elliptic in one radiographic projection and rounded in the other, resembling a tumor [Fraser and Pare]
    /// </summary>
    public static readonly Coding PhantomTumorPseudotumor = new Coding
    {
      Code = "112123",
      Display = "Phantom tumor (pseudotumor)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Any perceptible discontinuity in film blackening attributed to the attenuation of the X-Ray beam by a specific anatomic absorber or lesion on or within the body of the patient; to be employed only when more specific identification is not possible [Fraser and Pare]
    /// </summary>
    public static readonly Coding Shadow = new Coding
    {
      Code = "112124",
      Display = "Shadow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Term used to define a reticular pattern specific to pneumoconioses [Fraser and Pare]
    /// </summary>
    public static readonly Coding SmallIrregularOpacities = new Coding
    {
      Code = "112125",
      Display = "Small irregular opacities",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Term used to define a nodular pattern specific to pneumoconioses [Fraser and Pare]
    /// </summary>
    public static readonly Coding SmallRoundedOpacities = new Coding
    {
      Code = "112126",
      Display = "Small rounded opacities",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nodular dilation of centrilobular branching structures that resembles a budding tree and represents exudative bronchiolar dilation [Fraser and Pare]
    /// </summary>
    public static readonly Coding TreeInBudSign = new Coding
    {
      Code = "112127",
      Display = "Tree-in-bud sign",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Any extended, finely granular pattern of pulmonary opacity within which normal anatomic details are partly obscured [Fraser and Pare]
    /// </summary>
    public static readonly Coding GranularPattern = new Coding
    {
      Code = "112128",
      Display = "Granular pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A collection of tiny discrete opacities in the lungs, each measuring 2 mm or less in diameter, generally uniform in size and widespread in distribution [Fraser and Pare]
    /// </summary>
    public static readonly Coding MiliaryPattern = new Coding
    {
      Code = "112129",
      Display = "Miliary pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Generalized pattern of relatively well defined areas in the lung having different X-Ray attenuations due to a longstanding underlying pulmonary disease
    /// </summary>
    public static readonly Coding MosaicPattern = new Coding
    {
      Code = "112130",
      Display = "Mosaic pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor of a size that is dramatically less than typical
    /// </summary>
    public static readonly Coding ExtremelySmall = new Coding
    {
      Code = "112131",
      Display = "Extremely small",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor of a size that is considerably less than typical
    /// </summary>
    public static readonly Coding VerySmall = new Coding
    {
      Code = "112132",
      Display = "Very small",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A qualitative descriptor of a size that is so small as to be abnormal versus expected size
    /// </summary>
    public static readonly Coding TooSmall = new Coding
    {
      Code = "112133",
      Display = "Too small",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Shaped like an ellipse (oval)
    /// </summary>
    public static readonly Coding Elliptic = new Coding
    {
      Code = "112134",
      Display = "Elliptic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A border shape that is made up of, provided with, or divided into lobules (small lobes, curved or rounded projections or divisions)
    /// </summary>
    public static readonly Coding Lobulated = new Coding
    {
      Code = "112135",
      Display = "Lobulated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radially orientated border shape
    /// </summary>
    public static readonly Coding Spiculated = new Coding
    {
      Code = "112136",
      Display = "Spiculated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The border of a shadow (opacity) is sharply defined [Fraser and Pare]
    /// </summary>
    public static readonly Coding SharplyDefined = new Coding
    {
      Code = "112137",
      Display = "Sharply defined",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The border of a shadow (opacity) is distinctly defined [Fraser and Pare]
    /// </summary>
    public static readonly Coding DistinctlyDefined = new Coding
    {
      Code = "112138",
      Display = "Distinctly defined",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The border of a shadow (opacity) is well distinct from adjacent structures [Fraser and Pare]
    /// </summary>
    public static readonly Coding WellDemarcated = new Coding
    {
      Code = "112139",
      Display = "Well demarcated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The border of a shadow (opacity) is sharply distinct from adjacent structures [Fraser and Pare]
    /// </summary>
    public static readonly Coding SharplyDemarcated = new Coding
    {
      Code = "112140",
      Display = "Sharply demarcated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The border of a shadow (opacity) is poorly distinct from adjacent structures [Fraser and Pare]
    /// </summary>
    public static readonly Coding PoorlyDemarcated = new Coding
    {
      Code = "112141",
      Display = "Poorly demarcated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A shadow (opacity) possessing a complete or nearly complete visible border [Fraser and Pare]
    /// </summary>
    public static readonly Coding Circumscribed = new Coding
    {
      Code = "112142",
      Display = "Circumscribed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Inspired atmospheric gas. The word is sometimes used to describe gas within the body regardless of its composition or site [Fraser and Pare]
    /// </summary>
    public static readonly Coding Air = new Coding
    {
      Code = "112143",
      Display = "Air",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Material having X-Ray attenuation properties similar to muscle
    /// </summary>
    public static readonly Coding SoftTissue = new Coding
    {
      Code = "112144",
      Display = "Soft tissue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Material having X-Ray attenuation properties similar to calcium, a silver-white bivalent metallic element occurring in plants and animals
    /// </summary>
    public static readonly Coding Calcium = new Coding
    {
      Code = "112145",
      Display = "Calcium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A pulmonary opacity 4-8 mm in diameter, presumed to represent anatomic acinus, or a collection of opacities in the lung, each measuring 4-8 mm in diameter, and together producing an extended, homogeneous shadow [Fraser and Pare]
    /// </summary>
    public static readonly Coding Acinar = new Coding
    {
      Code = "112146",
      Display = "Acinar",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The gas-containing portion of the lung parenchyma, including the acini and excluding the interstitium [Fraser and Pare]
    /// </summary>
    public static readonly Coding AirSpace = new Coding
    {
      Code = "112147",
      Display = "Air space",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Sharply defined, approximately circular opacities occurring singly or in clusters, usually in the upper lobes [Fraser and Pare]
    /// </summary>
    public static readonly Coding Fibronodular = new Coding
    {
      Code = "112148",
      Display = "Fibronodular",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A shadow (opacity) that is ill-defined, lacking clear-cut margins [Fraser and Pare]
    /// </summary>
    public static readonly Coding Fluffy = new Coding
    {
      Code = "112149",
      Display = "Fluffy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A shadow resembling a line; any elongated opacity of approximately uniform width [Fraser and Pare]
    /// </summary>
    public static readonly Coding Linear = new Coding
    {
      Code = "112150",
      Display = "Linear",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The number of small opacities per unit area or zone of lung. In the International Labor Organization (ILO) classification of radiographs of the pneumoconioses, the qualifiers 0 through 3 subdivide the profusion into 4 categories. The profusion categories may be further subdivided by employing a 12-point scale [Fraser and Pare]
    /// </summary>
    public static readonly Coding Profusion = new Coding
    {
      Code = "112151",
      Display = "Profusion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The effacement of an anatomic soft tissue border by either a normal anatomic structure or a pathologic state such as airlessness of adjacent lung or accumulation of fluid in the contiguous pleural space; useful in detecting and localizing an opacity along the axis of the X-Ray beam [Fraser and Pare]
    /// </summary>
    public static readonly Coding SilhouetteSign = new Coding
    {
      Code = "112152",
      Display = "Silhouette sign",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Situated or occurring between the pleura and the body wall
    /// </summary>
    public static readonly Coding Subpleural = new Coding
    {
      Code = "112153",
      Display = "Subpleural",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Spatial arrangement of opacities that bears vague resemblance to the shape of a bat in flight; bilaterally symmetric [Fraser and Pare]
    /// </summary>
    public static readonly Coding BatQuoteSWingDistribution = new Coding
    {
      Code = "112154",
      Display = "Bat's wing distribution",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Spatial arrangement of opacities that bears vague resemblance to the shape of a butterfly in flight; bilaterally symmetric [Fraser and Pare]
    /// </summary>
    public static readonly Coding ButterflyDistribution = new Coding
    {
      Code = "112155",
      Display = "Butterfly distribution",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Referring to the region of the bronchioloarteriolar core of a secondary pulmonary lobule [Fraser and Pare]
    /// </summary>
    public static readonly Coding Centrilobular = new Coding
    {
      Code = "112156",
      Display = "Centrilobular",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The joining together of a number of opacities into a single opacity [Fraser and Pare]
    /// </summary>
    public static readonly Coding Coalescent = new Coding
    {
      Code = "112157",
      Display = "Coalescent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Of or relating to a lobe (a curved or rounded projection or division); e.g. involving an entire lobe of the lung
    /// </summary>
    public static readonly Coding Lobar = new Coding
    {
      Code = "112158",
      Display = "Lobar",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Extremely or excessively acute, as a qualitative measure of severity
    /// </summary>
    public static readonly Coding HyperAcute = new Coding
    {
      Code = "112159",
      Display = "Hyper-acute",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Of uniform opacity or texture throughout [Fraser and Pare]
    /// </summary>
    public static readonly Coding HomogeneousUniformOpacity = new Coding
    {
      Code = "112160",
      Display = "Homogeneous (uniform opacity)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lack of homogeneity in opacity or texture
    /// </summary>
    public static readonly Coding Inhomogeneous = new Coding
    {
      Code = "112161",
      Display = "Inhomogeneous",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Discrete opacity centrally within a larger opacity, as a calcification descriptor
    /// </summary>
    public static readonly Coding Target = new Coding
    {
      Code = "112162",
      Display = "Target",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pertaining to sharply defined, linear, and/or nodular opacities containing calcification(s) [Fraser and Pare]
    /// </summary>
    public static readonly Coding Fibrocalcific = new Coding
    {
      Code = "112163",
      Display = "Fibrocalcific",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calcifications made up of loosely aggregated particles, resembling wool
    /// </summary>
    public static readonly Coding Flocculent = new Coding
    {
      Code = "112164",
      Display = "Flocculent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A location in image space, which may or may not correspond to an anatomical reference, which is often used for registering data sets
    /// </summary>
    public static readonly Coding FiducialMark = new Coding
    {
      Code = "112171",
      Display = "Fiducial mark",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Connected to an injection chamber placed under the skin in the upper part of the chest. When it is necessary to inject some drug, a specific needle is put in the chamber through the skin and a silicon membrane. The advantage of a portacath is that it may be left in place several months contrarily of "classical" catheters
    /// </summary>
    public static readonly Coding Portacath = new Coding
    {
      Code = "112172",
      Display = "Portacath",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A tube inserted into the chest wall from outside the body, for drainage. Sometimes used for collapsed lung. Usually connected to a receptor placed lower than the insertion site
    /// </summary>
    public static readonly Coding ChestTube = new Coding
    {
      Code = "112173",
      Display = "Chest tube",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A tube placed into the subclavian vein to deliver medication directly into the venous system
    /// </summary>
    public static readonly Coding CentralLine = new Coding
    {
      Code = "112174",
      Display = "Central line",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A stent is a tube inserted into another tube. Kidney stent is a tube that is inserted into the kidney, ureter, and bladder, to help drain urine. Usually inserted through a scoping device presented through the urethra
    /// </summary>
    public static readonly Coding KidneyStent = new Coding
    {
      Code = "112175",
      Display = "Kidney stent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A stent is a tube inserted into another tube. Pancreatic stent is inserted through the common bile duct to the pancreatic duct, to drain bile
    /// </summary>
    public static readonly Coding PancreaticStent = new Coding
    {
      Code = "112176",
      Display = "Pancreatic stent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A non-lesion object that appears to be a circular band, attached to the body via pierced nipple
    /// </summary>
    public static readonly Coding NippleRing = new Coding
    {
      Code = "112177",
      Display = "Nipple ring",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A non-lesion object that appears to be a flat round piece of metal
    /// </summary>
    public static readonly Coding Coin = new Coding
    {
      Code = "112178",
      Display = "Coin",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The least quantity assignable, admissible, or possible; the least of a set of X-Ray attenuation coefficients
    /// </summary>
    public static readonly Coding MinimumAttenuationCoefficient = new Coding
    {
      Code = "112179",
      Display = "Minimum Attenuation Coefficient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The greatest quantity or value attainable or attained; the largest of a set of X-Ray attenuation coefficients
    /// </summary>
    public static readonly Coding MaximumAttenuationCoefficient = new Coding
    {
      Code = "112180",
      Display = "Maximum Attenuation Coefficient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The value that is computed by dividing the sum of a set of X-Ray attenuation coefficients by the number of values 
    /// </summary>
    public static readonly Coding MeanAttenuationCoefficient = new Coding
    {
      Code = "112181",
      Display = "Mean Attenuation Coefficient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The value in an ordered set of X-Ray attenuation coefficients, below and above which there is an equal number of values
    /// </summary>
    public static readonly Coding MedianAttenuationCoefficient = new Coding
    {
      Code = "112182",
      Display = "Median Attenuation Coefficient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For a set of X-Ray attenuation coefficients: 1) a measure of the dispersion of a frequency distribution that is the square root of the arithmetic mean of the squares of the deviation of each of the class frequencies from the arithmetic mean of the frequency distribution; 2) a parameter that indicates the way in which a probability function or a probability density function is centered around its mean and that is equal to the square root of the moment in which the deviation from the mean is squared
    /// </summary>
    public static readonly Coding StandardDeviationOfAttenuationCoefficient = new Coding
    {
      Code = "112183",
      Display = "Standard Deviation of Attenuation Coefficient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// American College of Radiology. ACR Standard for the Performance of Pediatric and Adult Thoracic Computed Tomography (CT). In: Standards. Reston, Va: 2001:103-107
    /// </summary>
    public static readonly Coding PerformanceOfPediatricAndAdultThoracicCT = new Coding
    {
      Code = "112184",
      Display = "Performance of Pediatric and Adult Thoracic CT",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// American College of Radiology. ACR Standard for the Performance of Computed Tomography for the Detection of Pulmonary Embolism in Adults. In: Standards. Reston, Va: 2001:109-113
    /// </summary>
    public static readonly Coding PerformanceOfCTForDetectionOfPulmonaryEmbolismInAdults = new Coding
    {
      Code = "112185",
      Display = "Performance of CT for Detection of Pulmonary Embolism in Adults",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// American College of Radiology. ACR Standard for the Performance of High-Resolution Computed Tomography (HRCT) of the Lungs in Adults. In: Standards. Reston, Va: 2001:115-118
    /// </summary>
    public static readonly Coding PerformanceOfHighResolutionCTOfTheLungsInAdults = new Coding
    {
      Code = "112186",
      Display = "Performance of High-Resolution CT of the Lungs in Adults",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The method of calculation of a measurement or other type of numeric value is not specified
    /// </summary>
    public static readonly Coding UnspecifiedMethodOfCalculation = new Coding
    {
      Code = "112187",
      Display = "Unspecified method of calculation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The calculation method was performed in two-dimensional space
    /// </summary>
    public static readonly Coding TwoDimensionalMethod = new Coding
    {
      Code = "112188",
      Display = "Two-dimensional method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The calculation method was performed in three-dimensional space
    /// </summary>
    public static readonly Coding ThreeDimensionalMethod = new Coding
    {
      Code = "112189",
      Display = "Three-dimensional method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The relative density of parenchymal tissue as a proportion of breast volume
    /// </summary>
    public static readonly Coding BreastTissueDensity = new Coding
    {
      Code = "112191",
      Display = "Breast tissue density",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The volume of parenchymal tissue
    /// </summary>
    public static readonly Coding VolumeOfParenchymalTissue = new Coding
    {
      Code = "112192",
      Display = "Volume of parenchymal tissue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The volume of the breast
    /// </summary>
    public static readonly Coding VolumeOfBreast = new Coding
    {
      Code = "112193",
      Display = "Volume of breast",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The mass of parenchymal tissue
    /// </summary>
    public static readonly Coding MassOfParenchymalTissue = new Coding
    {
      Code = "112194",
      Display = "Mass of parenchymal tissue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The mass of the breast
    /// </summary>
    public static readonly Coding MassOfBreast = new Coding
    {
      Code = "112195",
      Display = "Mass of breast",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A measured or calculated area of vascular calcification
    /// </summary>
    public static readonly Coding AreaOfVascularCalcification = new Coding
    {
      Code = "112196",
      Display = "Area of Vascular Calcification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A measured or calculated volume of vascular calcification
    /// </summary>
    public static readonly Coding VolumeOfVascularCalcification = new Coding
    {
      Code = "112197",
      Display = "Volume of Vascular Calcification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A measured or calculated percentage of vascular calcification
    /// </summary>
    public static readonly Coding PercentageOfVascularCalcification = new Coding
    {
      Code = "112198",
      Display = "Percentage of Vascular Calcification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A measured or calculated mass of vascular calcification
    /// </summary>
    public static readonly Coding MassOfVascularCalcification = new Coding
    {
      Code = "112199",
      Display = "Mass of Vascular Calcification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The average nearest neighbor distance of all individual microcalcifications in a cluster
    /// </summary>
    public static readonly Coding AverageCalcificationDistanceInACalcificationCluster = new Coding
    {
      Code = "112200",
      Display = "Average calcification distance in a calcification cluster",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The standard deviation of nearest neighbor distance of all individual microcalcifications in a cluster
    /// </summary>
    public static readonly Coding StandardDeviationDistanceOfCalcificationsInACluster = new Coding
    {
      Code = "112201",
      Display = "Standard deviation distance of calcifications in a cluster",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A structured report containing the results of computer-aided detection or diagnosis applied to colon imaging and associated clinical information
    /// </summary>
    public static readonly Coding ColonCADReport = new Coding
    {
      Code = "112220",
      Display = "Colon CAD Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Overall interpretation of the colon using C-RADS categorization system
    /// </summary>
    public static readonly Coding ColonOverallAssessment = new Coding
    {
      Code = "112222",
      Display = "Colon Overall Assessment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Characteristics of a set of images
    /// </summary>
    public static readonly Coding ImageSetProperties = new Coding
    {
      Code = "112224",
      Display = "Image Set Properties",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nominal slice thickness, in mm
    /// </summary>
    public static readonly Coding SliceThickness = new Coding
    {
      Code = "112225",
      Display = "Slice Thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distance between contiguous images, measured from the center-to-center of each image
    /// </summary>
    public static readonly Coding SpacingBetweenSlices = new Coding
    {
      Code = "112226",
      Display = "Spacing between slices",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Uniquely identifies groups of composite instances that have the same coordinate system that conveys spatial and/or temporal information
    /// </summary>
    public static readonly Coding FrameOfReferenceUID = new Coding
    {
      Code = "112227",
      Display = "Frame of Reference UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient orientation with respect to downward direction (gravity)
    /// </summary>
    public static readonly Coding RecumbentPatientPositionWithRespectToGravity = new Coding
    {
      Code = "112228",
      Display = "Recumbent Patient Position with respect to gravity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distinguishes a part of a segmentation
    /// </summary>
    public static readonly Coding IdentifyingSegment = new Coding
    {
      Code = "112229",
      Display = "Identifying Segment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The diameter of a polyp stalk measured perpendicular to the axis of the stalk
    /// </summary>
    public static readonly Coding PolypStalkWidth = new Coding
    {
      Code = "112232",
      Display = "Polyp stalk width",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The length of the path following the centerline of the colon from the anus to the area of interest
    /// </summary>
    public static readonly Coding DistanceFromAnus = new Coding
    {
      Code = "112233",
      Display = "Distance from anus",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A location in the body that is outside the colon
    /// </summary>
    public static readonly Coding AnatomicNonColon = new Coding
    {
      Code = "112238",
      Display = "Anatomic non-colon",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An inadequate study or a study that is awaiting prior comparisons. The study may have inadequate preparation and cannot exclude lesions greater than or equal to ten millimeters owing to presence of fluid or feces. The study may have inadequate insufflation where one or more colonic segments collapsed on both views. Based on "CT Colonography Reporting and Data System: A Consensus Proposal", Radiology, July 2005; 236:3-9
    /// </summary>
    public static readonly Coding C0InadequateStudyAwaitingPriorComparisons = new Coding
    {
      Code = "112240",
      Display = "C0 - Inadequate Study/Awaiting Prior Comparisons",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The study has a normal colon or benign lesion, with the recommendation to continue routine screening. The study has no visible abnormalities of the colon. The study has no polyps greater than six millimeters. The study may have lipoma, inverted diverticulum, or nonneoplastic findings, such as colonic diverticula. Based on "CT Colonography Reporting and Data System: A Consensus Proposal", Radiology, July 2005; 236:3-9
    /// </summary>
    public static readonly Coding C1NormalColonOrBenignLesion = new Coding
    {
      Code = "112241",
      Display = "C1 - Normal Colon or Benign Lesion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The study has an intermediate polyp or indeterminate finding and surveillance or colonoscopy is recommended. There may be intermediate polyps between six and nine millimeters and there are less than three in number. The study may have an intermediate finding and cannot exclude a polyp that is greater than or equal to six millimeters in a technically adequate exam. Based on "CT Colonography Reporting and Data System: A Consensus Proposal", Radiology, July 2005; 236:3-9
    /// </summary>
    public static readonly Coding C2IntermediatePolypOrIndeterminateFinding = new Coding
    {
      Code = "112242",
      Display = "C2 - Intermediate Polyp or Indeterminate Finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The study has a polyp, possibly advanced adenoma, and a follow-up colonoscopy is recommended. The study has a polyp greater than or equal to ten millimeters or the study has three or more polyps that are each between six to nine millimeters. Based on "CT Colonography Reporting and Data System: A Consensus Proposal", Radiology, July 2005; 236:3-9
    /// </summary>
    public static readonly Coding C3PolypPossiblyAdvancedAdenoma = new Coding
    {
      Code = "112243",
      Display = "C3 - Polyp, Possibly Advanced Adenoma",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The study has a colonic mass, likely malignant, and surgical consultation is recommended. The lesion compromises bowel lumen and demonstrates extracolonic invasion. Based on "CT Colonography Reporting and Data System: A Consensus Proposal", Radiology, July 2005; 236:3-9
    /// </summary>
    public static readonly Coding C4ColonicMassLikelyMalignant = new Coding
    {
      Code = "112244",
      Display = "C4 - Colonic Mass, Likely Malignant",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// American College of Radiology Practice Guideline for the Performance of Computed Tomography (CT) Colonography in Adults. In: Practice Guidelines and Technical Standards.Reston, Va: American College of Radiology;2006:371-376
    /// </summary>
    public static readonly Coding ACRGuidelinePerformanceOfAdultCTColonography = new Coding
    {
      Code = "112248",
      Display = "ACR Guideline, Performance of Adult CT Colonography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// American College of Radiology Technical Standard for Diagnostic Medical Physics Performance Monitoring of Computed Tomography (CT) Equipment. In: Practice Guidelines and Technical Standards.Reston, Va: American College of Radiology;2006:945-948
    /// </summary>
    public static readonly Coding ACRStandardCTMedicalPhysicsPerformanceMonitoring = new Coding
    {
      Code = "112249",
      Display = "ACR Standard, CT medical physics performance monitoring",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// View Orientation Modifier indicates that the view orientation of the imaging plane is rotated +45° along the cranial-caudal axis
    /// </summary>
    public static readonly Coding APPlus45 = new Coding
    {
      Code = "112300",
      Display = "AP+45",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// View Orientation Modifier indicates that the view orientation of the imaging plane is rotated -45° along the cranial-caudal axis
    /// </summary>
    public static readonly Coding AP45 = new Coding
    {
      Code = "112301",
      Display = "AP-45",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The axis following the shaft of the femur
    /// </summary>
    public static readonly Coding AnatomicalAxisOfFemur = new Coding
    {
      Code = "112302",
      Display = "Anatomical axis of femur",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Center of Rotation of the natural Acetabulum
    /// </summary>
    public static readonly Coding AcetabularCenterOfRotation = new Coding
    {
      Code = "112303",
      Display = "Acetabular Center of Rotation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Center of Rotation of the natural femur head
    /// </summary>
    public static readonly Coding FemurHeadCenterOfRotation = new Coding
    {
      Code = "112304",
      Display = "Femur Head Center of Rotation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prosthetic component implanted into the acetabulum. Provides hold for the insert that is mounted inside the cup
    /// </summary>
    public static readonly Coding AcetabularCupShell = new Coding
    {
      Code = "112305",
      Display = "Acetabular Cup Shell",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prosthetic pelvic joint component. Inserted into the cup, takes in the femoral head replacement
    /// </summary>
    public static readonly Coding AcetabularCupInsert = new Coding
    {
      Code = "112306",
      Display = "Acetabular Cup Insert",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prosthetic pelvic joint cup including insert
    /// </summary>
    public static readonly Coding AcetabularCupMonoblock = new Coding
    {
      Code = "112307",
      Display = "Acetabular Cup Monoblock",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Component for Femoral Head Prosthesis where the conic intake for the stem neck can be exchanged. Combined with a Femoral Head Cone Taper Component
    /// </summary>
    public static readonly Coding FemoralHeadBallComponent = new Coding
    {
      Code = "112308",
      Display = "Femoral Head Ball Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Exchangeable neck intake for composite femoral head prosthesis. Combined with a Femoral Head Ball Component
    /// </summary>
    public static readonly Coding FemoralHeadConeTaperComponent = new Coding
    {
      Code = "112309",
      Display = "Femoral Head Cone Taper Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prosthesis Implanted into the femoral bone to provide force transmission between joint replacement and bone. On the proximal end a conic neck holds the femoral head replacement
    /// </summary>
    public static readonly Coding FemoralStem = new Coding
    {
      Code = "112310",
      Display = "Femoral Stem",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distal half of a modular stem prosthesis system. Combined with a Stem Proximal Component
    /// </summary>
    public static readonly Coding FemoralStemDistalComponent = new Coding
    {
      Code = "112311",
      Display = "Femoral Stem Distal Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Proximal half of a modular stem prosthesis system. Combined with a Stem Distal Component
    /// </summary>
    public static readonly Coding FemoralStemProximalComponent = new Coding
    {
      Code = "112312",
      Display = "Femoral Stem Proximal Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Stem prosthetic component with a modular insert for an exchangeable neck component. Combined with a Neck Component
    /// </summary>
    public static readonly Coding FemoralStemComponent = new Coding
    {
      Code = "112313",
      Display = "Femoral Stem Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prosthetic Neck to be combined with a Stem Component
    /// </summary>
    public static readonly Coding NeckComponent = new Coding
    {
      Code = "112314",
      Display = "Neck Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prosthetic Stem and Femoral Head in one piece
    /// </summary>
    public static readonly Coding MonoblockStem = new Coding
    {
      Code = "112315",
      Display = "Monoblock Stem",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A proximal attachment to the shaft used to compensate for bone deficiencies or bone loss
    /// </summary>
    public static readonly Coding ProstheticShaftAugment = new Coding
    {
      Code = "112316",
      Display = "Prosthetic Shaft Augment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Artificial femur head surface needed for the partial replacement of the femoral head where only the surface is replaced
    /// </summary>
    public static readonly Coding FemoralHeadResurfacingComponent = new Coding
    {
      Code = "112317",
      Display = "Femoral Head Resurfacing Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fixation using a pin
    /// </summary>
    public static readonly Coding Pinning = new Coding
    {
      Code = "112318",
      Display = "Pinning",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fixation sewing several objects together
    /// </summary>
    public static readonly Coding Sewing = new Coding
    {
      Code = "112319",
      Display = "Sewing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fixation using a bolt
    /// </summary>
    public static readonly Coding Bolting = new Coding
    {
      Code = "112320",
      Display = "Bolting",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fixation due to forcing an object into a narrow space
    /// </summary>
    public static readonly Coding Wedging = new Coding
    {
      Code = "112321",
      Display = "Wedging",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Attachment to the distal end of a cemented stem assuring that the stem is in a central position inside the drilled femoral canal before cementation
    /// </summary>
    public static readonly Coding DistalCentralizer = new Coding
    {
      Code = "112325",
      Display = "Distal Centralizer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Planning by an unspecified 2D method
    /// </summary>
    public static readonly Coding Generic2DPlanning = new Coding
    {
      Code = "112340",
      Display = "Generic 2D Planning",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Planning by an unspecified 3D method
    /// </summary>
    public static readonly Coding Generic3DPlanning = new Coding
    {
      Code = "112341",
      Display = "Generic 3D Planning",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Planning of a Hip Replacement, by an unspecified method
    /// </summary>
    public static readonly Coding GenericPlanningForHipReplacement = new Coding
    {
      Code = "112342",
      Display = "Generic Planning for Hip Replacement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Planning of Knee Replacement, by an unspecified method
    /// </summary>
    public static readonly Coding GenericPlanningForKneeReplacement = new Coding
    {
      Code = "112343",
      Display = "Generic Planning for Knee Replacement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Planning of Hip Replacement according to the procedure of M. E. Müller [Eggli et. al.1998]
    /// </summary>
    public static readonly Coding MllerMethodPlanningForHipReplacement = new Coding
    {
      Code = "112344",
      Display = "Müller Method Planning for Hip Replacement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Report containing the results of an Implantation Planning Activity
    /// </summary>
    public static readonly Coding ImplantationPlan = new Coding
    {
      Code = "112345",
      Display = "Implantation Plan",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A selection of one Implant Component
    /// </summary>
    public static readonly Coding SelectedImplantComponent = new Coding
    {
      Code = "112346",
      Display = "Selected Implant Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identification ID of an Implant Component
    /// </summary>
    public static readonly Coding ComponentID = new Coding
    {
      Code = "112347",
      Display = "Component ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An implant template describing the properties (2D/3D geometry and other data) of one Implant Component
    /// </summary>
    public static readonly Coding ImplantTemplate = new Coding
    {
      Code = "112348",
      Display = "Implant Template",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A connection of two Connected Implantation Plan Components
    /// </summary>
    public static readonly Coding ComponentConnection = new Coding
    {
      Code = "112350",
      Display = "Component Connection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ID of a Mating Feature Set in an Implant Component
    /// </summary>
    public static readonly Coding MatingFeatureSetID = new Coding
    {
      Code = "112351",
      Display = "Mating Feature Set ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ID of the Mating Feature in a Mating Feature Set in an Implant Component
    /// </summary>
    public static readonly Coding MatingFeatureID = new Coding
    {
      Code = "112352",
      Display = "Mating Feature ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Spatial Registration of one or more Implant Components
    /// </summary>
    public static readonly Coding SpatialRegistration = new Coding
    {
      Code = "112353",
      Display = "Spatial Registration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient Images used for an implantation planning activity
    /// </summary>
    public static readonly Coding PatientImage = new Coding
    {
      Code = "112354",
      Display = "Patient Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A collection of Component Connections of Implant Components
    /// </summary>
    public static readonly Coding Assembly = new Coding
    {
      Code = "112355",
      Display = "Assembly",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fiducials that are selected by the user and may or may not belong to anatomical landmarks
    /// </summary>
    public static readonly Coding UserSelectedFiducial = new Coding
    {
      Code = "112356",
      Display = "User Selected Fiducial",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fiducials that represent geometric characteristics, such as center of rotation, and are derived from other fiducials
    /// </summary>
    public static readonly Coding DerivedFiducial = new Coding
    {
      Code = "112357",
      Display = "Derived Fiducial",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// All parameters and data that were used for the planning activity
    /// </summary>
    public static readonly Coding InformationUsedForPlanning = new Coding
    {
      Code = "112358",
      Display = "Information used for planning",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A description of the plan as encapsulated PDF SOP Instance
    /// </summary>
    public static readonly Coding SupportingInformation = new Coding
    {
      Code = "112359",
      Display = "Supporting Information",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A list of all Implant Components selected for an implantation
    /// </summary>
    public static readonly Coding ImplantComponentList = new Coding
    {
      Code = "112360",
      Display = "Implant Component List",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference to objects containing patient data that is used for planning
    /// </summary>
    public static readonly Coding PatientDataUsedDuringPlanning = new Coding
    {
      Code = "112361",
      Display = "Patient Data Used During Planning",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A specification of the values from one or more Degrees of Freedom
    /// </summary>
    public static readonly Coding DegreesOfFreedomSpecification = new Coding
    {
      Code = "112362",
      Display = "Degrees of Freedom Specification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ID of one Degree of Freedom
    /// </summary>
    public static readonly Coding DegreeOfFreedomID = new Coding
    {
      Code = "112363",
      Display = "Degree of Freedom ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference to objects containing patient data that were not used for planning but are somehow related
    /// </summary>
    public static readonly Coding RelatedPatientDataNotUsedDuringPlanning = new Coding
    {
      Code = "112364",
      Display = "Related Patient Data Not Used During Planning",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Implantation Reports that are somehow related; e.g. contemporaneous implantations that are independent
    /// </summary>
    public static readonly Coding RelatedImplantationReports = new Coding
    {
      Code = "112365",
      Display = "Related Implantation Reports",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Implant Assembly Template
    /// </summary>
    public static readonly Coding ImplantAssemblyTemplate = new Coding
    {
      Code = "112366",
      Display = "Implant Assembly Template",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Information that is intended to be used intra-operatively
    /// </summary>
    public static readonly Coding PlanningInformationForIntraoperativeUsage = new Coding
    {
      Code = "112367",
      Display = "Planning Information for Intraoperative Usage",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Position of the patient on the operating room table
    /// </summary>
    public static readonly Coding ImplantationPatientPositioning = new Coding
    {
      Code = "112368",
      Display = "Implantation Patient Positioning",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Intended use of the fiducial
    /// </summary>
    public static readonly Coding FiducialIntent = new Coding
    {
      Code = "112369",
      Display = "Fiducial Intent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of an Implant Component
    /// </summary>
    public static readonly Coding ComponentType = new Coding
    {
      Code = "112370",
      Display = "Component Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Implant Template released by the Manufacturer
    /// </summary>
    public static readonly Coding ManufacturerImplantTemplate = new Coding
    {
      Code = "112371",
      Display = "Manufacturer Implant Template",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Images that are created by a planning application
    /// </summary>
    public static readonly Coding DerivedPlanningImages = new Coding
    {
      Code = "112372",
      Display = "Derived Planning Images",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Data that is created by a planning application
    /// </summary>
    public static readonly Coding OtherDerivedPlanningData = new Coding
    {
      Code = "112373",
      Display = "Other Derived Planning Data",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// One Implant Component that is connected to another Implant Component
    /// </summary>
    public static readonly Coding ConnectedImplantationPlanComponent = new Coding
    {
      Code = "112374",
      Display = "Connected Implantation Plan Component",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The method used for planning
    /// </summary>
    public static readonly Coding PlanningMethod = new Coding
    {
      Code = "112375",
      Display = "Planning Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Defines the exact value that was planned for translation
    /// </summary>
    public static readonly Coding DegreeOfFreedomExactTranslationalValue = new Coding
    {
      Code = "112376",
      Display = "Degree of Freedom Exact Translational Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Defines the minimum value that was planned for translation
    /// </summary>
    public static readonly Coding DegreeOfFreedomMinimumTranslationalValue = new Coding
    {
      Code = "112377",
      Display = "Degree of Freedom Minimum Translational Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Defines the maximum value that was planned for translation
    /// </summary>
    public static readonly Coding DegreeOfFreedomMaximumTranslationalValue = new Coding
    {
      Code = "112378",
      Display = "Degree of Freedom Maximum Translational Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Defines the exact value that was planned for rotation
    /// </summary>
    public static readonly Coding DegreeOfFreedomExactRotationalTranslationValue = new Coding
    {
      Code = "112379",
      Display = "Degree of Freedom Exact Rotational Translation Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Defines the minimum value that was planned for rotation
    /// </summary>
    public static readonly Coding DegreeOfFreedomMinimumRotationalValue = new Coding
    {
      Code = "112380",
      Display = "Degree of Freedom Minimum Rotational Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Defines the maximum value that was planned for rotation
    /// </summary>
    public static readonly Coding DegreeOfFreedomMaximumRotationalValue = new Coding
    {
      Code = "112381",
      Display = "Degree of Freedom Maximum Rotational Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure step protocol for photographic imaging of surgical procedures, including photography of specimens collected
    /// </summary>
    public static readonly Coding PeriOperativePhotographicImaging = new Coding
    {
      Code = "112700",
      Display = "Peri-operative Photographic Imaging",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure step protocol for imaging gross specimens, typically with a photographic camera (modality XC), and planning further dissection
    /// </summary>
    public static readonly Coding GrossSpecimenImaging = new Coding
    {
      Code = "112701",
      Display = "Gross Specimen Imaging",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure step protocol for imaging slide specimens
    /// </summary>
    public static readonly Coding SlideMicroscopy = new Coding
    {
      Code = "112702",
      Display = "Slide Microscopy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure step protocol for imaging slide specimens using a whole slide scanner
    /// </summary>
    public static readonly Coding WholeSlideImaging = new Coding
    {
      Code = "112703",
      Display = "Whole Slide Imaging",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure step protocol for imaging slide specimens using a whole slide scanner with a 20X nominal objective lens, in full color, with a single imaging focal plane across the image
    /// </summary>
    public static readonly Coding WSI20XRGB = new Coding
    {
      Code = "112704",
      Display = "WSI 20X RGB",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure step protocol for imaging slide specimens using a whole slide scanner with a 40X nominal objective lens, in full color, with a single imaging focal plane across the image
    /// </summary>
    public static readonly Coding WSI40XRGB = new Coding
    {
      Code = "112705",
      Display = "WSI 40X RGB",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Technique of illuminating specimen
    /// </summary>
    public static readonly Coding IlluminationMethod = new Coding
    {
      Code = "112706",
      Display = "Illumination Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of focal planes for a microscopy image acquisition
    /// </summary>
    public static readonly Coding NumberOfFocalPlanes = new Coding
    {
      Code = "112707",
      Display = "Number of focal planes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nominal distance above a reference plane (typically a slide glass substrate top surface) of the focal plane
    /// </summary>
    public static readonly Coding FocalPlaneZOffset = new Coding
    {
      Code = "112708",
      Display = "Focal plane Z offset",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Microscope magnification based on nominal objective lens power
    /// </summary>
    public static readonly Coding MagnificationSelection = new Coding
    {
      Code = "112709",
      Display = "Magnification selection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nominal center wavelength for an imaging spectral band
    /// </summary>
    public static readonly Coding IlluminationWavelength = new Coding
    {
      Code = "112710",
      Display = "Illumination wavelength",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Name (coded) for an imaging spectral band
    /// </summary>
    public static readonly Coding IlluminationSpectralBand = new Coding
    {
      Code = "112711",
      Display = "Illumination spectral band",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of filter inserted into the optical imaging path
    /// </summary>
    public static readonly Coding OpticalFilterType = new Coding
    {
      Code = "112712",
      Display = "Optical filter type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Technique for identifying tissue to be imaged versus area of slide not to be imaged
    /// </summary>
    public static readonly Coding TissueSelectionMethod = new Coding
    {
      Code = "112713",
      Display = "Tissue selection method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Imaging performed at multiple imaging (focal) planes
    /// </summary>
    public static readonly Coding MultiplePlanes = new Coding
    {
      Code = "112714",
      Display = "Multiple planes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nominal 5 power objective lens, resulting in a digital image at approximately 2 um/pixel spacing
    /// </summary>
    public static readonly Coding VAL5X = new Coding
    {
      Code = "112715",
      Display = "5X",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nominal 10 power objective lens, resulting in a digital image at approximately 1 um/pixel spacing
    /// </summary>
    public static readonly Coding VAL10X = new Coding
    {
      Code = "112716",
      Display = "10X",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nominal 20 power microscope objective lens, resulting in a digital image at approximately 0.5 um/pixel spacing
    /// </summary>
    public static readonly Coding VAL20X = new Coding
    {
      Code = "112717",
      Display = "20X",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nominal 40 power microscope objective lens, with a combined condenser and objective lens numerical aperture of approximately 1.3, resulting in a digital image at approximately 0.25 um/pixel spacing
    /// </summary>
    public static readonly Coding VAL40X = new Coding
    {
      Code = "112718",
      Display = "40X",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment-specific nominal or default method for identifying tiles without tissue imaged for suppression from inclusion in image object
    /// </summary>
    public static readonly Coding NominalEmptyTileSuppression = new Coding
    {
      Code = "112719",
      Display = "Nominal empty tile suppression",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment-specific high threshold method for identifying tiles without tissue imaged for suppression from inclusion in image object
    /// </summary>
    public static readonly Coding HighThresholdEmptyTileSuppression = new Coding
    {
      Code = "112720",
      Display = "High threshold empty tile suppression",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Tiles without tissue imaged are not suppressed from inclusion in image object
    /// </summary>
    public static readonly Coding NoEmptyTileSuppression = new Coding
    {
      Code = "112721",
      Display = "No empty tile suppression",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Of Interest
    /// </summary>
    public static readonly Coding OfInterest = new Coding
    {
      Code = "113000",
      Display = "Of Interest",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Rejected for Quality Reasons
    /// </summary>
    public static readonly Coding RejectedForQualityReasons = new Coding
    {
      Code = "113001",
      Display = "Rejected for Quality Reasons",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For Referring Provider
    /// </summary>
    public static readonly Coding ForReferringProvider = new Coding
    {
      Code = "113002",
      Display = "For Referring Provider",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For Surgery
    /// </summary>
    public static readonly Coding ForSurgery = new Coding
    {
      Code = "113003",
      Display = "For Surgery",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For Teaching
    /// </summary>
    public static readonly Coding ForTeaching = new Coding
    {
      Code = "113004",
      Display = "For Teaching",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For Conference
    /// </summary>
    public static readonly Coding ForConference = new Coding
    {
      Code = "113005",
      Display = "For Conference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For Therapy
    /// </summary>
    public static readonly Coding ForTherapy = new Coding
    {
      Code = "113006",
      Display = "For Therapy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For Patient
    /// </summary>
    public static readonly Coding ForPatient = new Coding
    {
      Code = "113007",
      Display = "For Patient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For Peer Review
    /// </summary>
    public static readonly Coding ForPeerReview = new Coding
    {
      Code = "113008",
      Display = "For Peer Review",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For Research
    /// </summary>
    public static readonly Coding ForResearch = new Coding
    {
      Code = "113009",
      Display = "For Research",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Quality Issue
    /// </summary>
    public static readonly Coding QualityIssue = new Coding
    {
      Code = "113010",
      Display = "Quality Issue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Document Title Modifier
    /// </summary>
    public static readonly Coding DocumentTitleModifier = new Coding
    {
      Code = "113011",
      Display = "Document Title Modifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Key Object Description
    /// </summary>
    public static readonly Coding KeyObjectDescription = new Coding
    {
      Code = "113012",
      Display = "Key Object Description",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A selection that represents the "best" chosen from a larger set of items; e.g. the best images within a Study or Series. The criteria against which "best" is measured is not defined. Contrast this with the more specific term "Best illustration of finding"
    /// </summary>
    public static readonly Coding BestInSet = new Coding
    {
      Code = "113013",
      Display = "Best In Set",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A study is a collection of one or more series of medical images, presentation states, and/or SR documents that are logically related for the purpose of diagnosing a patient. A study may include composite instances that are created by a single modality, multiple modalities or by multiple devices of the same modality. [From Section A.1.2.2 "Study IE" in PS3.3 ]
    /// </summary>
    public static readonly Coding Study = new Coding
    {
      Code = "113014",
      Display = "Study",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A distinct logical set used to group composite instances. All instances within a Series are of the same modality, in the same Frame of Reference (if any), and created by the same equipment. [See Section A.1.2.3 "Series IE" in PS3.3 ]
    /// </summary>
    public static readonly Coding Series = new Coding
    {
      Code = "113015",
      Display = "Series",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An arbitrarily defined unit of service that has actually been performed (not just scheduled). [From Section 7.3.1.9 "Modality Performed Procedure Step" in PS3.3 ]
    /// </summary>
    public static readonly Coding PerformedProcedureStep = new Coding
    {
      Code = "113016",
      Display = "Performed Procedure Step",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image or set of images illustrating a specific stage (phase in a stress echo exam protocol) and view (combination of the transducer position and orientation at the time of image acquisition)
    /// </summary>
    public static readonly Coding StageView = new Coding
    {
      Code = "113017",
      Display = "Stage-View",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For Printing
    /// </summary>
    public static readonly Coding ForPrinting = new Coding
    {
      Code = "113018",
      Display = "For Printing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Selection of information objects for attachment to the clinical report of the Current Requested Procedure
    /// </summary>
    public static readonly Coding ForReportAttachment = new Coding
    {
      Code = "113020",
      Display = "For Report Attachment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// List of objects that are related to litigation and should be specially handled; e.g. may apply if a complaint has been received regarding a patient, or a specific set of images has been the subject of a subpoena, and needs to be sequestered or excluded from automatic purging according to retention policy
    /// </summary>
    public static readonly Coding ForLitigation = new Coding
    {
      Code = "113021",
      Display = "For Litigation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Double exposure
    /// </summary>
    public static readonly Coding DoubleExposure = new Coding
    {
      Code = "113026",
      Display = "Double exposure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A list of objects that have been exported out of one organizational domain into another domain. Typically, the first domain has no direct control over what the second domain will do with the objects
    /// </summary>
    public static readonly Coding Manifest = new Coding
    {
      Code = "113030",
      Display = "Manifest",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A signed list of objects that have been exported out of one organizational domain into another domain, referenced securely with either Digital Signatures or MACs. Typically, the first domain has no direct control over what the second domain will do with the objects
    /// </summary>
    public static readonly Coding SignedManifest = new Coding
    {
      Code = "113031",
      Display = "Signed Manifest",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The list of objects that constitute a study at the time that the list was created
    /// </summary>
    public static readonly Coding CompleteStudyContent = new Coding
    {
      Code = "113032",
      Display = "Complete Study Content",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The signed list of objects that constitute a study at the time that the list was created, referenced securely with either Digital Signatures or MACs
    /// </summary>
    public static readonly Coding SignedCompleteStudyContent = new Coding
    {
      Code = "113033",
      Display = "Signed Complete Study Content",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The list of objects that were generated in a single procedure step
    /// </summary>
    public static readonly Coding CompleteAcquisitionContent = new Coding
    {
      Code = "113034",
      Display = "Complete Acquisition Content",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The signed list of objects that were generated in a single procedure step, referenced securely with either Digital Signatures or MACs
    /// </summary>
    public static readonly Coding SignedCompleteAcquisitionContent = new Coding
    {
      Code = "113035",
      Display = "Signed Complete Acquisition Content",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A list of frames or single-frame or entire multi-frame instances that together constitute a set for some purpose, such as might be displayed together in the same viewport, as distinct from another set that might be displayed in a separate viewport
    /// </summary>
    public static readonly Coding GroupOfFramesForDisplay = new Coding
    {
      Code = "113036",
      Display = "Group of Frames for Display",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// List of objects whose use is potentially harmful to the patient; e.g. an improperly labeled image could lead to dangerous surgical decisions
    /// </summary>
    public static readonly Coding RejectedForPatientSafetyReasons = new Coding
    {
      Code = "113037",
      Display = "Rejected for Patient Safety Reasons",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// List of objects that were acquired using an incorrect modality worklist entry, and that should not be used, since they may be incorrectly identified
    /// </summary>
    public static readonly Coding IncorrectModalityWorklistEntry = new Coding
    {
      Code = "113038",
      Display = "Incorrect Modality Worklist Entry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// List of objects that have expired according to a defined data retention policy
    /// </summary>
    public static readonly Coding DataRetentionPolicyExpired = new Coding
    {
      Code = "113039",
      Display = "Data Retention Policy Expired",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lossy compression has been applied to an image
    /// </summary>
    public static readonly Coding LossyCompression = new Coding
    {
      Code = "113040",
      Display = "Lossy Compression",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculation of the apparent diffusion coefficient
    /// </summary>
    public static readonly Coding ApparentDiffusionCoefficient = new Coding
    {
      Code = "113041",
      Display = "Apparent Diffusion Coefficient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by the pixel by pixel addition of two images
    /// </summary>
    public static readonly Coding PixelByPixelAddition = new Coding
    {
      Code = "113042",
      Display = "Pixel by pixel addition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculation of the diffusion weighting
    /// </summary>
    public static readonly Coding DiffusionWeighted = new Coding
    {
      Code = "113043",
      Display = "Diffusion weighted",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculation of the diffusion anisotropy
    /// </summary>
    public static readonly Coding DiffusionAnisotropy = new Coding
    {
      Code = "113044",
      Display = "Diffusion Anisotropy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculation of the diffusion attenuation
    /// </summary>
    public static readonly Coding DiffusionAttenuated = new Coding
    {
      Code = "113045",
      Display = "Diffusion Attenuated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by the pixel by pixel division of two images
    /// </summary>
    public static readonly Coding PixelByPixelDivision = new Coding
    {
      Code = "113046",
      Display = "Pixel by pixel division",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by the pixel by pixel masking of one image by another
    /// </summary>
    public static readonly Coding PixelByPixelMask = new Coding
    {
      Code = "113047",
      Display = "Pixel by pixel mask",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating the pixel by pixel maximum of two or more images
    /// </summary>
    public static readonly Coding PixelByPixelMaximum = new Coding
    {
      Code = "113048",
      Display = "Pixel by pixel Maximum",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating the pixel by pixel mean of two or more images
    /// </summary>
    public static readonly Coding PixelByPixelMean = new Coding
    {
      Code = "113049",
      Display = "Pixel by pixel mean",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating from spectroscopy data pixel values localized in two dimensional space based on the concentration of specific metabolites (i.e, at specific frequencies)
    /// </summary>
    public static readonly Coding MetaboliteMapsFromSpectroscopyData = new Coding
    {
      Code = "113050",
      Display = "Metabolite Maps from spectroscopy data",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating the pixel by pixel minimum of two or more images
    /// </summary>
    public static readonly Coding PixelByPixelMinimum = new Coding
    {
      Code = "113051",
      Display = "Pixel by pixel Minimum",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time required for blood to pass through a region of tissue
    /// </summary>
    public static readonly Coding MeanTransitTime = new Coding
    {
      Code = "113052",
      Display = "Mean Transit Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by the pixel by pixel multiplication of two images
    /// </summary>
    public static readonly Coding PixelByPixelMultiplication = new Coding
    {
      Code = "113053",
      Display = "Pixel by pixel multiplication",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating negative enhancement integral values
    /// </summary>
    public static readonly Coding NegativeEnhancementIntegral = new Coding
    {
      Code = "113054",
      Display = "Negative Enhancement Integral",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The flow rate of blood perfusing a region of the brain as volume per mass per unit of time
    /// </summary>
    public static readonly Coding RegionalCerebralBloodFlow = new Coding
    {
      Code = "113055",
      Display = "Regional Cerebral Blood Flow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The volume of blood perfusing a region of brain as volume per mass
    /// </summary>
    public static readonly Coding RegionalCerebralBloodVolume = new Coding
    {
      Code = "113056",
      Display = "Regional Cerebral Blood Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Correlation Coefficient, r
    /// </summary>
    public static readonly Coding RCoefficient = new Coding
    {
      Code = "113057",
      Display = "R-Coefficient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating proton density values
    /// </summary>
    public static readonly Coding ProtonDensity = new Coding
    {
      Code = "113058",
      Display = "Proton Density",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating signal change values
    /// </summary>
    public static readonly Coding SignalChange = new Coding
    {
      Code = "113059",
      Display = "Signal Change",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating the signal to noise ratio
    /// </summary>
    public static readonly Coding SignalToNoise = new Coding
    {
      Code = "113060",
      Display = "Signal to Noise",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating the standard deviation of two or more images
    /// </summary>
    public static readonly Coding StandardDeviation = new Coding
    {
      Code = "113061",
      Display = "Standard Deviation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by the pixel by pixel subtraction of two images
    /// </summary>
    public static readonly Coding PixelByPixelSubtraction = new Coding
    {
      Code = "113062",
      Display = "Pixel by pixel subtraction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating T1 values
    /// </summary>
    public static readonly Coding T1 = new Coding
    {
      Code = "113063",
      Display = "T1",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating T2* values
    /// </summary>
    public static readonly Coding T2Asterisk = new Coding
    {
      Code = "113064",
      Display = "T2*",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating T2 values
    /// </summary>
    public static readonly Coding T2 = new Coding
    {
      Code = "113065",
      Display = "T2",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating values based on the time course of signal
    /// </summary>
    public static readonly Coding TimeCourseOfSignal = new Coding
    {
      Code = "113066",
      Display = "Time Course of Signal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating values based on temperature encoding
    /// </summary>
    public static readonly Coding TemperatureEncoded = new Coding
    {
      Code = "113067",
      Display = "Temperature encoded",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating the value of the Student's T-Test statistic from multiple image samples
    /// </summary>
    public static readonly Coding StudentQuoteSTTest = new Coding
    {
      Code = "113068",
      Display = "Student's T-Test",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time from the start of the contrast agent injection to the maximum enhancement value
    /// </summary>
    public static readonly Coding TimeToPeak = new Coding
    {
      Code = "113069",
      Display = "Time To Peak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating values based on velocity encoded; e.g. phase contrast
    /// </summary>
    public static readonly Coding VelocityEncoded = new Coding
    {
      Code = "113070",
      Display = "Velocity encoded",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by calculating the value of the Z-Score statistic from multiple image samples
    /// </summary>
    public static readonly Coding ZScore = new Coding
    {
      Code = "113071",
      Display = "Z-Score",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by reformatting in a flat plane other than that originally acquired
    /// </summary>
    public static readonly Coding MultiplanarReformatting = new Coding
    {
      Code = "113072",
      Display = "Multiplanar reformatting",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by reformatting in a curve plane other than that originally acquired
    /// </summary>
    public static readonly Coding CurvedMultiplanarReformatting = new Coding
    {
      Code = "113073",
      Display = "Curved multiplanar reformatting",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by volume rendering of acquired data
    /// </summary>
    public static readonly Coding VolumeRendering = new Coding
    {
      Code = "113074",
      Display = "Volume rendering",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by surface rendering of acquired data
    /// </summary>
    public static readonly Coding SurfaceRendering = new Coding
    {
      Code = "113075",
      Display = "Surface rendering",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by segmentation (classification into tissue types) of acquired data
    /// </summary>
    public static readonly Coding Segmentation = new Coding
    {
      Code = "113076",
      Display = "Segmentation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by selectively editing acquired data (removing values from the volume), such as in order to remove obscuring structures or noise
    /// </summary>
    public static readonly Coding VolumeEditing = new Coding
    {
      Code = "113077",
      Display = "Volume editing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by maximum intensity projection of acquired data
    /// </summary>
    public static readonly Coding MaximumIntensityProjection = new Coding
    {
      Code = "113078",
      Display = "Maximum intensity projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by minimum intensity projection of acquired data
    /// </summary>
    public static readonly Coding MinimumIntensityProjection = new Coding
    {
      Code = "113079",
      Display = "Minimum intensity projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For single-proton MR spectroscopy, the resonance peak corresponding to glutamate and glutamine
    /// </summary>
    public static readonly Coding GlutamateAndGlutamine = new Coding
    {
      Code = "113080",
      Display = "Glutamate and glutamine",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For single-proton MR spectroscopy, the ratio between the Choline and Creatine resonance peaks
    /// </summary>
    public static readonly Coding CholineCreatineRatio = new Coding
    {
      Code = "113081",
      Display = "Choline/Creatine Ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For single-proton MR spectroscopy, the ratio between the N-acetylaspartate and Creatine resonance peaks
    /// </summary>
    public static readonly Coding NAcetylaspartateCreatineRatio = new Coding
    {
      Code = "113082",
      Display = "N-acetylaspartate /Creatine Ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For single-proton MR spectroscopy, the ratio between the N-acetylaspartate and Choline resonance peaks
    /// </summary>
    public static readonly Coding NAcetylaspartateCholineRatio = new Coding
    {
      Code = "113083",
      Display = "N-acetylaspartate /Choline Ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by spatial resampling of acquired data
    /// </summary>
    public static readonly Coding SpatialResampling = new Coding
    {
      Code = "113085",
      Display = "Spatial resampling",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by edge enhancement
    /// </summary>
    public static readonly Coding EdgeEnhancement = new Coding
    {
      Code = "113086",
      Display = "Edge enhancement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by smoothing
    /// </summary>
    public static readonly Coding Smoothing = new Coding
    {
      Code = "113087",
      Display = "Smoothing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by Gaussian blurring
    /// </summary>
    public static readonly Coding GaussianBlur = new Coding
    {
      Code = "113088",
      Display = "Gaussian blur",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by unsharp masking
    /// </summary>
    public static readonly Coding UnsharpMask = new Coding
    {
      Code = "113089",
      Display = "Unsharp mask",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values are derived by stitching two or more images together
    /// </summary>
    public static readonly Coding ImageStitching = new Coding
    {
      Code = "113090",
      Display = "Image stitching",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Spatially-related frames in this image are representative frames from the referenced 3D volume data set
    /// </summary>
    public static readonly Coding SpatiallyRelatedFramesExtractedFromTheVolume = new Coding
    {
      Code = "113091",
      Display = "Spatially-related frames extracted from the volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Temporally-related frames in this image are representative frames from the referenced 3D volume data set
    /// </summary>
    public static readonly Coding TemporallyRelatedFramesExtractedFromTheSetOfVolumes = new Coding
    {
      Code = "113092",
      Display = "Temporally-related frames extracted from the set of volumes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Conversion of a polar coordinate image to rectangular (Cartesian) coordinate image
    /// </summary>
    public static readonly Coding PolarToRectangularScanConversion = new Coding
    {
      Code = "113093",
      Display = "Polar to Rectangular Scan Conversion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For single-proton MR spectroscopy, the resonance peak corresponding to creatine and choline
    /// </summary>
    public static readonly Coding CreatineAndCholine = new Coding
    {
      Code = "113094",
      Display = "Creatine and Choline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For single-proton MR spectroscopy, the resonance peak corresponding to lipid and lactate
    /// </summary>
    public static readonly Coding LipidAndLactate = new Coding
    {
      Code = "113095",
      Display = "Lipid and Lactate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For single-proton MR spectroscopy, the ratio between the Choline and Creatine resonance peak and the Citrate resonance peak
    /// </summary>
    public static readonly Coding CreatinePlusCholineCitrateRatio = new Coding
    {
      Code = "113096",
      Display = "Creatine+Choline/ Citrate Ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image pixels created through proportional weighting of multiple acquisitions at distinct X-Ray energies
    /// </summary>
    public static readonly Coding MultiEnergyProportionalWeighting = new Coding
    {
      Code = "113097",
      Display = "Multi-energy proportional weighting",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// De-identification using a profile defined in PS3.15 that requires removing all information related to the identity and demographic characteristics of the patient, any responsible parties or family members, any personnel involved in the procedure, the organizations involved in ordering or performing the procedure, additional information that could be used to match instances if given access to the originals, such as UIDs, dates and times, and private attributes, when that information is present in the non-Pixel Data Attributes, including graphics or overlays
    /// </summary>
    public static readonly Coding BasicApplicationConfidentialityProfile = new Coding
    {
      Code = "113100",
      Display = "Basic Application Confidentiality Profile",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Additional de-identification according to an option defined in PS3.15 that requires any information burned in to the Pixel Data corresponding to the Attribute information specified to be removed by the Profile and any other Options specified also be removed
    /// </summary>
    public static readonly Coding CleanPixelDataOption = new Coding
    {
      Code = "113101",
      Display = "Clean Pixel Data Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Additional de-identification according to an option defined in PS3.15 that requires that sufficient removal or distortion of the Pixel Data shall be applied to prevent recognition of an individual from the instances themselves or a reconstruction of a set of instances
    /// </summary>
    public static readonly Coding CleanRecognizableVisualFeaturesOption = new Coding
    {
      Code = "113102",
      Display = "Clean Recognizable Visual Features Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Additional de-identification according to an option defined in PS3.15 that requires that any information encoded in graphics, text annotations or overlays corresponding to the Attribute information specified to be removed by the Profile and any other Options specified also be removed
    /// </summary>
    public static readonly Coding CleanGraphicsOption = new Coding
    {
      Code = "113103",
      Display = "Clean Graphics Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Additional de-identification according to an option defined in PS3.15 that requires that any information encoded in SR Content Items or Acquisition Context Sequence Items corresponding to the Attribute information specified to be removed by the Profile and any other Options specified also be removed
    /// </summary>
    public static readonly Coding CleanStructuredContentOption = new Coding
    {
      Code = "113104",
      Display = "Clean Structured Content Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Additional de-identification according to an option defined in PS3.15 that requires that any information that is embedded in text or string Attributes corresponding to the Attribute information specified to be removed by the Profile and any other Options specified also be removed
    /// </summary>
    public static readonly Coding CleanDescriptorsOption = new Coding
    {
      Code = "113105",
      Display = "Clean Descriptors Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Retention of information that would otherwise be removed during de-identification according to an option defined in PS3.15 that requires that any dates and times be retained,
    /// </summary>
    public static readonly Coding RetainLongitudinalTemporalInformationFullDatesOption = new Coding
    {
      Code = "113106",
      Display = "Retain Longitudinal Temporal Information Full Dates Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Retention of information that would otherwise be removed during de-identification according to an option defined in PS3.15 that requires that any dates and times be modified in a manner that preserves temporal relationships; e.g. Study Date and Time
    /// </summary>
    public static readonly Coding RetainLongitudinalTemporalInformationModifiedDatesOption = new Coding
    {
      Code = "113107",
      Display = "Retain Longitudinal Temporal Information Modified Dates Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Retention of information that would otherwise be removed during de-identification according to an option defined in PS3.15 that requires that any physical characteristics of the patient, which are descriptive rather than identifying information per se, be retained; e.g. Patient's Age, Sex, Size (height) and Weight
    /// </summary>
    public static readonly Coding RetainPatientCharacteristicsOption = new Coding
    {
      Code = "113108",
      Display = "Retain Patient Characteristics Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Retention of information that would otherwise be removed during de-identification according to an option defined in PS3.15 that requires that any information that identifies a device be retained; e.g. Device Serial Number
    /// </summary>
    public static readonly Coding RetainDeviceIdentityOption = new Coding
    {
      Code = "113109",
      Display = "Retain Device Identity Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Retention of information that would otherwise be removed during de-identification according to an option defined in PS3.15 that requires that UIDs be retained; e.g. SOP Instance UID
    /// </summary>
    public static readonly Coding RetainUIDsOption = new Coding
    {
      Code = "113110",
      Display = "Retain UIDs Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Retention of information that would otherwise be removed during de-identification according to an option defined in PS3.15 that requires that private attributes that are known not to contain identity information be retained; e.g. private SUV scale factor
    /// </summary>
    public static readonly Coding RetainSafePrivateOption = new Coding
    {
      Code = "113111",
      Display = "Retain Safe Private Option",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The procedure report is a Radiopharmaceutical Radiation Dose report
    /// </summary>
    public static readonly Coding RadiopharmaceuticalRadiationDoseReport = new Coding
    {
      Code = "113500",
      Display = "Radiopharmaceutical Radiation Dose Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Information pertaining to the administration of a radiopharmaceutical
    /// </summary>
    public static readonly Coding RadiopharmaceuticalAdministration = new Coding
    {
      Code = "113502",
      Display = "Radiopharmaceutical Administration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unique identification of a single radiopharmaceutical administration event
    /// </summary>
    public static readonly Coding RadiopharmaceuticalAdministrationEventUID = new Coding
    {
      Code = "113503",
      Display = "Radiopharmaceutical Administration Event UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Initial signs or symptoms of extravasation
    /// </summary>
    public static readonly Coding IntravenousExtravasationSymptoms = new Coding
    {
      Code = "113505",
      Display = "Intravenous Extravasation Symptoms",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The estimated percentage of administered activity lost at the injection site. The estimation includes extravasation, paravenous administration and leakage at the injection site
    /// </summary>
    public static readonly Coding EstimatedExtravasationActivity = new Coding
    {
      Code = "113506",
      Display = "Estimated Extravasation Activity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The calculated activity at the Radiopharmaceutical Start Time when the radiopharmaceutical is administered to the patient. The residual activity (i.e. radiopharmaceutical not administered) , if measured, is reflected in the calculated value. The estimated extravasation is not reflected in the calculated value
    /// </summary>
    public static readonly Coding AdministeredActivity = new Coding
    {
      Code = "113507",
      Display = "Administered activity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radioactivity measurement of radiopharmaceutical before or during the administration
    /// </summary>
    public static readonly Coding PreAdministrationMeasuredActivity = new Coding
    {
      Code = "113508",
      Display = "Pre-Administration Measured Activity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radioactivity measurement of radiopharmaceutical after the administration
    /// </summary>
    public static readonly Coding PostAdministrationMeasuredActivity = new Coding
    {
      Code = "113509",
      Display = "Post-Administration Measured Activity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registered drug establishment code for product, coding scheme example is NDC or RxNorm
    /// </summary>
    public static readonly Coding DrugProductIdentifier = new Coding
    {
      Code = "113510",
      Display = "Drug Product Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The human readable identification of the specific radiopharmaceutical dispensed quantity or dose ("dose" as unit of medication delivery, not radiation dose measure) to be administered to the patient
    /// </summary>
    public static readonly Coding RadiopharmaceuticalDispenseUnitIdentifier = new Coding
    {
      Code = "113511",
      Display = "Radiopharmaceutical Dispense Unit Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifies the vial, batch or lot number from which the individual dispense radiopharmaceutical quantity (dose) is produced. The Radiopharmaceutical Dispense Unit Identifier records the identification for each individual dose
    /// </summary>
    public static readonly Coding RadiopharmaceuticalLotIdentifier = new Coding
    {
      Code = "113512",
      Display = "Radiopharmaceutical Lot Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifies the lot or unit serial number for the reagent component for the radiopharmaceutical
    /// </summary>
    public static readonly Coding ReagentVialIdentifier = new Coding
    {
      Code = "113513",
      Display = "Reagent Vial Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifies the lot or unit serial number for the radionuclide component for the radiopharmaceutical
    /// </summary>
    public static readonly Coding RadionuclideVialIdentifier = new Coding
    {
      Code = "113514",
      Display = "Radionuclide Vial Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Administered Product's Prescription Number
    /// </summary>
    public static readonly Coding PrescriptionIdentifier = new Coding
    {
      Code = "113516",
      Display = "Prescription Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Information pertaining to the estimated absorbed radiation dose to an organ
    /// </summary>
    public static readonly Coding OrganDoseInformation = new Coding
    {
      Code = "113517",
      Display = "Organ Dose Information",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The absorbed radiation dose to organ
    /// </summary>
    public static readonly Coding OrganDose = new Coding
    {
      Code = "113518",
      Display = "Organ Dose",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference authority MIRD Pamphlet No.1 (rev) ,Society of Nuclear Medicine, 1976
    /// </summary>
    public static readonly Coding MIRDPamphlet1 = new Coding
    {
      Code = "113520",
      Display = "MIRD Pamphlet 1",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference authority ICRP, 1988. Radiation Dose to Patients from Radiopharmaceuticals. ICRP Publication 53. Ann. ICRP 18 (1-4)
    /// </summary>
    public static readonly Coding ICRPPublication53 = new Coding
    {
      Code = "113521",
      Display = "ICRP Publication 53",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference authority ICRP, 1998. Radiation Dose to Patients from Radiopharmaceuticals (Addendum to ICRP Publication 53). ICRP Publication 80. Ann. ICRP 28 (3)
    /// </summary>
    public static readonly Coding ICRPPublication80 = new Coding
    {
      Code = "113522",
      Display = "ICRP Publication 80",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference authority ICRP, 2008. Radiation Dose to Patients from Radiopharmaceuticals - Addendum 3 to ICRP Publication 53. ICRP Publication 106. Ann. ICRP 38 (1-2)
    /// </summary>
    public static readonly Coding ICRPPublication106 = new Coding
    {
      Code = "113523",
      Display = "ICRP Publication 106",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference authority Stabin MG, Sparks RB, Crowe E (1994) MIRDOSE: personal computer software for internal dose assessment in nuclear medicine [Computer program]
    /// </summary>
    public static readonly Coding MIRDOSE = new Coding
    {
      Code = "113526",
      Display = "MIRDOSE",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference authority Stabin MG, Sparks RB, Crowe E (2005) OLINDA/EXM: The Second-Generation Personal Computer Software for Internal Dose Assessment in Nuclear Medicine [Computer program]
    /// </summary>
    public static readonly Coding OLINDAEXM = new Coding
    {
      Code = "113527",
      Display = "OLINDA-EXM",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference authority The reported organ dose is based on radiopharmaceutical's package insert
    /// </summary>
    public static readonly Coding PackageInsert = new Coding
    {
      Code = "113528",
      Display = "Package Insert",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference authority The reported organ dose is based on Institutionally approved estimates from the Radioactive Drug Research Committee (RDRC) of the institution itself
    /// </summary>
    public static readonly Coding InstitutionallyApprovedEstimates = new Coding
    {
      Code = "113529",
      Display = "Institutionally Approved Estimates",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference authority The reported organ dose is based on an Investigation new drug
    /// </summary>
    public static readonly Coding InvestigationalNewDrug = new Coding
    {
      Code = "113530",
      Display = "Investigational New Drug",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The type of device that performed the activity measurement
    /// </summary>
    public static readonly Coding ActivityMeasurementDevice = new Coding
    {
      Code = "113540",
      Display = "Activity Measurement Device",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The device that measures the radiation activity of the radiopharmaceutical
    /// </summary>
    public static readonly Coding DoseCalibrator = new Coding
    {
      Code = "113541",
      Display = "Dose Calibrator",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiopharmaceutical Infusion System
    /// </summary>
    public static readonly Coding InfusionSystem = new Coding
    {
      Code = "113542",
      Display = "Infusion System",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radioisotope Generator
    /// </summary>
    public static readonly Coding Generator = new Coding
    {
      Code = "113543",
      Display = "Generator",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The number hours the patient has gone without food
    /// </summary>
    public static readonly Coding FastingDuration = new Coding
    {
      Code = "113550",
      Display = "Fasting Duration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The amount of fluids the patient has consumed before the procedure
    /// </summary>
    public static readonly Coding HydrationVolume = new Coding
    {
      Code = "113551",
      Display = "Hydration Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A description of physical activity the patient performed before the start of the procedure, such as that which may affect imaging agent biodistribution
    /// </summary>
    public static readonly Coding RecentPhysicalActivity = new Coding
    {
      Code = "113552",
      Display = "Recent Physical Activity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Blockage in one of the tubes (ureters) that drain urine from the kidneys
    /// </summary>
    public static readonly Coding AcuteUnilateralRenalBlockage = new Coding
    {
      Code = "113560",
      Display = "Acute unilateral renal blockage",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 5% or less Thyroid Uptake of Iodine
    /// </summary>
    public static readonly Coding LowThyroidUptake = new Coding
    {
      Code = "113561",
      Display = "Low Thyroid Uptake",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 25% or higher Thyroid Uptake of Iodine
    /// </summary>
    public static readonly Coding HighThyroidUptake = new Coding
    {
      Code = "113562",
      Display = "High Thyroid Uptake",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The patient exhibits symptoms severe of jaundice and/or has a Bilirubin &gt;10 mg/dL
    /// </summary>
    public static readonly Coding SeverelyJaundiced = new Coding
    {
      Code = "113563",
      Display = "Severely Jaundiced",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Extravasation or paravenous administration of the product is visible in the images
    /// </summary>
    public static readonly Coding ExtravasationVisibleInImage = new Coding
    {
      Code = "113568",
      Display = "Extravasation visible in image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The measurement method of the Glomerular Filtration Rate is Cockroft-Gault Formula
    /// </summary>
    public static readonly Coding CockroftGaultFormulaEstimationOfGFR = new Coding
    {
      Code = "113570",
      Display = "Cockroft-Gault Formula estimation of GFR",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The measurement method of the Glomerular Filtration Rate is CKD-EPI Formula
    /// </summary>
    public static readonly Coding CKDEPIFormulaEstimationOfGFR = new Coding
    {
      Code = "113571",
      Display = "CKD-EPI Formula estimation of GFR",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The measurement method of the Glomerular Filtration Rate is MDRD
    /// </summary>
    public static readonly Coding GlomerularFiltrationRateMDRD = new Coding
    {
      Code = "113572",
      Display = "Glomerular Filtration Rate (MDRD)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The measurement method of the Glomerular Filtration Rate is non-black MDRD
    /// </summary>
    public static readonly Coding GlomerularFiltrationRateNonBlackMDRD = new Coding
    {
      Code = "113573",
      Display = "Glomerular Filtration Rate non-black (MDRD)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The measurement method of the Glomerular Filtration Rate is black (MDRD)
    /// </summary>
    public static readonly Coding GlomerularFiltrationRateBlackMDRD = new Coding
    {
      Code = "113574",
      Display = "Glomerular Filtration Rate black (MDRD)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The measurement method of the Glomerular Filtration Rate is female (MDRD)
    /// </summary>
    public static readonly Coding GlomerularFiltrationRateFemaleMDRD = new Coding
    {
      Code = "113575",
      Display = "Glomerular Filtration Rate female (MDRD)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The measurement method of the Glomerular Filtration Rate is Cystatin-based formula
    /// </summary>
    public static readonly Coding GlomerularFiltrationRateCystatinBasedFormula = new Coding
    {
      Code = "113576",
      Display = "Glomerular Filtration Rate Cystatin-based formula",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The measurement method of the Glomerular Filtration Rate is Creatinine-based formula (Schwartz)
    /// </summary>
    public static readonly Coding GlomerularFiltrationRateCreatinineBasedFormulaSchwartz = new Coding
    {
      Code = "113577",
      Display = "Glomerular Filtration Rate Creatinine-based formula (Schwartz)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Small body thickness for calcium scoring adjustment. Lateral thickness is measured from skin-to-skin, at the level of the proximal ascending aorta, from an A/P localizer image
    /// </summary>
    public static readonly Coding SmallLessThan320CmLateralThickness = new Coding
    {
      Code = "113601",
      Display = "Small: < 32.0 cm lateral thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Medium body thickness for calcium scoring adjustment. Lateral thickness is measured from skin-to-skin, at the level of the proximal ascending aorta, from an A/P localizer image
    /// </summary>
    public static readonly Coding Medium320380CmLateralThickness = new Coding
    {
      Code = "113602",
      Display = "Medium: 32.0-38.0 cm lateral thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Large body thickness for calcium scoring adjustment. Lateral thickness is measured from skin-to-skin, at the level of the proximal ascending aorta, from an A/P localizer image
    /// </summary>
    public static readonly Coding LargeGreaterThan380CmLateralThickness = new Coding
    {
      Code = "113603",
      Display = "Large: > 38.0 cm lateral thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A human-readable label identifying an irradiation event
    /// </summary>
    public static readonly Coding IrradiationEventLabel = new Coding
    {
      Code = "113605",
      Display = "Irradiation Event Label",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The type of a human-readable label
    /// </summary>
    public static readonly Coding LabelType = new Coding
    {
      Code = "113606",
      Display = "Label Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A number that identifies a Series. Corresponds to (0020,0011) in PS3.3
    /// </summary>
    public static readonly Coding SeriesNumber = new Coding
    {
      Code = "113607",
      Display = "Series Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A number that identifies an Acquisition. Corresponds to (0020,0012) in PS3.3
    /// </summary>
    public static readonly Coding AcquisitionNumber = new Coding
    {
      Code = "113608",
      Display = "Acquisition Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A number that identifies an Instance. Corresponds to (0020,0013) in PS3.3
    /// </summary>
    public static readonly Coding InstanceNumber = new Coding
    {
      Code = "113609",
      Display = "Instance Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition where the X-Ray source does not move in relation to the patient
    /// </summary>
    public static readonly Coding StationaryAcquisition = new Coding
    {
      Code = "113611",
      Display = "Stationary Acquisition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition where the X-Ray source moves laterally in relation to the patient
    /// </summary>
    public static readonly Coding SteppingAcquisition = new Coding
    {
      Code = "113612",
      Display = "Stepping Acquisition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition where the X-Ray source moves angularly in relation to the patient
    /// </summary>
    public static readonly Coding RotationalAcquisition = new Coding
    {
      Code = "113613",
      Display = "Rotational Acquisition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Primary plane of a Biplane acquisition equipment
    /// </summary>
    public static readonly Coding PlaneA = new Coding
    {
      Code = "113620",
      Display = "Plane A",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Secondary plane of a Biplane acquisition equipment
    /// </summary>
    public static readonly Coding PlaneB = new Coding
    {
      Code = "113621",
      Display = "Plane B",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Single plane acquisition equipment
    /// </summary>
    public static readonly Coding SinglePlane = new Coding
    {
      Code = "113622",
      Display = "Single Plane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Continuous X-Ray radiation is applied during an irradiation event
    /// </summary>
    public static readonly Coding Continuous = new Coding
    {
      Code = "113630",
      Display = "Continuous",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pulsed X-Ray radiation is applied during an irradiation event
    /// </summary>
    public static readonly Coding Pulsed = new Coding
    {
      Code = "113631",
      Display = "Pulsed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Filter with uniform thickness
    /// </summary>
    public static readonly Coding StripFilter = new Coding
    {
      Code = "113650",
      Display = "Strip filter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Filter with variation in thickness from one edge to the opposite edge
    /// </summary>
    public static readonly Coding WedgeFilter = new Coding
    {
      Code = "113651",
      Display = "Wedge filter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Filter with two triangular sections
    /// </summary>
    public static readonly Coding ButterflyFilter = new Coding
    {
      Code = "113652",
      Display = "Butterfly filter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Filter with uniform thickness that is for spectral filtering only; e.g. filter out low energy portion of the X-Ray that would only contribute to skin dose, but not to image
    /// </summary>
    public static readonly Coding FlatFilter = new Coding
    {
      Code = "113653",
      Display = "Flat filter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A polyline defining the outline of a lobulated finding
    /// </summary>
    public static readonly Coding OutlineOfLobulations = new Coding
    {
      Code = "113661",
      Display = "Outline of lobulations",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A polyline defining the inner limits of a finding with fuzzy margin
    /// </summary>
    public static readonly Coding InnerLimitsOfFuzzyMargin = new Coding
    {
      Code = "113662",
      Display = "Inner limits of fuzzy margin",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A polyline defining the outer limits of a finding with fuzzy margin
    /// </summary>
    public static readonly Coding OuterLimitsOfFuzzyMargin = new Coding
    {
      Code = "113663",
      Display = "Outer limits of fuzzy margin",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A polyline defining the outline of the spiculations of a finding
    /// </summary>
    public static readonly Coding OutlineOfSpiculations = new Coding
    {
      Code = "113664",
      Display = "Outline of spiculations",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A polyline segment graphically indicating the location and direction of a spiculation of a finding
    /// </summary>
    public static readonly Coding LinearSpiculation = new Coding
    {
      Code = "113665",
      Display = "Linear spiculation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A collection of points indicating the pixel locations of the spiculations of a finding
    /// </summary>
    public static readonly Coding PixelatedSpiculations = new Coding
    {
      Code = "113666",
      Display = "Pixelated spiculations",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Connected line segments indicating the center of location of a finding on an orthogonal view
    /// </summary>
    public static readonly Coding OrthogonalLocationArc = new Coding
    {
      Code = "113669",
      Display = "Orthogonal location arc",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Connected line segments indicating the inner margin of the location of a finding on an orthogonal view
    /// </summary>
    public static readonly Coding OrthogonalLocationArcInnerMargin = new Coding
    {
      Code = "113670",
      Display = "Orthogonal location arc inner margin",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Connected line segments indicating the outer location of a finding on an orthogonal view
    /// </summary>
    public static readonly Coding OrthogonalLocationArcOuterMargin = new Coding
    {
      Code = "113671",
      Display = "Orthogonal location arc outer margin",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// This procedure is intended to gather data that is used for calibration or other quality control purposes
    /// </summary>
    public static readonly Coding QualityControlIntent = new Coding
    {
      Code = "113680",
      Display = "Quality Control Intent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An artificial subject of an imaging study
    /// </summary>
    public static readonly Coding Phantom = new Coding
    {
      Code = "113681",
      Display = "Phantom",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A phantom acceptable for the ACR Computed Tomography Accreditation program
    /// </summary>
    public static readonly Coding ACRAccreditationPhantomCT = new Coding
    {
      Code = "113682",
      Display = "ACR Accreditation Phantom - CT",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A phantom acceptable for the ACR Magnetic Resonance Imaging Accreditation program
    /// </summary>
    public static readonly Coding ACRAccreditationPhantomMR = new Coding
    {
      Code = "113683",
      Display = "ACR Accreditation Phantom - MR",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A phantom acceptable for the ACR Mammography Accreditation program
    /// </summary>
    public static readonly Coding ACRAccreditationPhantomMammography = new Coding
    {
      Code = "113684",
      Display = "ACR Accreditation Phantom - Mammography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A phantom acceptable for the ACR Stereotactic Breast Biopsy Accreditation program
    /// </summary>
    public static readonly Coding ACRAccreditationPhantomStereotacticBreastBiopsy = new Coding
    {
      Code = "113685",
      Display = "ACR Accreditation Phantom - Stereotactic Breast Biopsy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A phantom acceptable for the ACR SPECT Accreditation program (but not for PET)
    /// </summary>
    public static readonly Coding ACRAccreditationPhantomECT = new Coding
    {
      Code = "113686",
      Display = "ACR Accreditation Phantom - ECT",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A phantom acceptable for the ACR PET Accreditation program (but not for SPECT)
    /// </summary>
    public static readonly Coding ACRAccreditationPhantomPET = new Coding
    {
      Code = "113687",
      Display = "ACR Accreditation Phantom - PET",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A SPECT phantom with a PET faceplate acceptable for both the ACR SPECT and PET Accreditation programs
    /// </summary>
    public static readonly Coding ACRAccreditationPhantomECTPET = new Coding
    {
      Code = "113688",
      Display = "ACR Accreditation Phantom - ECT/PET",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A PET faceplate (made to fit an existing flangeless or flanged ECT phantom) acceptable for the ACR PET Accreditation program
    /// </summary>
    public static readonly Coding ACRAccreditationPhantomPETFaceplate = new Coding
    {
      Code = "113689",
      Display = "ACR Accreditation Phantom - PET Faceplate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A phantom used for CTDI measurement in head modes according to IEC 60601-2-44, Ed.2.1 (Head 16 cm diameter Polymethyl methacrylate PMMA)
    /// </summary>
    public static readonly Coding IECHeadDosimetryPhantom = new Coding
    {
      Code = "113690",
      Display = "IEC Head Dosimetry Phantom",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A phantom used for CTDI measurement in body modes according to IEC 60601-2-44, Ed.2.1 (Body 32cm diameter Polymethyl methacrylate PMMA)
    /// </summary>
    public static readonly Coding IECBodyDosimetryPhantom = new Coding
    {
      Code = "113691",
      Display = "IEC Body Dosimetry Phantom",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A phantom in accordance with NEMA standard XR-21-2000
    /// </summary>
    public static readonly Coding NEMAXR212000Phantom = new Coding
    {
      Code = "113692",
      Display = "NEMA XR21-2000 Phantom",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// X-Ray Radiation Dose Report
    /// </summary>
    public static readonly Coding XRayRadiationDoseReport = new Coding
    {
      Code = "113701",
      Display = "X-Ray Radiation Dose Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// X-Ray dose data accumulated over multiple irradiation events; e.g. for a study or a performed procedure step
    /// </summary>
    public static readonly Coding AccumulatedXRayDoseData = new Coding
    {
      Code = "113702",
      Display = "Accumulated X-Ray Dose Data",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Imaging using a point X-Ray source with a diverging beam projected onto a 2 dimensional detector
    /// </summary>
    public static readonly Coding ProjectionXRay = new Coding
    {
      Code = "113704",
      Display = "Projection X-Ray",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Entity over which dose accumulation values are integrated
    /// </summary>
    public static readonly Coding ScopeOfAccumulation = new Coding
    {
      Code = "113705",
      Display = "Scope of Accumulation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// X-Ray dose data for a single Irradiation Event
    /// </summary>
    public static readonly Coding IrradiationEventXRayData = new Coding
    {
      Code = "113706",
      Display = "Irradiation Event X-Ray Data",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Describes the method used to derive the calibration factor
    /// </summary>
    public static readonly Coding CalibrationProtocol = new Coding
    {
      Code = "113720",
      Display = "Calibration Protocol",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Denotes the type of irradiation event recorded
    /// </summary>
    public static readonly Coding IrradiationEventType = new Coding
    {
      Code = "113721",
      Display = "Irradiation Event Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total calculated Dose Area Product (in the scope of the including report)
    /// </summary>
    public static readonly Coding DoseAreaProductTotal = new Coding
    {
      Code = "113722",
      Display = "Dose Area Product Total",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Last calibration Date for the integrated dose meter or dose calculation
    /// </summary>
    public static readonly Coding CalibrationDate = new Coding
    {
      Code = "113723",
      Display = "Calibration Date",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Individual or organization responsible for calibration
    /// </summary>
    public static readonly Coding CalibrationResponsibleParty = new Coding
    {
      Code = "113724",
      Display = "Calibration Responsible Party",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total Dose related to Reference Point (RP). (in the scope of the including report)
    /// </summary>
    public static readonly Coding DoseRPTotal = new Coding
    {
      Code = "113725",
      Display = "Dose (RP) Total",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total calculated Dose Area Product applied in Fluoroscopy Modes (in the scope of the including report)
    /// </summary>
    public static readonly Coding FluoroDoseAreaProductTotal = new Coding
    {
      Code = "113726",
      Display = "Fluoro Dose Area Product Total",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total calculated Dose Area Product applied in Acquisition Modes (in the scope of the including report)
    /// </summary>
    public static readonly Coding AcquisitionDoseAreaProductTotal = new Coding
    {
      Code = "113727",
      Display = "Acquisition Dose Area Product Total",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dose applied in Fluoroscopy Modes, related to Reference Point (RP). (in the scope of the including report)
    /// </summary>
    public static readonly Coding FluoroDoseRPTotal = new Coding
    {
      Code = "113728",
      Display = "Fluoro Dose (RP) Total",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dose applied in Acquisition Modes, related to Reference Point (RP). (in the scope of the including report)
    /// </summary>
    public static readonly Coding AcquisitionDoseRPTotal = new Coding
    {
      Code = "113729",
      Display = "Acquisition Dose (RP) Total",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total accumulated clock time of Fluoroscopy in the scope of the including report (i.e., the sum of the Irradiation Duration values for accumulated fluoroscopy irradiation events)
    /// </summary>
    public static readonly Coding TotalFluoroTime = new Coding
    {
      Code = "113730",
      Display = "Total Fluoro Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Accumulated Count of exposure pulses (single or multi-frame encoded) created from irradiation events performed with high dose (acquisition)
    /// </summary>
    public static readonly Coding TotalNumberOfRadiographicFrames = new Coding
    {
      Code = "113731",
      Display = "Total Number of Radiographic Frames",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mode of application of X-Rays during Fluoroscopy
    /// </summary>
    public static readonly Coding FluoroMode = new Coding
    {
      Code = "113732",
      Display = "Fluoro Mode",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Applied X-Ray Tube voltage at peak of X-Ray generation, in kilovolts; Mean value if measured over multiple peaks (pulses)
    /// </summary>
    public static readonly Coding KVP = new Coding
    {
      Code = "113733",
      Display = "KVP",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mean value of applied Tube Current
    /// </summary>
    public static readonly Coding XRayTubeCurrent = new Coding
    {
      Code = "113734",
      Display = "X-Ray Tube Current",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mean value of X-Ray Current Time product
    /// </summary>
    public static readonly Coding Exposure = new Coding
    {
      Code = "113736",
      Display = "Exposure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distance to the Reference Point (RP) defined according to IEC 60601-2-43 or equipment defined
    /// </summary>
    public static readonly Coding DistanceSourceToReferencePoint = new Coding
    {
      Code = "113737",
      Display = "Distance Source to Reference Point",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dose applied at the Reference Point (RP)
    /// </summary>
    public static readonly Coding DoseRP = new Coding
    {
      Code = "113738",
      Display = "Dose (RP)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Positioner Primary Angle at the end of an irradiation event. For further definition see (112011, DCM, "Positioner Primary Angle") 
    /// </summary>
    public static readonly Coding PositionerPrimaryEndAngle = new Coding
    {
      Code = "113739",
      Display = "Positioner Primary End Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Positioner Secondary Angle at the end of an irradiation event. For further definition see (112012, DCM, "Positioner Secondary Angle") 
    /// </summary>
    public static readonly Coding PositionerSecondaryEndAngle = new Coding
    {
      Code = "113740",
      Display = "Positioner Secondary End Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Clock time from the start of loading time of the first pulse until the loading time trailing edge of the final pulse in the same irradiation event. Note Loading time is defined in IEC 60601-1-3:2008, 3.37, and described in IEC 60601-2-54:2009, 203.4.101.3
    /// </summary>
    public static readonly Coding IrradiationDuration = new Coding
    {
      Code = "113742",
      Display = "Irradiation Duration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of the Patient with respect to Gravity
    /// </summary>
    public static readonly Coding PatientOrientation = new Coding
    {
      Code = "113743",
      Display = "Patient Orientation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Enhances or modifies the Patient orientation specified in Patient Orientation
    /// </summary>
    public static readonly Coding PatientOrientationModifier = new Coding
    {
      Code = "113744",
      Display = "Patient Orientation Modifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Orientation of the Patient with respect to the Head of the Table
    /// </summary>
    public static readonly Coding PatientTableRelationship = new Coding
    {
      Code = "113745",
      Display = "Patient Table Relationship",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distance from the X-Ray Source to the Equipment C-Arm Isocenter.(Center of Rotation)
    /// </summary>
    public static readonly Coding DistanceSourceToIsocenter = new Coding
    {
      Code = "113748",
      Display = "Distance Source to Isocenter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measured or calculated distance from the X-Ray source to the detector plane in the center of the beam
    /// </summary>
    public static readonly Coding DistanceSourceToDetector = new Coding
    {
      Code = "113750",
      Display = "Distance Source to Detector",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Longitudinal Position with respect to an arbitrary chosen reference by the equipment. Table motion towards LAO is positive assuming that the patient is positioned supine and its head is in normal position
    /// </summary>
    public static readonly Coding TableLongitudinalPosition = new Coding
    {
      Code = "113751",
      Display = "Table Longitudinal Position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Lateral Position with respect to an arbitrary chosen reference by the equipment. Table motion towards CRA is positive assuming that the patient is positioned supine and its head is in normal position
    /// </summary>
    public static readonly Coding TableLateralPosition = new Coding
    {
      Code = "113752",
      Display = "Table Lateral Position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Height Position with respect to an arbitrary chosen reference by the equipment in (mm). Table motion downwards is positive
    /// </summary>
    public static readonly Coding TableHeightPosition = new Coding
    {
      Code = "113753",
      Display = "Table Height Position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Angle of the head-feet axis of the table in degrees relative to the horizontal plane. Positive values indicate that the head of the table is upwards
    /// </summary>
    public static readonly Coding TableHeadTiltAngle = new Coding
    {
      Code = "113754",
      Display = "Table Head Tilt Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Rotation of the table in the horizontal plane (clockwise when looking from above the table)
    /// </summary>
    public static readonly Coding TableHorizontalRotationAngle = new Coding
    {
      Code = "113755",
      Display = "Table Horizontal Rotation Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Angle of the left-right axis of the table in degrees relative to the horizontal plane. Positive values indicate that the left of the table is upwards
    /// </summary>
    public static readonly Coding TableCradleTiltAngle = new Coding
    {
      Code = "113756",
      Display = "Table Cradle Tilt Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// X-Ray absorbing material used in the filter
    /// </summary>
    public static readonly Coding XRayFilterMaterial = new Coding
    {
      Code = "113757",
      Display = "X-Ray Filter Material",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The minimum thickness of the X-Ray absorbing material used in the filters
    /// </summary>
    public static readonly Coding XRayFilterThicknessMinimum = new Coding
    {
      Code = "113758",
      Display = "X-Ray Filter Thickness Minimum",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Longitudinal Position at the end of an irradiation event; see (113751, DCM, "Table Longitudinal Position") 
    /// </summary>
    public static readonly Coding TableLongitudinalEndPosition = new Coding
    {
      Code = "113759",
      Display = "Table Longitudinal End Position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Lateral Position at the end of an irradiation event; see (113752, DCM, "Table Lateral Position") 
    /// </summary>
    public static readonly Coding TableLateralEndPosition = new Coding
    {
      Code = "113760",
      Display = "Table Lateral End Position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Height Position at the end of an irradiation event; see (113753, DCM, "Table Height Position") 
    /// </summary>
    public static readonly Coding TableHeightEndPosition = new Coding
    {
      Code = "113761",
      Display = "Table Height End Position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Uncertainty of the 'actual' value
    /// </summary>
    public static readonly Coding CalibrationUncertainty = new Coding
    {
      Code = "113763",
      Display = "Calibration Uncertainty",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identification of Acquisition Plane with Biplane systems
    /// </summary>
    public static readonly Coding AcquisitionPlane = new Coding
    {
      Code = "113764",
      Display = "Acquisition Plane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nominal Size of Focal Spot of X-Ray Tube
    /// </summary>
    public static readonly Coding FocalSpotSize = new Coding
    {
      Code = "113766",
      Display = "Focal Spot Size",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Average X-Ray Tube Current averaged over time for pulse or for continuous Fluoroscopy
    /// </summary>
    public static readonly Coding AverageXRayTubeCurrent = new Coding
    {
      Code = "113767",
      Display = "Average X-Ray Tube Current",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of pulses applied by X-Ray systems during an irradiation event (acquisition run or pulsed fluoro)
    /// </summary>
    public static readonly Coding NumberOfPulses = new Coding
    {
      Code = "113768",
      Display = "Number of Pulses",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unique identification of a single irradiation event
    /// </summary>
    public static readonly Coding IrradiationEventUID = new Coding
    {
      Code = "113769",
      Display = "Irradiation Event UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Angle of the X-Ray beam in degree relative to an orthogonal axis to the detector plane
    /// </summary>
    public static readonly Coding ColumnAngulation = new Coding
    {
      Code = "113770",
      Display = "Column Angulation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Devices used to modify the energy or energy distribution of X-Rays
    /// </summary>
    public static readonly Coding XRayFilters = new Coding
    {
      Code = "113771",
      Display = "X-Ray Filters",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of filter(s) inserted into the X-Ray beam; e.g. wedges
    /// </summary>
    public static readonly Coding XRayFilterType = new Coding
    {
      Code = "113772",
      Display = "X-Ray Filter Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The maximum thickness of the X-Ray absorbing material used in the filters
    /// </summary>
    public static readonly Coding XRayFilterThicknessMaximum = new Coding
    {
      Code = "113773",
      Display = "X-Ray Filter Thickness Maximum",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// System provided definition of the Reference Point used for Dose calculations
    /// </summary>
    public static readonly Coding ReferencePointDefinition = new Coding
    {
      Code = "113780",
      Display = "Reference Point Definition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distance between the collimator blades in pixel column direction as projected at the detector plane
    /// </summary>
    public static readonly Coding CollimatedFieldHeight = new Coding
    {
      Code = "113788",
      Display = "Collimated Field Height",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distance between the collimator blades in pixel row direction as projected at the detector plane
    /// </summary>
    public static readonly Coding CollimatedFieldWidth = new Coding
    {
      Code = "113789",
      Display = "Collimated Field Width",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Collimated field area at image receptor. Area for compatibility with IEC 60601-2-43
    /// </summary>
    public static readonly Coding CollimatedFieldArea = new Coding
    {
      Code = "113790",
      Display = "Collimated Field Area",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pulse rate applied by equipment during Fluoroscopy
    /// </summary>
    public static readonly Coding PulseRate = new Coding
    {
      Code = "113791",
      Display = "Pulse Rate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measured or calculated distance from the X-Ray source to the table plane in the center of the beam
    /// </summary>
    public static readonly Coding DistanceSourceToTablePlane = new Coding
    {
      Code = "113792",
      Display = "Distance Source to Table Plane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// (Average) X-Ray pulse width
    /// </summary>
    public static readonly Coding PulseWidth = new Coding
    {
      Code = "113793",
      Display = "Pulse Width",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calibrated device to perform dose measurements
    /// </summary>
    public static readonly Coding DoseMeasurementDevice = new Coding
    {
      Code = "113794",
      Display = "Dose Measurement Device",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image acquired during a specified event
    /// </summary>
    public static readonly Coding AcquiredImage = new Coding
    {
      Code = "113795",
      Display = "Acquired Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Effective Dose evaluation from the product of Dose Length Product (DLP) and the Effective Dose Conversion Factor (E/DLP in units of mSv/mGy-cm), where the ratio is derived by means of Monte Carlo computations
    /// </summary>
    public static readonly Coding DLPToEConversionViaMCComputation = new Coding
    {
      Code = "113800",
      Display = "DLP to E conversion via MC computation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Effective Dose evaluation from the product of the Mean CTDIfreeair and the ratio E/CTDIfreeair (mSv/mGy), where the ratio is derived by means of Monte Carlo computations
    /// </summary>
    public static readonly Coding CTDIfreeairToEConversionViaMCComputation = new Coding
    {
      Code = "113801",
      Display = "CTDIfreeair to E conversion via MC computation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Effective Dose evaluation from the product of Dose Length Product (DLP) and the Effective Dose Conversion Factor (E/DLP in units of mSv/mGy-cm), where the ratio is derived by means of dosimetric measurements with an anthropomorphic phantom
    /// </summary>
    public static readonly Coding DLPToEConversionViaMeasurement = new Coding
    {
      Code = "113802",
      Display = "DLP to E conversion via measurement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Effective Dose evaluation from the product of the Mean CTDIfreeair and the ratio E/CTDIfreeair (mSv/mGy), where the ratio is derived by means of dosimetric measurements with an anthropomorphic phantom
    /// </summary>
    public static readonly Coding CTDIfreeairToEConversionViaMeasurement = new Coding
    {
      Code = "113803",
      Display = "CTDIfreeair to E conversion via measurement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The CT acquisition was performed by acquiring single or multi detector data while rotating the source about the gantry while the table is not moving. Additional slices are acquired by incrementing the table position and again rotating the source about the gantry while the table is not moving
    /// </summary>
    public static readonly Coding SequencedAcquisition = new Coding
    {
      Code = "113804",
      Display = "Sequenced Acquisition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The CT acquisition was performed by holding the source at a constant angle and moving the table to obtain a projection image; e.g. localizer
    /// </summary>
    public static readonly Coding ConstantAngleAcquisition = new Coding
    {
      Code = "113805",
      Display = "Constant Angle Acquisition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The CT acquisition was performed by holding the table at a constant position and acquiring multiple slices over time at the same location
    /// </summary>
    public static readonly Coding StationaryAcquisition_2 = new Coding
    {
      Code = "113806",
      Display = "Stationary Acquisition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The CT acquisition was performed while rotating the source about the gantry while the table movement is under direct control of a human operator or under the control of an analysis application; e.g. fluoro
    /// </summary>
    public static readonly Coding FreeAcquisition = new Coding
    {
      Code = "113807",
      Display = "Free Acquisition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference authority 1990 Recommendations of the International Commission on Radiological Protection (ICRP Publication 60, published as the Annals of the ICRP Vol. 21, No. 1-3, Pergamon Press,1991)
    /// </summary>
    public static readonly Coding ICRPPub60 = new Coding
    {
      Code = "113808",
      Display = "ICRP Pub 60",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Start, DateTime of the first X-Ray Irradiation Event of the accumulation within a Study
    /// </summary>
    public static readonly Coding StartOfXRayIrradiation = new Coding
    {
      Code = "113809",
      Display = "Start of X-Ray Irradiation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// End, DateTime of the last X-Ray Irradiation Event of the accumulation within a Study
    /// </summary>
    public static readonly Coding EndOfXRayIrradiation = new Coding
    {
      Code = "113810",
      Display = "End of X-Ray Irradiation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// X-Ray dose accumulated over multiple CT irradiation events; e.g. for a study or a performed procedure step
    /// </summary>
    public static readonly Coding CTAccumulatedDoseData = new Coding
    {
      Code = "113811",
      Display = "CT Accumulated Dose Data",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total number of events during the defined scope of accumulation
    /// </summary>
    public static readonly Coding TotalNumberOfIrradiationEvents = new Coding
    {
      Code = "113812",
      Display = "Total Number of Irradiation Events",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The total dose length product defined scope of accumulation
    /// </summary>
    public static readonly Coding CTDoseLengthProductTotal = new Coding
    {
      Code = "113813",
      Display = "CT Dose Length Product Total",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The total Effective Dose at the defined scope of accumulation
    /// </summary>
    public static readonly Coding CTEffectiveDoseTotal = new Coding
    {
      Code = "113814",
      Display = "CT Effective Dose Total",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identification of the reference-patient model used when Effective Dose is evaluated via Monte Carlo calculations or from a Dose Length Product conversion factor based on Monte Carlo calculations
    /// </summary>
    public static readonly Coding PatientModel = new Coding
    {
      Code = "113815",
      Display = "Patient Model",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// References the physical phantom and the type of dosimeter used when measurements are done to establish Effective Dose Conversion Factors (E/DLP) or ratios E/CTDIfreeair
    /// </summary>
    public static readonly Coding ConditionEffectiveDoseMeasured = new Coding
    {
      Code = "113816",
      Display = "Condition Effective Dose measured",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of Effective Dose phantom used
    /// </summary>
    public static readonly Coding EffectiveDosePhantomType = new Coding
    {
      Code = "113817",
      Display = "Effective Dose Phantom Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of dosimeter used
    /// </summary>
    public static readonly Coding DosimeterType = new Coding
    {
      Code = "113818",
      Display = "Dosimeter Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// General description of the CT Irradiation event
    /// </summary>
    public static readonly Coding CTAcquisition = new Coding
    {
      Code = "113819",
      Display = "CT Acquisition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of the CT acquisition
    /// </summary>
    public static readonly Coding CTAcquisitionType = new Coding
    {
      Code = "113820",
      Display = "CT Acquisition Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Thickness of an equivalent filter in mm in Aluminum
    /// </summary>
    public static readonly Coding XRayFilterAluminumEquivalent = new Coding
    {
      Code = "113821",
      Display = "X-Ray Filter Aluminum Equivalent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// General description of the acquisition parameters
    /// </summary>
    public static readonly Coding CTAcquisitionParameters = new Coding
    {
      Code = "113822",
      Display = "CT Acquisition Parameters",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of X-Ray sources
    /// </summary>
    public static readonly Coding NumberOfXRaySources = new Coding
    {
      Code = "113823",
      Display = "Number of X-Ray Sources",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total time the patient has received X-Ray exposure during the irradiation event
    /// </summary>
    public static readonly Coding ExposureTime = new Coding
    {
      Code = "113824",
      Display = "Exposure Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Length of the table travel during the entire tube loading, according to IEC 60601-2-44 Note Scanning Length might be longer than the programmed acquisition length (Length of Reconstructable Volume)
    /// </summary>
    public static readonly Coding ScanningLength = new Coding
    {
      Code = "113825",
      Display = "Scanning Length",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The value of the nominal width referenced to the location of the isocenter along the z axis of a single row of acquired data in mm
    /// </summary>
    public static readonly Coding NominalSingleCollimationWidth = new Coding
    {
      Code = "113826",
      Display = "Nominal Single Collimation Width",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The value of the nominal width referenced to the location of the isocenter along the z axis of the total collimation in mm over the area of active X-Ray detection
    /// </summary>
    public static readonly Coding NominalTotalCollimationWidth = new Coding
    {
      Code = "113827",
      Display = "Nominal Total Collimation Width",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For Spiral scanning: Pitch Factor = (Table Feed per Rotation (mm)) /(Nominal Total Collimation Width (mm)) For Sequenced scanning: Pitch Factor = (Table Feed per single Sequenced scan (mm)) /(Nominal Total Collimation Width (mm))
    /// </summary>
    public static readonly Coding PitchFactor = new Coding
    {
      Code = "113828",
      Display = "Pitch Factor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// General description of CT dose values
    /// </summary>
    public static readonly Coding CTDose = new Coding
    {
      Code = "113829",
      Display = "CT Dose",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// "Mean CTDIvol" refers to the average value of the CTDIvol associated with this acquisition
    /// </summary>
    public static readonly Coding MeanCTDIvol = new Coding
    {
      Code = "113830",
      Display = "Mean CTDIvol",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identification, tube-potential, tube-current, and exposure-time parameters associated with an X-Ray source during an acquisition
    /// </summary>
    public static readonly Coding CTXRaySourceParameters = new Coding
    {
      Code = "113831",
      Display = "CT X-Ray Source Parameters",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifies the particular X-Ray source (in a multi-source CT system) for which the set of X-Ray source parameter values is reported
    /// </summary>
    public static readonly Coding IdentificationOfTheXRaySource = new Coding
    {
      Code = "113832",
      Display = "Identification of the X-Ray Source",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Maximum X-Ray tube current
    /// </summary>
    public static readonly Coding MaximumXRayTubeCurrent = new Coding
    {
      Code = "113833",
      Display = "Maximum X-Ray Tube Current",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The exposure time for one rotation of the source around the object in s
    /// </summary>
    public static readonly Coding ExposureTimePerRotation = new Coding
    {
      Code = "113834",
      Display = "Exposure Time per Rotation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A label describing the type of phantom used for CTDIW measurement according to IEC 60601-2-44 (Head 16 cm diameter PMMA, Body 32 cm diameter PMMA)
    /// </summary>
    public static readonly Coding CTDIwPhantomType = new Coding
    {
      Code = "113835",
      Display = "CTDIw Phantom Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The CTDIfreeair Calculation Factor is the CTDIfreeair per mAs, expressed in units of mGy/mAs. The CTDIfreeair Calculation Factor may be used in one method calculating Dose
    /// </summary>
    public static readonly Coding CTDIfreeairCalculationFactor = new Coding
    {
      Code = "113836",
      Display = "CTDIfreeair Calculation Factor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The average value of the free-in-air CTDI associated with this acquisition
    /// </summary>
    public static readonly Coding MeanCTDIfreeair = new Coding
    {
      Code = "113837",
      Display = "Mean CTDIfreeair",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dose Length Product (DLP), expressed in mGy-cm, is an index characterizing the product of the CTDIvol and the length scanned. For Spiral scanning, DLP = CTDIvol x Scanning Length. For Sequenced scanning, DLP = CTDIvol x Nominal Total Collimation Width x Cumulative Exposure Time / Exposure Time per Rotation. For Stationary and Free scanning, DLP = CTDIvol x Nominal Total Collimation Width
    /// </summary>
    public static readonly Coding DLP = new Coding
    {
      Code = "113838",
      Display = "DLP",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Effective dose in mSv
    /// </summary>
    public static readonly Coding EffectiveDose = new Coding
    {
      Code = "113839",
      Display = "Effective Dose",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Effective Dose per DLP, reference value for Effective Dose calculation, expressed in mSv/mGY.cm
    /// </summary>
    public static readonly Coding EffectiveDoseConversionFactor = new Coding
    {
      Code = "113840",
      Display = "Effective Dose Conversion Factor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Effective Dose Reference authority 2007 Recommendations of the International Commission on Radiological Protection (ICRP Publication 103, published as the Annals of the ICRP Vol. 37, No. 2-4, Elsevier, 2007)
    /// </summary>
    public static readonly Coding ICRPPub103 = new Coding
    {
      Code = "113841",
      Display = "ICRP Pub 103",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The type of exposure modulation used for the purpose of limiting the dose
    /// </summary>
    public static readonly Coding XRayModulationType = new Coding
    {
      Code = "113842",
      Display = "X-Ray Modulation Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measure of the detector response to radiation in the relevant image region of an image acquired with a digital X-Ray imaging system as defined in IEC 62494-1; see PS3.3 definition of Exposure Index Macro
    /// </summary>
    public static readonly Coding ExposureIndex = new Coding
    {
      Code = "113845",
      Display = "Exposure Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The target value used to calculate the Deviation Index as defined in IEC 62494-1; see PS3.3 definition of Exposure Index Macro
    /// </summary>
    public static readonly Coding TargetExposureIndex = new Coding
    {
      Code = "113846",
      Display = "Target Exposure Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A scaled representation of the accuracy of the Exposure Index compared to the Target Exposure Index as defined in IEC 62494-1; see PS3.3 definition of Exposure Index Macro
    /// </summary>
    public static readonly Coding DeviationIndex = new Coding
    {
      Code = "113847",
      Display = "Deviation Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The clinician responsible for determining that the irradiating procedure was appropriate for the indications
    /// </summary>
    public static readonly Coding IrradiationAuthorizing = new Coding
    {
      Code = "113850",
      Display = "Irradiation Authorizing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The person responsible for the administration of radiation
    /// </summary>
    public static readonly Coding IrradiationAdministering = new Coding
    {
      Code = "113851",
      Display = "Irradiation Administering",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An irradiation event is the loading of X-Ray equipment caused by a single continuous actuation of the equipment's irradiation switch, from the start of the loading time of the first pulse until the loading time trailing edge of the final pulse. Any automatic on-off switching of the irradiation source during the event is not treated as separate events, rather the event includes the time between start and stop of irradiation as triggered by the user; e.g. a pulsed fluoro X-Ray acquisition shall be treated as a single irradiation event
    /// </summary>
    public static readonly Coding IrradiationEvent = new Coding
    {
      Code = "113852",
      Display = "Irradiation Event",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unique Identifier of an Irradiation Event
    /// </summary>
    public static readonly Coding IrradiationEventUID_2 = new Coding
    {
      Code = "113853",
      Display = "Irradiation Event UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method by which dose-related details of an Irradiation Event were obtained
    /// </summary>
    public static readonly Coding SourceOfDoseInformation = new Coding
    {
      Code = "113854",
      Display = "Source of Dose Information",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total accumulated acquisition clock time in the scope of the including report (i.e., the sum of the Irradiation Duration values for accumulated acquisition irradiation events)
    /// </summary>
    public static readonly Coding TotalAcquisitionTime = new Coding
    {
      Code = "113855",
      Display = "Total Acquisition Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Direct recording of data by a relevant system
    /// </summary>
    public static readonly Coding AutomatedDataCollection = new Coding
    {
      Code = "113856",
      Display = "Automated Data Collection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Recording of data by a human operator, including manual transcription of electronic data
    /// </summary>
    public static readonly Coding ManualEntry = new Coding
    {
      Code = "113857",
      Display = "Manual Entry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The data is taken from an MPPS SOP Instance
    /// </summary>
    public static readonly Coding MPPSContent = new Coding
    {
      Code = "113858",
      Display = "MPPS Content",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A device exposing a patient to ionizing radiation
    /// </summary>
    public static readonly Coding IrradiatingDevice = new Coding
    {
      Code = "113859",
      Display = "Irradiating Device",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 15cm from the isocenter towards the X-Ray source; See IEC 60601-2-43
    /// </summary>
    public static readonly Coding VAL15cmFromIsocenterTowardSource = new Coding
    {
      Code = "113860",
      Display = "15cm from Isocenter toward Source",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 30cm in front (towards the tube) of the input surface of the image receptor; See FDA Federal Performance Standard for Diagnostic X-Ray Systems §1020.32(d) (7)
    /// </summary>
    public static readonly Coding VAL30cmInFrontOfImageInputSurface = new Coding
    {
      Code = "113861",
      Display = "30cm in Front of Image Input Surface",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 1cm above the patient tabletop or cradle; See FDA Federal Performance Standard for Diagnostic X-Ray Systems §1020.32(d) (7)
    /// </summary>
    public static readonly Coding VAL1cmAboveTabletop = new Coding
    {
      Code = "113862",
      Display = "1cm above Tabletop",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 30cm above the patient tabletop of cradle; See FDA Federal Performance Standard for Diagnostic X-Ray Systems §1020.32(d) (7)
    /// </summary>
    public static readonly Coding VAL30cmAboveTabletop = new Coding
    {
      Code = "113863",
      Display = "30cm above Tabletop",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 15cm from the centerline of the X-Ray table and in the direction of the X-Ray source; See FDA Federal Performance Standard for Diagnostic X-Ray Systems §1020.32(d) (7)
    /// </summary>
    public static readonly Coding VAL15cmFromTableCenterline = new Coding
    {
      Code = "113864",
      Display = "15cm from Table Centerline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Standard breast means a 4.2 centimeter (cm) thick compressed breast consisting of 50 percent glandular and 50 percent adipose tissue. See Department of Health and Human Services, Food and Drug Administration. Mammography quality standards; final rule. Federal Register. Oct. 28, 1997; 68(208):55852-55994; see 900.2(uu)
    /// </summary>
    public static readonly Coding EntranceExposureToA42CmBreastThickness = new Coding
    {
      Code = "113865",
      Display = "Entrance exposure to a 4.2 cm breast thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The data is copied from information present in the image attributes; e.g. dose attributes such as CTDIvol (0018,9345)
    /// </summary>
    public static readonly Coding CopiedFromImageAttributes = new Coding
    {
      Code = "113866",
      Display = "Copied From Image Attributes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The data is computed from information present in the image attributes; e.g. by using dosimetry information for the specific irradiating device make and model, applied to technique information such as KVP and mAs
    /// </summary>
    public static readonly Coding ComputedFromImageAttributes = new Coding
    {
      Code = "113867",
      Display = "Computed From Image Attributes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The data is derived from human-readable reports; e.g. by natural language parsing of text reports, or optical character recognition from reports saved as images by the irradiating device
    /// </summary>
    public static readonly Coding DerivedFromHumanReadableReports = new Coding
    {
      Code = "113868",
      Display = "Derived From Human-Readable Reports",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The name of a specific person
    /// </summary>
    public static readonly Coding PersonName = new Coding
    {
      Code = "113870",
      Display = "Person Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An identification number or code for a specific person
    /// </summary>
    public static readonly Coding PersonID = new Coding
    {
      Code = "113871",
      Display = "Person ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The organization that issued a Person ID
    /// </summary>
    public static readonly Coding PersonIDIssuer = new Coding
    {
      Code = "113872",
      Display = "Person ID Issuer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The name of an organization
    /// </summary>
    public static readonly Coding OrganizationName = new Coding
    {
      Code = "113873",
      Display = "Organization Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The role played by a person in an organization
    /// </summary>
    public static readonly Coding PersonRoleInOrganization = new Coding
    {
      Code = "113874",
      Display = "Person Role in Organization",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The role played by a person in a procedure
    /// </summary>
    public static readonly Coding PersonRoleInProcedure = new Coding
    {
      Code = "113875",
      Display = "Person Role in Procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The role played by a device in a procedure
    /// </summary>
    public static readonly Coding DeviceRoleInProcedure = new Coding
    {
      Code = "113876",
      Display = "Device Role in Procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The name used to refer to a device; usually locally unique
    /// </summary>
    public static readonly Coding DeviceName = new Coding
    {
      Code = "113877",
      Display = "Device Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Manufacturer of a device
    /// </summary>
    public static readonly Coding DeviceManufacturer = new Coding
    {
      Code = "113878",
      Display = "Device Manufacturer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Model Name of a device
    /// </summary>
    public static readonly Coding DeviceModelName = new Coding
    {
      Code = "113879",
      Display = "Device Model Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Serial Number of a device
    /// </summary>
    public static readonly Coding DeviceSerialNumber = new Coding
    {
      Code = "113880",
      Display = "Device Serial Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// All planes of a multi-plane acquisition equipment
    /// </summary>
    public static readonly Coding AllPlanes = new Coding
    {
      Code = "113890",
      Display = "All Planes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The length from which images may be reconstructed (i.e., excluding any overranging performed in a spiral acquisition that is required for data interpolation). Value is distinct from (1113825, DCM, "Scanning Length"), which is the actual length of the table travel during the entire tube loading, according to IEC 60601-2-44, and includes overranging. Also distinct from any actual Reconstructed Volume, which may depend on the slice thickness chosen for a particular reconstruction
    /// </summary>
    public static readonly Coding LengthOfReconstructableVolume = new Coding
    {
      Code = "113893",
      Display = "Length of Reconstructable Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Z location that is the top (highest Z value) of the Reconstructable Volume. Specified as the Z component within the Patient Coordinate System defined by a specified Frame of Reference
    /// </summary>
    public static readonly Coding TopZLocationOfReconstructableVolume = new Coding
    {
      Code = "113895",
      Display = "Top Z Location of Reconstructable Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Z location that is the bottom (lowest Z value) of the Reconstructable Volume. Specified as the Z component within the Patient Coordinate System defined by a specified Frame of Reference
    /// </summary>
    public static readonly Coding BottomZLocationOfReconstructableVolume = new Coding
    {
      Code = "113896",
      Display = "Bottom Z Location of Reconstructable Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Z location that is the top (highest Z value) of the scanning length. Specified as the Z component within the Patient Coordinate System defined by a specified Frame of Reference
    /// </summary>
    public static readonly Coding TopZLocationOfScanningLength = new Coding
    {
      Code = "113897",
      Display = "Top Z Location of Scanning Length",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Z location that is the bottom (lowest Z value) of the scanning length. Specified as the Z component within the Patient Coordinate System defined by a specified Frame of Reference
    /// </summary>
    public static readonly Coding BottomZLocationOfScanningLength = new Coding
    {
      Code = "113898",
      Display = "Bottom Z Location of Scanning Length",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The range along the z axis of the total volume irradiated, per IEC 60601-2-44, Ed. 3, 203.115(b). The start and stop of loading corresponding to the outer edge of the full width half maximum of the free-in-air dose profile for the beam collimation used
    /// </summary>
    public static readonly Coding ExposedRange = new Coding
    {
      Code = "113899",
      Display = "Exposed Range",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report section about cumulative dose alerts during an examination
    /// </summary>
    public static readonly Coding DoseCheckAlertDetails = new Coding
    {
      Code = "113900",
      Display = "Dose Check Alert Details",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Flag denoting whether a DLP Alert Value was configured
    /// </summary>
    public static readonly Coding DLPAlertValueConfigured = new Coding
    {
      Code = "113901",
      Display = "DLP Alert Value Configured",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Flag denoting whether a CTDIvol Alert Value was configured
    /// </summary>
    public static readonly Coding CTDIvolAlertValueConfigured = new Coding
    {
      Code = "113902",
      Display = "CTDIvol Alert Value Configured",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Cumulative Dose Length Product value configured to trigger an alert; see NEMA XR 25-2010 Dose Check Standard
    /// </summary>
    public static readonly Coding DLPAlertValue = new Coding
    {
      Code = "113903",
      Display = "DLP Alert Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Cumulative CTDIvol value configured to trigger an alert; see NEMA XR 25-2010 Dose Check Standard
    /// </summary>
    public static readonly Coding CTDIvolAlertValue = new Coding
    {
      Code = "113904",
      Display = "CTDIvol Alert Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A forward estimate of the accumulated DLP plus the estimated DLP for the next Protocol Element Group; see NEMA XR 25-2010 Dose Check Standard
    /// </summary>
    public static readonly Coding AccumulatedDLPForwardEstimate = new Coding
    {
      Code = "113905",
      Display = "Accumulated DLP Forward Estimate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A forward estimate at a given location of the accumulated CTDIvol plus the estimated CTDIvol for the next Protocol Element Group; see NEMA XR 25-2010 Dose Check Standard
    /// </summary>
    public static readonly Coding AccumulatedCTDIvolForwardEstimate = new Coding
    {
      Code = "113906",
      Display = "Accumulated CTDIvol Forward Estimate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reason provided for proceeding with a procedure that is projected to exceed a configured dose value
    /// </summary>
    public static readonly Coding ReasonForProceeding = new Coding
    {
      Code = "113907",
      Display = "Reason for Proceeding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report section about dose notifications during a protocol element
    /// </summary>
    public static readonly Coding DoseCheckNotificationDetails = new Coding
    {
      Code = "113908",
      Display = "Dose Check Notification Details",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Flag denoting whether a DLP Notification Value was configured
    /// </summary>
    public static readonly Coding DLPNotificationValueConfigured = new Coding
    {
      Code = "113909",
      Display = "DLP Notification Value Configured",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Flag denoting whether a CTDIvol Notification Value was configured
    /// </summary>
    public static readonly Coding CTDIvolNotificationValueConfigured = new Coding
    {
      Code = "113910",
      Display = "CTDIvol Notification Value Configured",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dose Length Product value configured to trigger a notification for a given protocol element
    /// </summary>
    public static readonly Coding DLPNotificationValue = new Coding
    {
      Code = "113911",
      Display = "DLP Notification Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CTDIvol value configured to trigger a notification for a given protocol element
    /// </summary>
    public static readonly Coding CTDIvolNotificationValue = new Coding
    {
      Code = "113912",
      Display = "CTDIvol Notification Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A forward estimate of the DLP for the next Protocol Element Group; see NEMA XR 25-2010 Dose Check Standard
    /// </summary>
    public static readonly Coding DLPForwardEstimate = new Coding
    {
      Code = "113913",
      Display = "DLP Forward Estimate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A forward estimate of the CTDIvol for the next Protocol Element Group; see NEMA XR 25-2010 Dose Check Standard
    /// </summary>
    public static readonly Coding CTDIvolForwardEstimate = new Coding
    {
      Code = "113914",
      Display = "CTDIvol Forward Estimate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The amount of ionizing radiation to which the patient was exposed
    /// </summary>
    public static readonly Coding RadiationExposure = new Coding
    {
      Code = "113921",
      Display = "Radiation Exposure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type, amount and route of radioactive substance administered
    /// </summary>
    public static readonly Coding RadioactiveSubstanceAdministered = new Coding
    {
      Code = "113922",
      Display = "Radioactive Substance Administered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Size-Specific Dose Estimate is a patient dose estimate that takes into account the size of the patient, such as described in AAPM Report 204 by using linear dimensions measured on the patient or patient images or estimated from patient age
    /// </summary>
    public static readonly Coding SizeSpecificDoseEstimation = new Coding
    {
      Code = "113930",
      Display = "Size Specific Dose Estimation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The side-to-side (left to right) dimension of the body part being scanned (per AAPM Report 204)
    /// </summary>
    public static readonly Coding MeasuredLateralDimension = new Coding
    {
      Code = "113931",
      Display = "Measured Lateral Dimension",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The thickness of the body part being scanned, in the antero-posterior dimension (per AAPM Report 204)
    /// </summary>
    public static readonly Coding MeasuredAPDimension = new Coding
    {
      Code = "113932",
      Display = "Measured AP Dimension",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The diameter of the patient at a given location along the Z-axis of the patient, assuming that the patient has a circular cross-section (per AAPM Report 204)
    /// </summary>
    public static readonly Coding DerivedEffectiveDiameter = new Coding
    {
      Code = "113933",
      Display = "Derived Effective Diameter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Size Specific Dose Estimation is computed using Table 1B (32cm phantom) or Table 2B (16cm phantom) of AAPM Report 204
    /// </summary>
    public static readonly Coding AAPM204LateralDimension = new Coding
    {
      Code = "113934",
      Display = "AAPM 204 Lateral Dimension",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Size Specific Dose Estimation is computed using Table 1C (32cm phantom) or Table 2C (16cm phantom) of AAPM Report 204
    /// </summary>
    public static readonly Coding AAPM204APDimension = new Coding
    {
      Code = "113935",
      Display = "AAPM 204 AP Dimension",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Size Specific Dose Estimation is computed using Table 1A (32cm phantom) or Table 2A (16cm phantom) of AAPM Report 204
    /// </summary>
    public static readonly Coding AAPM204SumOfLateralAndAPDimension = new Coding
    {
      Code = "113936",
      Display = "AAPM 204 Sum of Lateral and AP Dimension",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Size Specific Dose Estimation is computed using Table 1D (32cm phantom) or Table 2D (16cm phantom) using an effective diameter estimated from the patient's age using Table 3 of AAPM Report 204
    /// </summary>
    public static readonly Coding AAPM204EffectiveDiameterEstimatedFromPatientAge = new Coding
    {
      Code = "113937",
      Display = "AAPM 204 Effective Diameter Estimated From Patient Age",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Values calculated from other existing parameters
    /// </summary>
    public static readonly Coding SystemCalculated = new Coding
    {
      Code = "113940",
      Display = "System Calculated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A segmented region of the detector surface within the irradiated area (but might not be near the center of the detector)
    /// </summary>
    public static readonly Coding InDetectorPlane = new Coding
    {
      Code = "113941",
      Display = "In Detector Plane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A device that creates digital images from X-Ray detectors (Direct, Indirect or Storage)
    /// </summary>
    public static readonly Coding XRayReadingDevice = new Coding
    {
      Code = "113942",
      Display = "X-Ray Reading Device",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Parameters related to the X-Ray source (generator, tube, etc.) are available to the recording application
    /// </summary>
    public static readonly Coding XRaySourceDataAvailable = new Coding
    {
      Code = "113943",
      Display = "X-Ray Source Data Available",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Parameters related to the X-Ray Mechanical System (Stand, Table) are available to the recording application
    /// </summary>
    public static readonly Coding XRayMechanicalDataAvailable = new Coding
    {
      Code = "113944",
      Display = "X-Ray Mechanical Data Available",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Parameters related to the X-Ray Detector are available to the recording application
    /// </summary>
    public static readonly Coding XRayDetectorDataAvailable = new Coding
    {
      Code = "113945",
      Display = "X-Ray Detector Data Available",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Describes the radiographic method of patient, tube and detector positioning to achieve a well described projection or view
    /// </summary>
    public static readonly Coding ProjectionEponymousName = new Coding
    {
      Code = "113946",
      Display = "Projection Eponymous Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of Detector used to acquire data; e.g. Images
    /// </summary>
    public static readonly Coding DetectorType = new Coding
    {
      Code = "113947",
      Display = "Detector Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Detector that directly transforms the input signal to pixel values
    /// </summary>
    public static readonly Coding DirectDetector = new Coding
    {
      Code = "113948",
      Display = "Direct Detector",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Detector that transforms an intermediate signal into pixel values; e.g. a scintillator-based detector
    /// </summary>
    public static readonly Coding IndirectDetector = new Coding
    {
      Code = "113949",
      Display = "Indirect Detector",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Storage detector that stores a signal that is later transformed by a reader into pixel values; e.g. a phosphor-based detector
    /// </summary>
    public static readonly Coding StorageDetector = new Coding
    {
      Code = "113950",
      Display = "Storage Detector",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Film that is scanned to create pixel values
    /// </summary>
    public static readonly Coding Film_2 = new Coding
    {
      Code = "113951",
      Display = "Film",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The cassette/detector is mounted in the patient table
    /// </summary>
    public static readonly Coding TableMount = new Coding
    {
      Code = "113952",
      Display = "Table Mount",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The cassette/detector is not mounted.; e.g. a cassette placed underneath the patient
    /// </summary>
    public static readonly Coding UnmountedDetector = new Coding
    {
      Code = "113953",
      Display = "Unmounted Detector",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The cassette/detector is mounted in an upright stand
    /// </summary>
    public static readonly Coding UprightStandMount = new Coding
    {
      Code = "113954",
      Display = "Upright Stand Mount",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The cassette/detector is mounted on a c-arm
    /// </summary>
    public static readonly Coding CArmMount = new Coding
    {
      Code = "113955",
      Display = "C-Arm Mount",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of mounting or positioning a CR/DR cassette or detector
    /// </summary>
    public static readonly Coding CRDRMechanicalConfiguration = new Coding
    {
      Code = "113956",
      Display = "CR/DR Mechanical Configuration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An integrated projection radiography system capable of fluoroscopy
    /// </summary>
    public static readonly Coding FluoroscopyGuidedProjectionRadiographySystem = new Coding
    {
      Code = "113957",
      Display = "Fluoroscopy-Guided Projection Radiography System",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A projection radiography system where the X-Ray detector, X-Ray Source and gantry components are integrated and the managing system is able to access details of each component
    /// </summary>
    public static readonly Coding IntegratedProjectionRadiographySystem = new Coding
    {
      Code = "113958",
      Display = "Integrated Projection Radiography System",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A projection radiography system where the X-Ray detector, X-Ray Source and gantry components are not integrated; e.g. cassette-based CR and DR systems
    /// </summary>
    public static readonly Coding CassetteBasedProjectionRadiographySystem = new Coding
    {
      Code = "113959",
      Display = "Cassette-based Projection Radiography System",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Description of the algorithm used when reconstructing the image from the data acquired during the acquisition process
    /// </summary>
    public static readonly Coding ReconstructionAlgorithm = new Coding
    {
      Code = "113961",
      Display = "Reconstruction Algorithm",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An algorithm for reconstructing an image from multiple projections by back-projecting the measured values along the line of the projection and filtering the result to reduce blurring
    /// </summary>
    public static readonly Coding FilteredBackProjection = new Coding
    {
      Code = "113962",
      Display = "Filtered Back Projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An algorithm for reconstructing an image from multiple projections by starting with an assumed reconstructed image, computing projections from the image, comparing the original projection data and updating the reconstructed image based upon the difference between the calculated and the actual projections
    /// </summary>
    public static readonly Coding IterativeReconstruction = new Coding
    {
      Code = "113963",
      Display = "Iterative Reconstruction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The period of time from the start of a Procedure Step until the time point established by the context of the reference
    /// </summary>
    public static readonly Coding ProcedureStepToThisPoint = new Coding
    {
      Code = "113970",
      Display = "Procedure Step To This Point",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Not a number (per IEEE 754)
    /// </summary>
    public static readonly Coding NotANumber = new Coding
    {
      Code = "114000",
      Display = "Not a number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Negative Infinity (per IEEE 754)
    /// </summary>
    public static readonly Coding NegativeInfinity = new Coding
    {
      Code = "114001",
      Display = "Negative Infinity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Positive Infinity (per IEEE 754)
    /// </summary>
    public static readonly Coding PositiveInfinity = new Coding
    {
      Code = "114002",
      Display = "Positive Infinity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Divide by zero (per IEEE 754)
    /// </summary>
    public static readonly Coding DivideByZero = new Coding
    {
      Code = "114003",
      Display = "Divide by zero",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Underflow (per IEEE 754)
    /// </summary>
    public static readonly Coding Underflow = new Coding
    {
      Code = "114004",
      Display = "Underflow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Overflow (per IEEE 754)
    /// </summary>
    public static readonly Coding Overflow = new Coding
    {
      Code = "114005",
      Display = "Overflow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Measurement failure
    /// </summary>
    public static readonly Coding MeasurementFailure = new Coding
    {
      Code = "114006",
      Display = "Measurement failure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Measurement not attempted
    /// </summary>
    public static readonly Coding MeasurementNotAttempted = new Coding
    {
      Code = "114007",
      Display = "Measurement not attempted",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Calculation failure
    /// </summary>
    public static readonly Coding CalculationFailure = new Coding
    {
      Code = "114008",
      Display = "Calculation failure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Value out of range
    /// </summary>
    public static readonly Coding ValueOutOfRange = new Coding
    {
      Code = "114009",
      Display = "Value out of range",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Value unknown
    /// </summary>
    public static readonly Coding ValueUnknown = new Coding
    {
      Code = "114010",
      Display = "Value unknown",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement not available: Value indeterminate
    /// </summary>
    public static readonly Coding ValueIndeterminate = new Coding
    {
      Code = "114011",
      Display = "Value indeterminate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measures the time-of-flight of a light signal between the camera and the subject for each point of the image
    /// </summary>
    public static readonly Coding TimeOfFlight = new Coding
    {
      Code = "114201",
      Display = "Time of flight",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Interferometry is a family of techniques in which waves are superimposed in order to extract depth information about the scanned object
    /// </summary>
    public static readonly Coding Interferometry = new Coding
    {
      Code = "114202",
      Display = "Interferometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Laser scanning describes the general method to sample or scan a surface using laser technology
    /// </summary>
    public static readonly Coding LaserScanning = new Coding
    {
      Code = "114203",
      Display = "Laser scanning",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Projecting a narrow band of light onto a three-dimensionally shaped surface produces a line of illumination that appears distorted from other perspectives than that of the projector. It can be used for an exact geometric reconstruction of the surface shape
    /// </summary>
    public static readonly Coding PatternProjection = new Coding
    {
      Code = "114204",
      Display = "Pattern projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A technique for estimating the surface normal of an object by observing that object under different lighting conditions
    /// </summary>
    public static readonly Coding ShapeFromShading = new Coding
    {
      Code = "114205",
      Display = "Shape from shading",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A technique for estimating the surface normal of an object by observing that object under different motions
    /// </summary>
    public static readonly Coding ShapeFromMotion = new Coding
    {
      Code = "114206",
      Display = "Shape from motion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An optical imaging technique used to increase optical resolution and contrast of a micrograph by using point illumination and a spatial pinhole to eliminate out-of-focus light in specimens that are thicker than the focal plane. It enables the reconstruction of 3D structures from the obtained images
    /// </summary>
    public static readonly Coding ConfocalImaging = new Coding
    {
      Code = "114207",
      Display = "Confocal imaging",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Point cloud that was calculated by an algorithm
    /// </summary>
    public static readonly Coding PointCloudAlgorithmic = new Coding
    {
      Code = "114208",
      Display = "Point Cloud Algorithmic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Scanning the object from different views by placing it on a rotating table
    /// </summary>
    public static readonly Coding TurntableScanMethod = new Coding
    {
      Code = "114209",
      Display = "Turntable Scan Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Higher resolution with a longer acquisition time
    /// </summary>
    public static readonly Coding HighResolution = new Coding
    {
      Code = "114210",
      Display = "High resolution",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lower resolution with a shorter acquisition time
    /// </summary>
    public static readonly Coding FastMode = new Coding
    {
      Code = "114211",
      Display = "Fast mode",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An algorithm employed to minimize the difference between two clouds of points. It iteratively revises the transformation (translation, rotation) needed to minimize the distance between the points of two point clouds
    /// </summary>
    public static readonly Coding IterativeClosestPoint = new Coding
    {
      Code = "114213",
      Display = "Iterative Closest Point",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Human controlled minimization of the distance between the points of two point clouds
    /// </summary>
    public static readonly Coding Freehand = new Coding
    {
      Code = "114215",
      Display = "Freehand",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Scanning the object from different views by placing it in front of a checkerboard pattern
    /// </summary>
    public static readonly Coding Checkerboard = new Coding
    {
      Code = "114216",
      Display = "Checkerboard",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of source for observations quoted from an external source
    /// </summary>
    public static readonly Coding QuotationMode = new Coding
    {
      Code = "121001",
      Display = "Quotation Mode",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference to external source of quoted observations
    /// </summary>
    public static readonly Coding QuotedSource = new Coding
    {
      Code = "121002",
      Display = "Quoted Source",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Documentary source of quoted observations
    /// </summary>
    public static readonly Coding Document = new Coding
    {
      Code = "121003",
      Display = "Document",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Verbal source of quoted observations
    /// </summary>
    public static readonly Coding Verbal = new Coding
    {
      Code = "121004",
      Display = "Verbal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of observer that created the observations
    /// </summary>
    public static readonly Coding ObserverType = new Coding
    {
      Code = "121005",
      Display = "Observer Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Human observer created the observations
    /// </summary>
    public static readonly Coding Person = new Coding
    {
      Code = "121006",
      Display = "Person",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Automated device created the observations
    /// </summary>
    public static readonly Coding Device = new Coding
    {
      Code = "121007",
      Display = "Device",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Name of human observer that created the observations
    /// </summary>
    public static readonly Coding PersonObserverName = new Coding
    {
      Code = "121008",
      Display = "Person Observer Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Organization or institution with which the human observer is affiliated for the context of the current observation
    /// </summary>
    public static readonly Coding PersonObserverQuoteSOrganizationName = new Coding
    {
      Code = "121009",
      Display = "Person Observer's Organization Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Organizational role of human observer for the context of the current observation
    /// </summary>
    public static readonly Coding PersonObserverQuoteSRoleInTheOrganization = new Coding
    {
      Code = "121010",
      Display = "Person Observer's Role in the Organization",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedural role of human observer for the context of the current observation
    /// </summary>
    public static readonly Coding PersonObserverQuoteSRoleInThisProcedure = new Coding
    {
      Code = "121011",
      Display = "Person Observer's Role in this Procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unique identifier of automated device that created the observations
    /// </summary>
    public static readonly Coding DeviceObserverUID = new Coding
    {
      Code = "121012",
      Display = "Device Observer UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Institution-provided identifier of automated device that created the observations
    /// </summary>
    public static readonly Coding DeviceObserverName = new Coding
    {
      Code = "121013",
      Display = "Device Observer Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Manufacturer of automated device that created the observations
    /// </summary>
    public static readonly Coding DeviceObserverManufacturer = new Coding
    {
      Code = "121014",
      Display = "Device Observer Manufacturer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Manufacturer-provided model name of automated device that created the observations
    /// </summary>
    public static readonly Coding DeviceObserverModelName = new Coding
    {
      Code = "121015",
      Display = "Device Observer Model Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Manufacturer-provided serial number of automated device that created the observations
    /// </summary>
    public static readonly Coding DeviceObserverSerialNumber = new Coding
    {
      Code = "121016",
      Display = "Device Observer Serial Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location of automated device that created the observations whilst the observations were being made
    /// </summary>
    public static readonly Coding DeviceObserverPhysicalLocationDuringObservation = new Coding
    {
      Code = "121017",
      Display = "Device Observer Physical Location During Observation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unique identifier for the Study or Requested Procedure
    /// </summary>
    public static readonly Coding ProcedureStudyInstanceUID = new Coding
    {
      Code = "121018",
      Display = "Procedure Study Instance UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unique identifier for the Performed Procedure Step
    /// </summary>
    public static readonly Coding ProcedureStudyComponentUID = new Coding
    {
      Code = "121019",
      Display = "Procedure Study Component UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier for the Order (or Service Request) assigned by the order placer system
    /// </summary>
    public static readonly Coding PlacerNumber = new Coding
    {
      Code = "121020",
      Display = "Placer Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier for the Order (or Service Request) assigned by the order filler system
    /// </summary>
    public static readonly Coding FillerNumber = new Coding
    {
      Code = "121021",
      Display = "Filler Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier for the Order (or Service Request) assigned by the department information system
    /// </summary>
    public static readonly Coding AccessionNumber = new Coding
    {
      Code = "121022",
      Display = "Accession Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of procedure scheduled or performed
    /// </summary>
    public static readonly Coding ProcedureCode = new Coding
    {
      Code = "121023",
      Display = "Procedure Code",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of observation subject
    /// </summary>
    public static readonly Coding SubjectClass = new Coding
    {
      Code = "121024",
      Display = "Subject Class",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A patient is the subject of observations
    /// </summary>
    public static readonly Coding Patient = new Coding
    {
      Code = "121025",
      Display = "Patient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fetus of patient is the subject of observations
    /// </summary>
    public static readonly Coding Fetus = new Coding
    {
      Code = "121026",
      Display = "Fetus",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Specimen is the subject of observations
    /// </summary>
    public static readonly Coding Specimen = new Coding
    {
      Code = "121027",
      Display = "Specimen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unique Identifier of patient or fetus who is the subject of observations
    /// </summary>
    public static readonly Coding SubjectUID = new Coding
    {
      Code = "121028",
      Display = "Subject UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Name of patient who is the subject of observations
    /// </summary>
    public static readonly Coding SubjectName = new Coding
    {
      Code = "121029",
      Display = "Subject Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of patient or fetus who is the subject of observations
    /// </summary>
    public static readonly Coding SubjectID = new Coding
    {
      Code = "121030",
      Display = "Subject ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Birth Date of patient who is the subject of observations
    /// </summary>
    public static readonly Coding SubjectBirthDate = new Coding
    {
      Code = "121031",
      Display = "Subject Birth Date",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Sex of patient who is the subject of observations
    /// </summary>
    public static readonly Coding SubjectSex = new Coding
    {
      Code = "121032",
      Display = "Subject Sex",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Age of patient who is the subject of observations
    /// </summary>
    public static readonly Coding SubjectAge = new Coding
    {
      Code = "121033",
      Display = "Subject Age",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Species of patient who is the subject of observations
    /// </summary>
    public static readonly Coding SubjectSpecies = new Coding
    {
      Code = "121034",
      Display = "Subject Species",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The breed of the subject
    /// </summary>
    public static readonly Coding SubjectBreed = new Coding
    {
      Code = "121035",
      Display = "Subject Breed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Name of mother of fetus that is the subject of observations
    /// </summary>
    public static readonly Coding MotherOfFetus = new Coding
    {
      Code = "121036",
      Display = "Mother of fetus",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unique Identifier of specimen that is the subject of observations
    /// </summary>
    public static readonly Coding SpecimenUID = new Coding
    {
      Code = "121039",
      Display = "Specimen UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of specimen that is the subject of observations
    /// </summary>
    public static readonly Coding SpecimenIdentifier = new Coding
    {
      Code = "121041",
      Display = "Specimen Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The language of the content, being a language that is primarily used for human communication; e.g. English, French
    /// </summary>
    public static readonly Coding Language = new Coding
    {
      Code = "121045",
      Display = "Language",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The country-specific variant of language; e.g. Canada for Candadian French
    /// </summary>
    public static readonly Coding CountryOfLanguage = new Coding
    {
      Code = "121046",
      Display = "Country of Language",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The language of the value component of a name-value pair
    /// </summary>
    public static readonly Coding LanguageOfValue = new Coding
    {
      Code = "121047",
      Display = "Language of Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The language of both the name component and the value component of a name-value pair
    /// </summary>
    public static readonly Coding LanguageOfNameAndValue = new Coding
    {
      Code = "121048",
      Display = "Language of Name and Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The language of the current content item (node in a tree of content) and all its descendants
    /// </summary>
    public static readonly Coding LanguageOfContentItemAndDescendants = new Coding
    {
      Code = "121049",
      Display = "Language of Content Item and Descendants",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The human readable meaning of the name component of a name-value pair that is equivalent to the post-coordinated meaning conveyed by the coded name and its concept modifier children
    /// </summary>
    public static readonly Coding EquivalentMeaningOfConceptName = new Coding
    {
      Code = "121050",
      Display = "Equivalent Meaning of Concept Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The human readable meaning of the value component of a name-value pair that is equivalent to the post-coordinated meaning conveyed by the coded value and its concept modifier children
    /// </summary>
    public static readonly Coding EquivalentMeaningOfValue = new Coding
    {
      Code = "121051",
      Display = "Equivalent Meaning of Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Whether or not the property concept being modified is present or absent
    /// </summary>
    public static readonly Coding PresenceOfProperty = new Coding
    {
      Code = "121052",
      Display = "Presence of property",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A set of points on an image, that when connected by line segments, provide a polyline from which a linear measurement was inferred
    /// </summary>
    public static readonly Coding Path = new Coding
    {
      Code = "121055",
      Display = "Path",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A set of points on an image, that when connected by line segments, provide a closed polyline that is the border of a defined region from which an area, or two-dimensional measurement, was inferred
    /// </summary>
    public static readonly Coding AreaOutline = new Coding
    {
      Code = "121056",
      Display = "Area outline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A set of points on an image, that when connected by line segments, provide a closed polyline that is a two-dimensional border of a three-dimensional region's intersection with, or projection into the image
    /// </summary>
    public static readonly Coding PerimeterOutline = new Coding
    {
      Code = "121057",
      Display = "Perimeter outline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The imaging procedure whose results are reported
    /// </summary>
    public static readonly Coding ProcedureReported = new Coding
    {
      Code = "121058",
      Display = "Procedure reported",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A description of the imaging procedure
    /// </summary>
    public static readonly Coding ProcedureDescription = new Coding
    {
      Code = "121065",
      Display = "Procedure Description",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An observation found on a prior imaging study
    /// </summary>
    public static readonly Coding PreviousFinding = new Coding
    {
      Code = "121069",
      Display = "Previous Finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An observation found on an imaging study
    /// </summary>
    public static readonly Coding Finding = new Coding
    {
      Code = "121071",
      Display = "Finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An interpretation in the clinical context of the finding(s) on an imaging study
    /// </summary>
    public static readonly Coding Impression = new Coding
    {
      Code = "121073",
      Display = "Impression",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A recommendation for management or investigation based on the findings and impressions of an imaging study
    /// </summary>
    public static readonly Coding Recommendation = new Coding
    {
      Code = "121075",
      Display = "Recommendation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An interpretation in the clinical context of the finding(s) on an imaging study
    /// </summary>
    public static readonly Coding Conclusion = new Coding
    {
      Code = "121077",
      Display = "Conclusion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Initial images used to esyablish a beginning condition that is used for comparison over time to look for changes. [Paraphrases NCI-PT (C1442488, UMLS, "Baseline"), which is defined as "An initial measurement that is taken at an early time point to represent a beginning condition, and is used for comparison over time to look for changes. For example, the size of a tumor will be measured before treatment (baseline) and then afterwards to see if the treatment had an effect. A starting point to which things may be compared."]
    /// </summary>
    public static readonly Coding Baseline = new Coding
    {
      Code = "121079",
      Display = "Baseline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A selection of composite instances that best illustrates a particular finding; e.g. an image slice at the location of the largest extent of a tumor
    /// </summary>
    public static readonly Coding BestIllustrationOfFinding = new Coding
    {
      Code = "121080",
      Display = "Best illustration of finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A medical practitioner undergoing sub-specialty training; e.g. during the period after specialty training (residency)
    /// </summary>
    public static readonly Coding Fellow = new Coding
    {
      Code = "121088",
      Display = "Fellow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A medical practitioner with sub-specialty training in Ultrasound
    /// </summary>
    public static readonly Coding Sonologist = new Coding
    {
      Code = "121092",
      Display = "Sonologist",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The person responsible for performing the procedure
    /// </summary>
    public static readonly Coding Performing = new Coding
    {
      Code = "121094",
      Display = "Performing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The person responsible for requesting the procedure
    /// </summary>
    public static readonly Coding Requesting = new Coding
    {
      Code = "121096",
      Display = "Requesting",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The person responsible for recording the procedure or observation
    /// </summary>
    public static readonly Coding Recording = new Coding
    {
      Code = "121097",
      Display = "Recording",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The person responsible for verifying the recorded procedure or observation
    /// </summary>
    public static readonly Coding Verifying = new Coding
    {
      Code = "121098",
      Display = "Verifying",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The person responsible for assisting with the procedure
    /// </summary>
    public static readonly Coding Assisting = new Coding
    {
      Code = "121099",
      Display = "Assisting",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The person responsible for standing by to assist with the precedure if required
    /// </summary>
    public static readonly Coding Standby = new Coding
    {
      Code = "121101",
      Display = "Standby",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Other sex
    /// </summary>
    public static readonly Coding OtherSex = new Coding
    {
      Code = "121102",
      Display = "Other sex",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Sex of subject undetermined at time of encoding
    /// </summary>
    public static readonly Coding UndeterminedSex = new Coding
    {
      Code = "121103",
      Display = "Undetermined sex",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ambiguous sex
    /// </summary>
    public static readonly Coding AmbiguousSex = new Coding
    {
      Code = "121104",
      Display = "Ambiguous sex",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Comment
    /// </summary>
    public static readonly Coding Comment = new Coding
    {
      Code = "121106",
      Display = "Comment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image or waveform used as source for measurement
    /// </summary>
    public static readonly Coding SourceOfMeasurement = new Coding
    {
      Code = "121112",
      Display = "Source of Measurement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Physician who performed a procedure
    /// </summary>
    public static readonly Coding PerformingPhysician = new Coding
    {
      Code = "121114",
      Display = "Performing Physician",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Summary of patient condition upon Discharge from a healthcare facility
    /// </summary>
    public static readonly Coding DischargeSummary = new Coding
    {
      Code = "121115",
      Display = "Discharge Summary",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Proximal Anatomic Location for a differential measurement; may be considered subtype of term (G-C0E3, SRT, "Finding Site"); e.g. distance or pressure gradient
    /// </summary>
    public static readonly Coding ProximalFindingSite = new Coding
    {
      Code = "121116",
      Display = "Proximal Finding Site",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distal Anatomic Location for a differential measurement; may be considered subtype of term (G-C0E3, SRT, "Finding Site"); e.g. distance or pressure gradient
    /// </summary>
    public static readonly Coding DistalFindingSite = new Coding
    {
      Code = "121117",
      Display = "Distal Finding Site",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient Characteristics (findings)
    /// </summary>
    public static readonly Coding PatientCharacteristics = new Coding
    {
      Code = "121118",
      Display = "Patient Characteristics",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time-stamped record of events that occur during a catheterization procedure
    /// </summary>
    public static readonly Coding CathLabProcedureLog = new Coding
    {
      Code = "121120",
      Display = "Cath Lab Procedure Log",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Room identification
    /// </summary>
    public static readonly Coding RoomIdentification = new Coding
    {
      Code = "121121",
      Display = "Room identification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment identification
    /// </summary>
    public static readonly Coding EquipmentIdentification = new Coding
    {
      Code = "121122",
      Display = "Equipment Identification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A recorded Patient Status or an event involving a patient
    /// </summary>
    public static readonly Coding PatientStatusOrEvent = new Coding
    {
      Code = "121123",
      Display = "Patient Status or Event",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identification of a step, action, or phase of a procedure
    /// </summary>
    public static readonly Coding ProcedureActionItemID = new Coding
    {
      Code = "121124",
      Display = "Procedure Action Item ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// DateTime of Recording of an Entry in an Event Log
    /// </summary>
    public static readonly Coding DateTimeOfRecordingOfLogEntry = new Coding
    {
      Code = "121125",
      Display = "DateTime of Recording of Log Entry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// SOP Instance UID of a Performed Procedure Step
    /// </summary>
    public static readonly Coding PerformedProcedureStepSOPInstanceUID = new Coding
    {
      Code = "121126",
      Display = "Performed Procedure Step SOP Instance UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// SOP Class UID of a Performed Procedure Step
    /// </summary>
    public static readonly Coding PerformedProcedureStepSOPClassUID = new Coding
    {
      Code = "121127",
      Display = "Performed Procedure Step SOP Class UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Duration of a step, action, or phase of a procedure
    /// </summary>
    public static readonly Coding ProcedureActionDuration = new Coding
    {
      Code = "121128",
      Display = "Procedure Action Duration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Beginning of a step, action, or phase of a procedure
    /// </summary>
    public static readonly Coding StartProcedureActionItem = new Coding
    {
      Code = "121130",
      Display = "Start Procedure Action Item",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// End of a step, action, or phase of a procedure
    /// </summary>
    public static readonly Coding EndProcedureActionItem = new Coding
    {
      Code = "121131",
      Display = "End Procedure Action Item",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Suspension of a step, action, or phase of a procedure
    /// </summary>
    public static readonly Coding SuspendProcedureActionItem = new Coding
    {
      Code = "121132",
      Display = "Suspend Procedure Action Item",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Resumption of a step, action, or phase of a procedure
    /// </summary>
    public static readonly Coding ResumeProcedureActionItem = new Coding
    {
      Code = "121133",
      Display = "Resume Procedure Action Item",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Concept modifier for the DateTime of Recording of an Entry in an Event Log
    /// </summary>
    public static readonly Coding ObservationDateTimeQualifier = new Coding
    {
      Code = "121135",
      Display = "Observation DateTime Qualifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Recorded DateTime had its source in a system clock not synchronized to other recorded DateTimes
    /// </summary>
    public static readonly Coding DateTimeUnsynchronized = new Coding
    {
      Code = "121136",
      Display = "DateTime Unsynchronized",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Recorded DateTime is estimated
    /// </summary>
    public static readonly Coding DateTimeEstimated = new Coding
    {
      Code = "121137",
      Display = "DateTime Estimated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Event of the acquisition of an image
    /// </summary>
    public static readonly Coding ImageAcquired = new Coding
    {
      Code = "121138",
      Display = "Image Acquired",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type of data acquisition device
    /// </summary>
    public static readonly Coding Modality = new Coding
    {
      Code = "121139",
      Display = "Modality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of Frames in a multi-frame image
    /// </summary>
    public static readonly Coding NumberOfFrames = new Coding
    {
      Code = "121140",
      Display = "Number of Frames",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Descriptor of an Image
    /// </summary>
    public static readonly Coding ImageType = new Coding
    {
      Code = "121141",
      Display = "Image Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Duration of the acquisition of an image or a waveform
    /// </summary>
    public static readonly Coding AcquisitionDuration = new Coding
    {
      Code = "121142",
      Display = "Acquisition Duration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Event of the acquisition of an image
    /// </summary>
    public static readonly Coding WaveformAcquired = new Coding
    {
      Code = "121143",
      Display = "Waveform Acquired",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Document Title
    /// </summary>
    public static readonly Coding DocumentTitle = new Coding
    {
      Code = "121144",
      Display = "Document Title",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Description of Material used in a procedure
    /// </summary>
    public static readonly Coding DescriptionOfMaterial = new Coding
    {
      Code = "121145",
      Display = "Description of Material",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Quantity of Material used in a procedure
    /// </summary>
    public static readonly Coding QuantityOfMaterial = new Coding
    {
      Code = "121146",
      Display = "Quantity of Material",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Billing Code for materials used in a procedure
    /// </summary>
    public static readonly Coding BillingCode = new Coding
    {
      Code = "121147",
      Display = "Billing Code",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unit or Device Serial Identifier
    /// </summary>
    public static readonly Coding UnitSerialIdentifier = new Coding
    {
      Code = "121148",
      Display = "Unit Serial Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lot Identifier
    /// </summary>
    public static readonly Coding LotIdentifier = new Coding
    {
      Code = "121149",
      Display = "Lot Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vendor or local coded value identifying a device
    /// </summary>
    public static readonly Coding DeviceCode = new Coding
    {
      Code = "121150",
      Display = "Device Code",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identification of a Lesion observed during an imaging procedure
    /// </summary>
    public static readonly Coding LesionIdentifier = new Coding
    {
      Code = "121151",
      Display = "Lesion Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Person administering drug/contrast
    /// </summary>
    public static readonly Coding PersonAdministeringDrugContrast = new Coding
    {
      Code = "121152",
      Display = "Person administering drug/contrast",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assessment of the risk a coronary lesion presents to the health of a patient
    /// </summary>
    public static readonly Coding LesionRisk = new Coding
    {
      Code = "121153",
      Display = "Lesion Risk",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier for an attempted Intervention
    /// </summary>
    public static readonly Coding InterventionAttemptIdentifier = new Coding
    {
      Code = "121154",
      Display = "Intervention attempt identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Use of a device to deploy another device
    /// </summary>
    public static readonly Coding Deployment = new Coding
    {
      Code = "121155",
      Display = "Deployment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Action of a clinical professional at the site of percutaneous access to a patient's cardiovascular system
    /// </summary>
    public static readonly Coding PercutaneousEntryAction = new Coding
    {
      Code = "121156",
      Display = "Percutaneous Entry Action",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The action or event of beginning circulatory support for a patient
    /// </summary>
    public static readonly Coding BeginCirculatorySupport = new Coding
    {
      Code = "121157",
      Display = "Begin Circulatory Support",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The action or event of ending circulatory support for a patient
    /// </summary>
    public static readonly Coding EndCirculatorySupport = new Coding
    {
      Code = "121158",
      Display = "End Circulatory Support",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Rate of Oxygen Administration
    /// </summary>
    public static readonly Coding OxygenAdministrationRate = new Coding
    {
      Code = "121160",
      Display = "Oxygen Administration Rate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The action or event of beginning administration of oxygen to a patient
    /// </summary>
    public static readonly Coding BeginOxygenAdministration = new Coding
    {
      Code = "121161",
      Display = "Begin Oxygen Administration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The action or event of ending administration of oxygen to a patient
    /// </summary>
    public static readonly Coding EndOxygenAdministration = new Coding
    {
      Code = "121162",
      Display = "End oxygen administration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of administration of oxygen to a patient by ventilator
    /// </summary>
    public static readonly Coding ByVentilator = new Coding
    {
      Code = "121163",
      Display = "By ventilator",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The action or event of assessing the clinical status of a patient
    /// </summary>
    public static readonly Coding PatientAssessmentPerformed = new Coding
    {
      Code = "121165",
      Display = "Patient Assessment Performed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The action or event of beginning pacing support for a patient
    /// </summary>
    public static readonly Coding BeginPacing = new Coding
    {
      Code = "121166",
      Display = "Begin Pacing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The action or event of ending pacing support for a patient
    /// </summary>
    public static readonly Coding EndPacing = new Coding
    {
      Code = "121167",
      Display = "End Pacing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The action or event of beginning ventilation support for a patient
    /// </summary>
    public static readonly Coding BeginVentilation = new Coding
    {
      Code = "121168",
      Display = "Begin Ventilation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The action or event of ending ventilation support for a patient
    /// </summary>
    public static readonly Coding EndVentilation = new Coding
    {
      Code = "121169",
      Display = "End Ventilation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedural note originated by a technologist
    /// </summary>
    public static readonly Coding TechNote = new Coding
    {
      Code = "121171",
      Display = "Tech Note",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedural note originated by a nurse
    /// </summary>
    public static readonly Coding NursingNote = new Coding
    {
      Code = "121172",
      Display = "Nursing Note",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedural note originated by a Physician
    /// </summary>
    public static readonly Coding PhysicianNote = new Coding
    {
      Code = "121173",
      Display = "Physician Note",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// General procedural note
    /// </summary>
    public static readonly Coding ProcedureNote = new Coding
    {
      Code = "121174",
      Display = "Procedure Note",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// List of references to DICOM SOP Instances
    /// </summary>
    public static readonly Coding DICOMObjectCatalog = new Coding
    {
      Code = "121181",
      Display = "DICOM Object Catalog",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Individual frames selected as a subset of a multi-frame image
    /// </summary>
    public static readonly Coding ReferencedFrames = new Coding
    {
      Code = "121190",
      Display = "Referenced Frames",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Segment selected as a subset of a segmentation image, specifically the pixels/voxels identified as belonging to the classification of the identified segment
    /// </summary>
    public static readonly Coding ReferencedSegment = new Coding
    {
      Code = "121191",
      Display = "Referenced Segment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A device is the subject of observations
    /// </summary>
    public static readonly Coding DeviceSubject = new Coding
    {
      Code = "121192",
      Display = "Device Subject",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Name or other identifier of a device that is the subject of observations
    /// </summary>
    public static readonly Coding DeviceSubjectName = new Coding
    {
      Code = "121193",
      Display = "Device Subject Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Manufacturer of a device that is the subject of observations
    /// </summary>
    public static readonly Coding DeviceSubjectManufacturer = new Coding
    {
      Code = "121194",
      Display = "Device Subject Manufacturer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Model Name of a device that is the subject of observations
    /// </summary>
    public static readonly Coding DeviceSubjectModelName = new Coding
    {
      Code = "121195",
      Display = "Device Subject Model Name",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Serial Number of a device that is the subject of observations
    /// </summary>
    public static readonly Coding DeviceSubjectSerialNumber = new Coding
    {
      Code = "121196",
      Display = "Device Subject Serial Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Physical Location of a device that is the subject of observations during those observations
    /// </summary>
    public static readonly Coding DeviceSubjectPhysicalLocationDuringObservation = new Coding
    {
      Code = "121197",
      Display = "Device Subject Physical Location during observation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unique Identifier of a device that is the subject of observations
    /// </summary>
    public static readonly Coding DeviceSubjectUID = new Coding
    {
      Code = "121198",
      Display = "Device Subject UID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Illustration of a region of interest
    /// </summary>
    public static readonly Coding IllustrationOfROI = new Coding
    {
      Code = "121200",
      Display = "Illustration of ROI",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A one dimensional, or linear, numeric measurement
    /// </summary>
    public static readonly Coding Distance = new Coding
    {
      Code = "121206",
      Display = "Distance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vertical measurement value
    /// </summary>
    public static readonly Coding Height = new Coding
    {
      Code = "121207",
      Display = "Height",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distance between marks on a device of calibrated size; e.g. a ruler
    /// </summary>
    public static readonly Coding InterMarkerDistance = new Coding
    {
      Code = "121208",
      Display = "Inter-Marker Distance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A one dimensional, or linear, numeric measurement along a polyline
    /// </summary>
    public static readonly Coding PathLength = new Coding
    {
      Code = "121211",
      Display = "Path length",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Frame selected from a segmentation image, specifically the pixels/voxels identified as belonging to the classification of the segment encompassing the identified frame
    /// </summary>
    public static readonly Coding ReferencedSegmentationFrame = new Coding
    {
      Code = "121214",
      Display = "Referenced Segmentation Frame",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A three-dimensional numeric measurement that is approximate, based on a two-dimensional region in a single image
    /// </summary>
    public static readonly Coding VolumeEstimatedFromSingle2DRegion = new Coding
    {
      Code = "121216",
      Display = "Volume estimated from single 2D region",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A three-dimensional numeric measurement that is approximate, based on three or more non-coplanar two-dimensional image regions
    /// </summary>
    public static readonly Coding VolumeEstimatedFromThreeOrMoreNonCoplanar2DRegions = new Coding
    {
      Code = "121217",
      Display = "Volume estimated from three or more non-coplanar 2D regions",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A three-dimensional numeric measurement that is approximate, based on two non-coplanar two-dimensional image regions
    /// </summary>
    public static readonly Coding VolumeEstimatedFromTwoNonCoplanar2DRegions = new Coding
    {
      Code = "121218",
      Display = "Volume estimated from two non-coplanar 2D regions",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A three-dimensional numeric measurement of the bounding region of a three-dimensional region of interest in an image set
    /// </summary>
    public static readonly Coding VolumeOfBoundingThreeDimensionalRegion = new Coding
    {
      Code = "121219",
      Display = "Volume of bounding three dimensional region",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A three-dimensional numeric measurement of the bounding sphere of a three-dimensional region of interest in an image set
    /// </summary>
    public static readonly Coding VolumeOfCircumscribedSphere = new Coding
    {
      Code = "121220",
      Display = "Volume of circumscribed sphere",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A three-dimensional numeric measurement of an ellipsoid shaped three-dimensional region of interest in an image set
    /// </summary>
    public static readonly Coding VolumeOfEllipsoid = new Coding
    {
      Code = "121221",
      Display = "Volume of ellipsoid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A three-dimensional numeric measurement of a sphere shaped three-dimensional region of interest in an image set
    /// </summary>
    public static readonly Coding VolumeOfSphere = new Coding
    {
      Code = "121222",
      Display = "Volume of sphere",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Coordinates of a point on a defined path
    /// </summary>
    public static readonly Coding PathVertex = new Coding
    {
      Code = "121230",
      Display = "Path Vertex",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface of an identified or measured volume
    /// </summary>
    public static readonly Coding VolumeSurface = new Coding
    {
      Code = "121231",
      Display = "Volume Surface",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Series of image instances used as source data for a segmentation
    /// </summary>
    public static readonly Coding SourceSeriesForSegmentation = new Coding
    {
      Code = "121232",
      Display = "Source series for segmentation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image instances used as source data for a segmentation
    /// </summary>
    public static readonly Coding SourceImageForSegmentation = new Coding
    {
      Code = "121233",
      Display = "Source image for segmentation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates the location of the area of interest as measured from the nipple of the breast
    /// </summary>
    public static readonly Coding DistanceFromNipple = new Coding
    {
      Code = "121242",
      Display = "Distance from nipple",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates the location of the area of interest as measured from the most direct skin point of the breast
    /// </summary>
    public static readonly Coding DistanceFromSkin = new Coding
    {
      Code = "121243",
      Display = "Distance from skin",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates the location of the area of interest as measured from the chest wall
    /// </summary>
    public static readonly Coding DistanceFromChestWall = new Coding
    {
      Code = "121244",
      Display = "Distance from chest wall",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient exposure to ionizing radiation (procedure)
    /// </summary>
    public static readonly Coding PatientExposureToIonizingRadiation = new Coding
    {
      Code = "121290",
      Display = "Patient exposure to ionizing radiation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The act of communicating actionable findings to a responsible receiver
    /// </summary>
    public static readonly Coding ResultsCommunicated = new Coding
    {
      Code = "121291",
      Display = "Results communicated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference is to a Doppler waveform acquired simultaneously with an image
    /// </summary>
    public static readonly Coding SimultaneousDoppler = new Coding
    {
      Code = "121301",
      Display = "Simultaneous Doppler",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference is to a Hemodynamic waveform acquired simultaneously with an image
    /// </summary>
    public static readonly Coding SimultaneousHemodynamic = new Coding
    {
      Code = "121302",
      Display = "Simultaneous Hemodynamic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference is to a ECG waveform acquired simultaneously with an image
    /// </summary>
    public static readonly Coding SimultaneousECG = new Coding
    {
      Code = "121303",
      Display = "Simultaneous ECG",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference is to a voice narrative recording acquired simultaneously with an image
    /// </summary>
    public static readonly Coding SimultaneousVoiceNarrative = new Coding
    {
      Code = "121304",
      Display = "Simultaneous Voice Narrative",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A waveform representing chest expansion and contraction due to respiratory activity, measured simultaneously with the acquisition of this Image
    /// </summary>
    public static readonly Coding SimultaneousRespiratoryWaveform = new Coding
    {
      Code = "121305",
      Display = "Simultaneous Respiratory Waveform",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Arterial pulse waveform obtained simultaneously with acquisition of a referencing image
    /// </summary>
    public static readonly Coding SimultaneousArterialPulseWaveform = new Coding
    {
      Code = "121306",
      Display = "Simultaneous Arterial Pulse Waveform",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Phonocardiographic waveform obtained simultaneously with acquisition of a referencing image
    /// </summary>
    public static readonly Coding SimultaneousPhonocardiographicWaveform = new Coding
    {
      Code = "121307",
      Display = "Simultaneous Phonocardiographic Waveform",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image providing an anatomical reference on the patient under examination, for the purpose of defining the location of the ensuing imaging
    /// </summary>
    public static readonly Coding Localizer = new Coding
    {
      Code = "121311",
      Display = "Localizer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image providing an anatomical reference on the patient under examination, for the purpose of planning or documenting a biopsy
    /// </summary>
    public static readonly Coding BiopsyLocalizer = new Coding
    {
      Code = "121312",
      Display = "Biopsy localizer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image providing a partial view of the target anatomy, when the target anatomy is too large for a single image
    /// </summary>
    public static readonly Coding OtherPartialViews = new Coding
    {
      Code = "121313",
      Display = "Other partial views",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image providing a view of the target anatomy in a different imaging plane, typically from a near perpendicular angle
    /// </summary>
    public static readonly Coding OtherImageOfBiplanePair = new Coding
    {
      Code = "121314",
      Display = "Other image of biplane pair",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image providing a view of the target anatomy in a different imaging plane, typically with a small angular difference
    /// </summary>
    public static readonly Coding OtherImageOfStereoscopicPair = new Coding
    {
      Code = "121315",
      Display = "Other image of stereoscopic pair",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image related to a non-image information object
    /// </summary>
    public static readonly Coding ImagesRelatedToStandaloneObject = new Coding
    {
      Code = "121316",
      Display = "Images related to standalone object",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image where signals are identified and separated according to their frequencies; e.g. to identify individual chemicals, or individual nuclei in a chemical compound
    /// </summary>
    public static readonly Coding Spectroscopy = new Coding
    {
      Code = "121317",
      Display = "Spectroscopy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// MR spectroscopy data acquired to correct the phase of the diagnostic data for the phase signal of the Water
    /// </summary>
    public static readonly Coding SpectroscopyDataForWaterPhaseCorrection = new Coding
    {
      Code = "121318",
      Display = "Spectroscopy Data for Water Phase Correction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image that has not already been lossy compressed that is used as the source for creation of a lossy compressed image
    /// </summary>
    public static readonly Coding UncompressedPredecessor = new Coding
    {
      Code = "121320",
      Display = "Uncompressed predecessor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image used as the mask for an image processing operation, such as subtraction
    /// </summary>
    public static readonly Coding MaskImageForImageProcessingOperation = new Coding
    {
      Code = "121321",
      Display = "Mask image for image processing operation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image used as the source for an image processing operation
    /// </summary>
    public static readonly Coding SourceImageForImageProcessingOperation = new Coding
    {
      Code = "121322",
      Display = "Source image for image processing operation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Series used as the source for an image processing operation
    /// </summary>
    public static readonly Coding SourceSeriesForImageProcessingOperation = new Coding
    {
      Code = "121323",
      Display = "Source series for image processing operation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image used as the source for a derived or compressed image
    /// </summary>
    public static readonly Coding SourceImage = new Coding
    {
      Code = "121324",
      Display = "Source Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image encoded with a lossy compression transfer syntax
    /// </summary>
    public static readonly Coding LossyCompressedImage = new Coding
    {
      Code = "121325",
      Display = "Lossy compressed image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// SOP Instance encoded with a different SOP Class but otherwise equivalent data
    /// </summary>
    public static readonly Coding AlternateSOPClassInstance = new Coding
    {
      Code = "121326",
      Display = "Alternate SOP Class instance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Full fidelity image, uncompressed or lossless compressed
    /// </summary>
    public static readonly Coding FullFidelityImage = new Coding
    {
      Code = "121327",
      Display = "Full fidelity image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image encoded with a different photometric interpretation
    /// </summary>
    public static readonly Coding AlternatePhotometricInterpretationImage = new Coding
    {
      Code = "121328",
      Display = "Alternate Photometric Interpretation image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image used as a source for a montage (stitched) image
    /// </summary>
    public static readonly Coding SourceImageForMontage = new Coding
    {
      Code = "121329",
      Display = "Source image for montage",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image that has previously been lossy compressed that is used as the source for creation of another lossy compressed image
    /// </summary>
    public static readonly Coding LossyCompressedPredecessor = new Coding
    {
      Code = "121330",
      Display = "Lossy compressed predecessor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// HL7 Document Architecture (CDA) Document that contains clinical content equivalent to the referencing Instance
    /// </summary>
    public static readonly Coding EquivalentCDADocument = new Coding
    {
      Code = "121331",
      Display = "Equivalent CDA Document",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instance that contains a displayable complete rendering of the referencing Instance
    /// </summary>
    public static readonly Coding CompleteRenderingForPresentation = new Coding
    {
      Code = "121332",
      Display = "Complete Rendering for Presentation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instance that contains a displayable partial rendering of the referencing Instance
    /// </summary>
    public static readonly Coding PartialRenderingForPresentation = new Coding
    {
      Code = "121333",
      Display = "Partial Rendering for Presentation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instance that contains a displayable complete rendering of the referencing Instance, plus additional content such as inline rendering of referenced images
    /// </summary>
    public static readonly Coding ExtendedRenderingForPresentation = new Coding
    {
      Code = "121334",
      Display = "Extended Rendering for Presentation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Document whose content has been wholly or partially transformed to create the referencing document
    /// </summary>
    public static readonly Coding SourceDocument = new Coding
    {
      Code = "121335",
      Display = "Source Document",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image showing structural anatomic features
    /// </summary>
    public static readonly Coding AnatomicImage = new Coding
    {
      Code = "121338",
      Display = "Anatomic image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image showing physical or chemical activity
    /// </summary>
    public static readonly Coding FunctionalImage = new Coding
    {
      Code = "121339",
      Display = "Functional image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image providing the same view of the target anatomy acquired using only a specific imaging wavelength, frequency or energy
    /// </summary>
    public static readonly Coding SpectralFilteredImage = new Coding
    {
      Code = "121340",
      Display = "Spectral filtered image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image providing an anatomical reference on the patient under examination, for the purpose of documenting the location of device such as a diagnostic or therapeutic catheter
    /// </summary>
    public static readonly Coding DeviceLocalizer = new Coding
    {
      Code = "121341",
      Display = "Device localizer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image providing a graphic view of the distribution of radiation dose
    /// </summary>
    public static readonly Coding DoseImage = new Coding
    {
      Code = "121342",
      Display = "Dose Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The referenced image is the source of spatially-related frames from which the referencing 3D volume data set was derived
    /// </summary>
    public static readonly Coding AcquisitionFramesCorrespondingToVolume = new Coding
    {
      Code = "121346",
      Display = "Acquisition frames corresponding to volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 3D Volume containing the spatially-related frames in the referencing instance
    /// </summary>
    public static readonly Coding VolumeCorrespondingToSpatiallyRelatedAcquisitionFrames = new Coding
    {
      Code = "121347",
      Display = "Volume corresponding to spatially-related acquisition frames",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instance acquired prior to the referencing instance in a set of consecutively acquired instances
    /// </summary>
    public static readonly Coding TemporalPredecessor = new Coding
    {
      Code = "121348",
      Display = "Temporal Predecessor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instance acquired subsequent to the referencing instance in a set of consecutively acquired instances
    /// </summary>
    public static readonly Coding TemporalSuccessor = new Coding
    {
      Code = "121349",
      Display = "Temporal Successor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image of the same target area at lower resolution acquired in the same acquisition process
    /// </summary>
    public static readonly Coding SameAcquisitionAtLowerResolution = new Coding
    {
      Code = "121350",
      Display = "Same acquisition at lower resolution",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image of the same target area at higher resolution acquired in the same acquisition process
    /// </summary>
    public static readonly Coding SameAcquisitionAtHigherResolution = new Coding
    {
      Code = "121351",
      Display = "Same acquisition at higher resolution",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image of the same target area at different focal depth (Z-plane) acquired in the same acquisition process
    /// </summary>
    public static readonly Coding SameAcquisitionAtDifferentFocalDepth = new Coding
    {
      Code = "121352",
      Display = "Same acquisition at different focal depth",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image of the same target area at different spectral band acquired in the same acquisition process
    /// </summary>
    public static readonly Coding SameAcquisitionAtDifferentSpectralBand = new Coding
    {
      Code = "121353",
      Display = "Same acquisition at different spectral band",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image specifically targeting the container label
    /// </summary>
    public static readonly Coding ImagedContainerLabel = new Coding
    {
      Code = "121354",
      Display = "Imaged container label",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Source image from which FOR PRESENTATION images were created
    /// </summary>
    public static readonly Coding ForProcessingPredecessor = new Coding
    {
      Code = "121358",
      Display = "For Processing predecessor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The reference is to a predecessor report that has been replaced by the current report
    /// </summary>
    public static readonly Coding ReplacedReport = new Coding
    {
      Code = "121360",
      Display = "Replaced report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The reference is to a predecessor report to which the current report provides and addendum
    /// </summary>
    public static readonly Coding AddendedReport = new Coding
    {
      Code = "121361",
      Display = "Addended report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A report that precedes the final report and may contain only limited information; it may be time sensitive, and it is not expected to contain all the reportable findings
    /// </summary>
    public static readonly Coding PreliminaryReport = new Coding
    {
      Code = "121362",
      Display = "Preliminary report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A report that is not complete
    /// </summary>
    public static readonly Coding PartialReport = new Coding
    {
      Code = "121363",
      Display = "Partial report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The dose object created was calculated by summation of existing, previously calculated, RT Dose instances
    /// </summary>
    public static readonly Coding ComposedFromPriorDoses = new Coding
    {
      Code = "121370",
      Display = "Composed from prior doses",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The dose object created was calculated by summation of existing, previously calculated, RT Dose instances and dose newly calculated by the application. The newly calculated dose may or may not exist as an independent object
    /// </summary>
    public static readonly Coding ComposedFromPriorDosesAndCurrentPlan = new Coding
    {
      Code = "121371",
      Display = "Composed from prior doses and current plan",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// RT Dose Instances used as source for calculated dose
    /// </summary>
    public static readonly Coding SourceDoseForComposingCurrentDose = new Coding
    {
      Code = "121372",
      Display = "Source dose for composing current dose",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Concentration of the chemically or physically interesting (active) ingredient of a drug or contrast agent as delivered in product form from the manufacturer, typically in mg/ml
    /// </summary>
    public static readonly Coding ActiveIngredientUndilutedConcentration = new Coding
    {
      Code = "121380",
      Display = "Active Ingredient Undiluted Concentration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// X-Ray absorption of the active ingredient of a contrast agent ingredient is greater than the absorption of water (tissue)
    /// </summary>
    public static readonly Coding ContrastBolusIngredientOpaque = new Coding
    {
      Code = "121381",
      Display = "Contrast/Bolus Ingredient Opaque",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of units of substance administered to a patient; e.g. tablets
    /// </summary>
    public static readonly Coding QuantityAdministered = new Coding
    {
      Code = "121382",
      Display = "Quantity administered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mass of substance administered to a patient
    /// </summary>
    public static readonly Coding MassAdministered = new Coding
    {
      Code = "121383",
      Display = "Mass administered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of deriving or calculating a measured value; e.g. mean, or maximum of set
    /// </summary>
    public static readonly Coding Derivation = new Coding
    {
      Code = "121401",
      Display = "Derivation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assessment of a measurement relative to a normal range of values; may be considered subtype of term (G-C0F2, SRT, "has interpretation")
    /// </summary>
    public static readonly Coding Normality = new Coding
    {
      Code = "121402",
      Display = "Normality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Significance of a measurement
    /// </summary>
    public static readonly Coding LevelOfSignificance = new Coding
    {
      Code = "121403",
      Display = "Level of Significance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Status of selection of a measurement for further processing or use
    /// </summary>
    public static readonly Coding SelectionStatus = new Coding
    {
      Code = "121404",
      Display = "Selection Status",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Description of a population of measurements
    /// </summary>
    public static readonly Coding PopulationDescription = new Coding
    {
      Code = "121405",
      Display = "Population description",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Bibliographic or clinical reference for a Description of a population of measurements
    /// </summary>
    public static readonly Coding ReferenceAuthority = new Coding
    {
      Code = "121406",
      Display = "Reference Authority",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Description of a normal range of values for a measurement concept
    /// </summary>
    public static readonly Coding NormalRangeDescription = new Coding
    {
      Code = "121407",
      Display = "Normal Range description",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Bibliographic or clinical reference for a Description of a normal range of values
    /// </summary>
    public static readonly Coding NormalRangeAuthority = new Coding
    {
      Code = "121408",
      Display = "Normal Range Authority",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Observation value selected by user for further processing or use, or as most representative
    /// </summary>
    public static readonly Coding UserChosenValue = new Coding
    {
      Code = "121410",
      Display = "User chosen value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Observation value is the recently obtained, and has been selected for further processing or use
    /// </summary>
    public static readonly Coding MostRecentValueChosen = new Coding
    {
      Code = "121411",
      Display = "Most recent value chosen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Observation value is the mean of several measurements, and has been selected for further processing or use
    /// </summary>
    public static readonly Coding MeanValueChosen = new Coding
    {
      Code = "121412",
      Display = "Mean value chosen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Standard deviation of a measurement in a reference population
    /// </summary>
    public static readonly Coding StandardDeviationOfPopulation = new Coding
    {
      Code = "121414",
      Display = "Standard deviation of population",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Percentile Ranking of an observation value with respect a reference population
    /// </summary>
    public static readonly Coding PercentileRankingOfMeasurement = new Coding
    {
      Code = "121415",
      Display = "Percentile Ranking of measurement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Z-score of an observation value with respect a reference population, expressed as the dimensionless quantity (x-m) /s, where (x-m) is the deviation of the observation value (x) from the population mean (m), and s is the standard deviation of the population
    /// </summary>
    public static readonly Coding ZScoreOfMeasurement = new Coding
    {
      Code = "121416",
      Display = "Z-Score of measurement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 2 Sigma deviation of a measurement in a reference population
    /// </summary>
    public static readonly Coding VAL2SigmaDeviationOfPopulation = new Coding
    {
      Code = "121417",
      Display = "2 Sigma deviation of population",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Formula used to compute a derived measurement
    /// </summary>
    public static readonly Coding Equation = new Coding
    {
      Code = "121420",
      Display = "Equation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Bibliographic reference to a formula used to compute a derived measurement; reference may be to a specific equation in a journal article
    /// </summary>
    public static readonly Coding EquationCitation = new Coding
    {
      Code = "121421",
      Display = "Equation Citation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Bibliographic reference to a Table of Values used to look up a derived measurement
    /// </summary>
    public static readonly Coding TableOfValuesCitation = new Coding
    {
      Code = "121422",
      Display = "Table of Values Citation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Bibliographic reference to a method used to compute a derived measurement
    /// </summary>
    public static readonly Coding MethodCitation = new Coding
    {
      Code = "121423",
      Display = "Method Citation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Table of Values used to look up a derived measurement
    /// </summary>
    public static readonly Coding TableOfValues = new Coding
    {
      Code = "121424",
      Display = "Table of Values",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Factor (divisor or multiplicand) for normalizing a measurement; e.g. body surface area used for normalizing hemodynamic measurements
    /// </summary>
    public static readonly Coding Index = new Coding
    {
      Code = "121425",
      Display = "Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identified issue about a state or process that has the potential to require intervention or management
    /// </summary>
    public static readonly Coding Concern = new Coding
    {
      Code = "121430",
      Display = "Concern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// DateTime concern noted (noted by whom is determined by context of use)
    /// </summary>
    public static readonly Coding DateTimeConcernNoted = new Coding
    {
      Code = "121431",
      Display = "DateTime Concern Noted",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// DateTime the concern was resolved
    /// </summary>
    public static readonly Coding DateTimeConcernResolved = new Coding
    {
      Code = "121432",
      Display = "DateTime Concern Resolved",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// DateTime the problem was resolved
    /// </summary>
    public static readonly Coding DateTimeProblemResolved = new Coding
    {
      Code = "121433",
      Display = "DateTime Problem Resolved",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Place at which healthcare services may be provided
    /// </summary>
    public static readonly Coding ServiceDeliveryLocation = new Coding
    {
      Code = "121434",
      Display = "Service Delivery Location",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identification of a healthcare provider who performed a healthcare service; may be either a person or an organization
    /// </summary>
    public static readonly Coding ServicePerformer = new Coding
    {
      Code = "121435",
      Display = "Service Performer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Type or identifier of a medical device used on, in, or by a patient
    /// </summary>
    public static readonly Coding MedicalDeviceUsed = new Coding
    {
      Code = "121436",
      Display = "Medical Device Used",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Process of placing patient in the anticipated treatment position, including specification and location of positioning aids, and other treatment delivery accessories
    /// </summary>
    public static readonly Coding RTPatientSetup = new Coding
    {
      Code = "121701",
      Display = "RT Patient Setup",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition of patient positioning information prior to treatment delivery, using single-plane megavoltage imaging
    /// </summary>
    public static readonly Coding RTPatientPositionAcquisitionSinglePlaneMV = new Coding
    {
      Code = "121702",
      Display = "RT Patient Position Acquisition, single plane MV",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition of patient positioning information prior to treatment delivery, using dual-plane megavoltage imaging
    /// </summary>
    public static readonly Coding RTPatientPositionAcquisitionDualPlaneMV = new Coding
    {
      Code = "121703",
      Display = "RT Patient Position Acquisition, dual plane MV",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition of patient positioning information prior to treatment delivery, using single-plane kilovoltage imaging
    /// </summary>
    public static readonly Coding RTPatientPositionAcquisitionSinglePlaneKV = new Coding
    {
      Code = "121704",
      Display = "RT Patient Position Acquisition, single plane kV",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition of patient positioning information prior to treatment delivery, using dual-plane kilovoltage imaging
    /// </summary>
    public static readonly Coding RTPatientPositionAcquisitionDualPlaneKV = new Coding
    {
      Code = "121705",
      Display = "RT Patient Position Acquisition, dual plane kV",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition of patient positioning information prior to treatment delivery, using dual-plane combination kilovoltage and megavoltage imaging
    /// </summary>
    public static readonly Coding RTPatientPositionAcquisitionDualPlaneKVMV = new Coding
    {
      Code = "121706",
      Display = "RT Patient Position Acquisition, dual plane kV/MV",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition of patient positioning information prior to treatment delivery, using kilovoltage CT imaging
    /// </summary>
    public static readonly Coding RTPatientPositionAcquisitionCTKV = new Coding
    {
      Code = "121707",
      Display = "RT Patient Position Acquisition, CT kV",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition of patient positioning information prior to treatment delivery, using megavoltage CT imaging
    /// </summary>
    public static readonly Coding RTPatientPositionAcquisitionCTMV = new Coding
    {
      Code = "121708",
      Display = "RT Patient Position Acquisition, CT MV",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition of patient positioning information prior to treatment delivery, using optical imaging
    /// </summary>
    public static readonly Coding RTPatientPositionAcquisitionOptical = new Coding
    {
      Code = "121709",
      Display = "RT Patient Position Acquisition, Optical",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition of patient positioning information prior to treatment delivery, using ultrasound imaging
    /// </summary>
    public static readonly Coding RTPatientPositionAcquisitionUltrasound = new Coding
    {
      Code = "121710",
      Display = "RT Patient Position Acquisition, Ultrasound",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition of patient positioning information prior to treatment delivery, using spatial fiducials
    /// </summary>
    public static readonly Coding RTPatientPositionAcquisitionSpatialFiducials = new Coding
    {
      Code = "121711",
      Display = "RT Patient Position Acquisition, Spatial Fiducials",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration of intended and actual patient position prior to treatment delivery, using single-plane images
    /// </summary>
    public static readonly Coding RTPatientPositionRegistrationSinglePlane = new Coding
    {
      Code = "121712",
      Display = "RT Patient Position Registration, single plane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration of intended and actual patient position prior to treatment delivery, using dual-plane images
    /// </summary>
    public static readonly Coding RTPatientPositionRegistrationDualPlane = new Coding
    {
      Code = "121713",
      Display = "RT Patient Position Registration, dual plane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration of intended and actual patient position prior to treatment delivery, using 3D CT images and an unspecified registration approach
    /// </summary>
    public static readonly Coding RTPatientPositionRegistration3DCTGeneral = new Coding
    {
      Code = "121714",
      Display = "RT Patient Position Registration, 3D CT general",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration of intended and actual patient position prior to treatment delivery, using 3D CT images and a marker-based registration approach
    /// </summary>
    public static readonly Coding RTPatientPositionRegistration3DCTMarkerBased = new Coding
    {
      Code = "121715",
      Display = "RT Patient Position Registration, 3D CT marker-based",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration of intended and actual patient position prior to treatment delivery, using 3D CT images and a volume-based registration approach
    /// </summary>
    public static readonly Coding RTPatientPositionRegistration3DCTVolumeBased = new Coding
    {
      Code = "121716",
      Display = "RT Patient Position Registration, 3D CT volume-based",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration of intended and actual patient position prior to treatment delivery, using 3D verification images and 2D reference images
    /// </summary>
    public static readonly Coding RTPatientPositionRegistration3DOn2DReference = new Coding
    {
      Code = "121717",
      Display = "RT Patient Position Registration, 3D on 2D reference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration of intended and actual patient position prior to treatment delivery, using 2D verification images and 3D reference images
    /// </summary>
    public static readonly Coding RTPatientPositionRegistration2DOn3DReference = new Coding
    {
      Code = "121718",
      Display = "RT Patient Position Registration, 2D on 3D reference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration of intended and actual patient position prior to treatment delivery, using optical images
    /// </summary>
    public static readonly Coding RTPatientPositionRegistrationOptical = new Coding
    {
      Code = "121719",
      Display = "RT Patient Position Registration, Optical",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration of intended and actual patient position prior to treatment delivery, using ultrasound images
    /// </summary>
    public static readonly Coding RTPatientPositionRegistrationUltrasound = new Coding
    {
      Code = "121720",
      Display = "RT Patient Position Registration, Ultrasound",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration of intended and actual patient position prior to treatment delivery, using spatial fiducials
    /// </summary>
    public static readonly Coding RTPatientPositionRegistrationSpatialFiducials = new Coding
    {
      Code = "121721",
      Display = "RT Patient Position Registration, Spatial Fiducials",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Adjustment of patient position such that the patient is correctly positioned for treatment
    /// </summary>
    public static readonly Coding RTPatientPositionAdjustment = new Coding
    {
      Code = "121722",
      Display = "RT Patient Position Adjustment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Review of patient positioning information in the process of delivering a treatment session
    /// </summary>
    public static readonly Coding RTPatientPositionInTreatmentSessionReview = new Coding
    {
      Code = "121723",
      Display = "RT Patient Position In-treatment-session Review",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Simulated radiotherapy treatment delivery using verification integral to the Treatment Delivery System
    /// </summary>
    public static readonly Coding RTTreatmentSimulationWithInternalVerification = new Coding
    {
      Code = "121724",
      Display = "RT Treatment Simulation with Internal Verification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Simulated radiotherapy treatment delivery using verification by a external Machine Parameter Verifier
    /// </summary>
    public static readonly Coding RTTreatmentSimulationWithExternalVerification = new Coding
    {
      Code = "121725",
      Display = "RT Treatment Simulation with External Verification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiotherapy treatment delivery using verification integral to the Treatment Delivery System
    /// </summary>
    public static readonly Coding RTTreatmentWithInternalVerification = new Coding
    {
      Code = "121726",
      Display = "RT Treatment with Internal Verification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiotherapy treatment delivery using verification by an external Machine Parameter Verifier
    /// </summary>
    public static readonly Coding RTTreatmentWithExternalVerification = new Coding
    {
      Code = "121727",
      Display = "RT Treatment with External Verification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Quality assurance of a radiotherapy treatment delivery using verification integral to the Treatment Delivery System
    /// </summary>
    public static readonly Coding RTTreatmentQAWithInternalVerification = new Coding
    {
      Code = "121728",
      Display = "RT Treatment QA with Internal Verification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Quality assurance of a radiotherapy treatment delivery using verification by an external Machine Parameter Verifier
    /// </summary>
    public static readonly Coding RTTreatmentQAWithExternalVerification = new Coding
    {
      Code = "121729",
      Display = "RT Treatment QA with External Verification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Quality assurance of a Treatment Delivery Device
    /// </summary>
    public static readonly Coding RTMachineQA = new Coding
    {
      Code = "121730",
      Display = "RT Machine QA",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Perform Quality Assurance on an RT Plan by evaluating dosimetric content of the current RT Plan
    /// </summary>
    public static readonly Coding RTTreatmentQAByRTPlanDoseCheck = new Coding
    {
      Code = "121731",
      Display = "RT Treatment QA by RT Plan Dose Check",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Perform Quality Assurance on an RT Plan by comparing the content of previously quality-assessed RT Plans with the current RT Plan
    /// </summary>
    public static readonly Coding RTTreatmentQAByRTPlanDifferenceCheck = new Coding
    {
      Code = "121732",
      Display = "RT Treatment QA by RT Plan Difference Check",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Perform Quality Assurance on an RT Ion Plan by evaluating dosimetric content of the current RT Ion Plan
    /// </summary>
    public static readonly Coding RTTreatmentQAByRTIonPlanDoseCheck = new Coding
    {
      Code = "121733",
      Display = "RT Treatment QA by RT Ion Plan Dose Check",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Perform Quality Assurance on an RT Ion Plan by comparing the content of previously quality-assessed RT Ion Plans with the current RT Ion Plan
    /// </summary>
    public static readonly Coding RTTreatmentQAWithRTIonPlanDifferenceCheck = new Coding
    {
      Code = "121734",
      Display = "RT Treatment QA with RT Ion Plan Difference Check",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates whether the treatment to be delivered is a complete fraction or a continuation of previous incompletely treated fraction
    /// </summary>
    public static readonly Coding TreatmentDeliveryType = new Coding
    {
      Code = "121740",
      Display = "Treatment Delivery Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient called to procedure room
    /// </summary>
    public static readonly Coding PatientCalledToProcedureRoom = new Coding
    {
      Code = "122001",
      Display = "Patient called to procedure room",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient admitted to procedure room
    /// </summary>
    public static readonly Coding PatientAdmittedToProcedureRoom = new Coding
    {
      Code = "122002",
      Display = "Patient admitted to procedure room",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient given pre-procedure instruction
    /// </summary>
    public static readonly Coding PatientGivenPreProcedureInstruction = new Coding
    {
      Code = "122003",
      Display = "Patient given pre-procedure instruction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient informed consent given
    /// </summary>
    public static readonly Coding PatientInformedConsentGiven = new Coding
    {
      Code = "122004",
      Display = "Patient informed consent given",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient advance directive given
    /// </summary>
    public static readonly Coding PatientAdvanceDirectiveGiven = new Coding
    {
      Code = "122005",
      Display = "Patient advance directive given",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nil Per Os (NPO) status confirmed
    /// </summary>
    public static readonly Coding NilPerOsNPOStatusConfirmed = new Coding
    {
      Code = "122006",
      Display = "Nil Per Os (NPO) status confirmed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient assisted to table
    /// </summary>
    public static readonly Coding PatientAssistedToTable = new Coding
    {
      Code = "122007",
      Display = "Patient assisted to table",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient prepped and draped
    /// </summary>
    public static readonly Coding PatientPreppedAndDraped = new Coding
    {
      Code = "122008",
      Display = "Patient prepped and draped",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient connected to continuous monitoring
    /// </summary>
    public static readonly Coding PatientConnectedToContinuousMonitoring = new Coding
    {
      Code = "122009",
      Display = "Patient connected to continuous monitoring",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient transferred to holding area
    /// </summary>
    public static readonly Coding PatientTransferredToHoldingArea = new Coding
    {
      Code = "122010",
      Display = "Patient transferred to holding area",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient transferred to surgery
    /// </summary>
    public static readonly Coding PatientTransferredToSurgery = new Coding
    {
      Code = "122011",
      Display = "Patient transferred to surgery",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient transferred to CCU
    /// </summary>
    public static readonly Coding PatientTransferredToCCU = new Coding
    {
      Code = "122012",
      Display = "Patient transferred to CCU",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient disoriented
    /// </summary>
    public static readonly Coding PatientDisoriented = new Coding
    {
      Code = "122020",
      Display = "Patient disoriented",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient reports nausea
    /// </summary>
    public static readonly Coding PatientReportsNausea = new Coding
    {
      Code = "122021",
      Display = "Patient reports nausea",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient reports discomfort
    /// </summary>
    public static readonly Coding PatientReportsDiscomfort = new Coding
    {
      Code = "122022",
      Display = "Patient reports discomfort",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient reports chest pain
    /// </summary>
    public static readonly Coding PatientReportsChestPain = new Coding
    {
      Code = "122023",
      Display = "Patient reports chest pain",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient reports no pain
    /// </summary>
    public static readonly Coding PatientReportsNoPain = new Coding
    {
      Code = "122024",
      Display = "Patient reports no pain",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient alert
    /// </summary>
    public static readonly Coding PatientAlert = new Coding
    {
      Code = "122025",
      Display = "Patient alert",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient restless
    /// </summary>
    public static readonly Coding PatientRestless = new Coding
    {
      Code = "122026",
      Display = "Patient restless",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient sedated
    /// </summary>
    public static readonly Coding PatientSedated = new Coding
    {
      Code = "122027",
      Display = "Patient sedated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient asleep
    /// </summary>
    public static readonly Coding PatientAsleep = new Coding
    {
      Code = "122028",
      Display = "Patient asleep",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient unresponsive
    /// </summary>
    public static readonly Coding PatientUnresponsive = new Coding
    {
      Code = "122029",
      Display = "Patient unresponsive",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient has respiratory difficulty
    /// </summary>
    public static readonly Coding PatientHasRespiratoryDifficulty = new Coding
    {
      Code = "122030",
      Display = "Patient has respiratory difficulty",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient coughed
    /// </summary>
    public static readonly Coding PatientCoughed = new Coding
    {
      Code = "122031",
      Display = "Patient coughed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient disconnected from continuous monitoring
    /// </summary>
    public static readonly Coding PatientDisconnectedFromContinuousMonitoring = new Coding
    {
      Code = "122032",
      Display = "Patient disconnected from continuous monitoring",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hemostasis achieved
    /// </summary>
    public static readonly Coding HemostasisAchieved = new Coding
    {
      Code = "122033",
      Display = "Hemostasis achieved",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hemostasis not achieved - oozing
    /// </summary>
    public static readonly Coding HemostasisNotAchievedOozing = new Coding
    {
      Code = "122034",
      Display = "Hemostasis not achieved - oozing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hemostasis not achieved - actively bleeding
    /// </summary>
    public static readonly Coding HemostasisNotAchievedActivelyBleeding = new Coding
    {
      Code = "122035",
      Display = "Hemostasis not achieved - actively bleeding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient given post-procedure instruction
    /// </summary>
    public static readonly Coding PatientGivenPostProcedureInstruction = new Coding
    {
      Code = "122036",
      Display = "Patient given post-procedure instruction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient discharged from department or laboratory
    /// </summary>
    public static readonly Coding PatientDischargedFromDepartment = new Coding
    {
      Code = "122037",
      Display = "Patient discharged from department",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient pronounced dead
    /// </summary>
    public static readonly Coding PatientPronouncedDead = new Coding
    {
      Code = "122038",
      Display = "Patient pronounced dead",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient transferred to morgue
    /// </summary>
    public static readonly Coding PatientTransferredToMorgue = new Coding
    {
      Code = "122039",
      Display = "Patient transferred to morgue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identified personnel or staff arrived in procedure room
    /// </summary>
    public static readonly Coding PersonnelArrived = new Coding
    {
      Code = "122041",
      Display = "Personnel Arrived",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identified personnel or staff departed procedure room
    /// </summary>
    public static readonly Coding PersonnelDeparted = new Coding
    {
      Code = "122042",
      Display = "Personnel Departed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Page sent to identified personnel or staff
    /// </summary>
    public static readonly Coding PageSentTo = new Coding
    {
      Code = "122043",
      Display = "Page Sent To",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Consultation with identified personnel or staff
    /// </summary>
    public static readonly Coding ConsultationWith = new Coding
    {
      Code = "122044",
      Display = "Consultation With",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Office of identified personnel or staff was called
    /// </summary>
    public static readonly Coding OfficeCalled = new Coding
    {
      Code = "122045",
      Display = "Office called",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment brought to procedure room
    /// </summary>
    public static readonly Coding EquipmentBroughtToProcedureRoom = new Coding
    {
      Code = "122047",
      Display = "Equipment brought to procedure room",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment ready for procedure
    /// </summary>
    public static readonly Coding EquipmentReady = new Coding
    {
      Code = "122048",
      Display = "Equipment ready",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment removed from procedure room
    /// </summary>
    public static readonly Coding EquipmentRemoved = new Coding
    {
      Code = "122049",
      Display = "Equipment removed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Device for obtaining biopsy sample
    /// </summary>
    public static readonly Coding Bioptome = new Coding
    {
      Code = "122052",
      Display = "Bioptome",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Valvular Intervention
    /// </summary>
    public static readonly Coding ValvularIntervention = new Coding
    {
      Code = "122053",
      Display = "Valvular Intervention",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Aortic Intervention
    /// </summary>
    public static readonly Coding AorticIntervention = new Coding
    {
      Code = "122054",
      Display = "Aortic Intervention",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Septal Defect Intervention
    /// </summary>
    public static readonly Coding SeptalDefectIntervention = new Coding
    {
      Code = "122055",
      Display = "Septal Defect Intervention",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vascular Intervention
    /// </summary>
    public static readonly Coding VascularIntervention = new Coding
    {
      Code = "122056",
      Display = "Vascular Intervention",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Myocardial biopsy
    /// </summary>
    public static readonly Coding MyocardialBiopsy = new Coding
    {
      Code = "122057",
      Display = "Myocardial biopsy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Arterial conduit angiography
    /// </summary>
    public static readonly Coding ArterialConduitAngiography = new Coding
    {
      Code = "122058",
      Display = "Arterial conduit angiography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Single plane Angiography
    /// </summary>
    public static readonly Coding SinglePlaneAngiography = new Coding
    {
      Code = "122059",
      Display = "Single plane Angiography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Bi-plane Angiography
    /// </summary>
    public static readonly Coding BiPlaneAngiography = new Coding
    {
      Code = "122060",
      Display = "Bi-plane Angiography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Percutaneous Coronary Intervention
    /// </summary>
    public static readonly Coding PercutaneousCoronaryIntervention = new Coding
    {
      Code = "122061",
      Display = "Percutaneous Coronary Intervention",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Log of events occurring prior to the current procedure
    /// </summary>
    public static readonly Coding PreProcedureLog = new Coding
    {
      Code = "122072",
      Display = "Pre-procedure log",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Analysis or measurements for current procedure (purpose of reference to evidence document)
    /// </summary>
    public static readonly Coding CurrentProcedureEvidence = new Coding
    {
      Code = "122073",
      Display = "Current procedure evidence",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Prior report for current patient
    /// </summary>
    public static readonly Coding PriorReportForCurrentPatient = new Coding
    {
      Code = "122075",
      Display = "Prior report for current patient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Consumable taken from inventory
    /// </summary>
    public static readonly Coding ConsumableTakenFromInventory = new Coding
    {
      Code = "122076",
      Display = "Consumable taken from inventory",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Consumable returned to inventory
    /// </summary>
    public static readonly Coding ConsumableReturnedToInventory = new Coding
    {
      Code = "122077",
      Display = "Consumable returned to inventory",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of consumable whose remaining content has been disposed
    /// </summary>
    public static readonly Coding RemainingConsumableDisposed = new Coding
    {
      Code = "122078",
      Display = "Remaining consumable disposed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Consumable determined to be unusable
    /// </summary>
    public static readonly Coding ConsumableUnusable = new Coding
    {
      Code = "122079",
      Display = "Consumable unusable",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Drug whose administration has started
    /// </summary>
    public static readonly Coding DrugStart = new Coding
    {
      Code = "122081",
      Display = "Drug start",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Drug whose administration has ended
    /// </summary>
    public static readonly Coding DrugEnd = new Coding
    {
      Code = "122082",
      Display = "Drug end",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Drug administered as part of procedure
    /// </summary>
    public static readonly Coding DrugAdministered = new Coding
    {
      Code = "122083",
      Display = "Drug administered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Contrast agent whose administration has started
    /// </summary>
    public static readonly Coding ContrastStart = new Coding
    {
      Code = "122084",
      Display = "Contrast start",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Contrast agent whose administration has ended
    /// </summary>
    public static readonly Coding ContrastEnd = new Coding
    {
      Code = "122085",
      Display = "Contrast end",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Contrast agent administered
    /// </summary>
    public static readonly Coding ContrastAdministered = new Coding
    {
      Code = "122086",
      Display = "Contrast administered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Infusate whose administration has started
    /// </summary>
    public static readonly Coding InfusateStart = new Coding
    {
      Code = "122087",
      Display = "Infusate start",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Identifier of Infusate whose administration has ended
    /// </summary>
    public static readonly Coding InfusateEnd = new Coding
    {
      Code = "122088",
      Display = "Infusate end",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Action of a device traversing a vascular lesion
    /// </summary>
    public static readonly Coding DeviceCrossedLesion = new Coding
    {
      Code = "122089",
      Display = "Device crossed lesion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Action of a clinical professional performed on a patient for therapeutic purpose
    /// </summary>
    public static readonly Coding InterventionAction = new Coding
    {
      Code = "122090",
      Display = "Intervention Action",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume of Drug, Contrast agent, or Infusate administered
    /// </summary>
    public static readonly Coding VolumeAdministered = new Coding
    {
      Code = "122091",
      Display = "Volume administered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Undiluted dose of Drug, Contrast agent, or Infusate administered
    /// </summary>
    public static readonly Coding UndilutedDoseAdministered = new Coding
    {
      Code = "122092",
      Display = "Undiluted dose administered",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Concentration of Drug, Contrast agent, or Infusate administered
    /// </summary>
    public static readonly Coding Concentration = new Coding
    {
      Code = "122093",
      Display = "Concentration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Rate of Drug, Contrast agent, or Infusate administration
    /// </summary>
    public static readonly Coding RateOfAdministration = new Coding
    {
      Code = "122094",
      Display = "Rate of administration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Duration of Drug, Contrast agent, or Infusate administration
    /// </summary>
    public static readonly Coding DurationOfAdministration = new Coding
    {
      Code = "122095",
      Display = "Duration of administration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume of Drug, Contrast agent, or Infusate unadministered or discarded
    /// </summary>
    public static readonly Coding VolumeUnadministeredOrDiscarded = new Coding
    {
      Code = "122096",
      Display = "Volume unadministered or discarded",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Numeric parameter of Curvature of Catheter
    /// </summary>
    public static readonly Coding CatheterCurve = new Coding
    {
      Code = "122097",
      Display = "Catheter Curve",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Transmit Frequency
    /// </summary>
    public static readonly Coding TransmitFrequency = new Coding
    {
      Code = "122098",
      Display = "Transmit Frequency",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measured change of patient electrocardiographic ST level relative to baseline measurement
    /// </summary>
    public static readonly Coding STChangeFromBaseline = new Coding
    {
      Code = "122099",
      Display = "ST change from baseline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Anatomic term modifier indicating aneurysm on cited vessel is the subject of the finding
    /// </summary>
    public static readonly Coding AneurysmOnCitedVessel = new Coding
    {
      Code = "122101",
      Display = "Aneurysm on cited vessel",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Anatomic term modifier indicating proximal section of graft to cited vessel is the subject of the finding
    /// </summary>
    public static readonly Coding GraftToCitedSegmentProximalSection = new Coding
    {
      Code = "122102",
      Display = "Graft to cited segment, proximal section",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Anatomic term modifier indicating mid section of graft to cited vessel is the subject of the finding
    /// </summary>
    public static readonly Coding GraftToCitedSegmentMidSection = new Coding
    {
      Code = "122103",
      Display = "Graft to cited segment, mid section",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Anatomic term modifier indicating distal section of graft to cited vessel is the subject of the finding
    /// </summary>
    public static readonly Coding GraftToCitedSegmentDistalSection = new Coding
    {
      Code = "122104",
      Display = "Graft to cited segment, distal section",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// DateTime of Intervention
    /// </summary>
    public static readonly Coding DateTimeOfIntervention = new Coding
    {
      Code = "122105",
      Display = "DateTime of Intervention",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Duration of Intervention
    /// </summary>
    public static readonly Coding DurationOfIntervention = new Coding
    {
      Code = "122106",
      Display = "Duration of Intervention",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assessment of perfusion across a coronary lesion measured prior to any interventional procedure
    /// </summary>
    public static readonly Coding BaselineTIMIFlow = new Coding
    {
      Code = "122109",
      Display = "Baseline TIMI Flow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Assessment of perfusion across a coronary lesion measured after an interventional procedure
    /// </summary>
    public static readonly Coding PostInterventionTIMIFlow = new Coding
    {
      Code = "122110",
      Display = "Post-Intervention TIMI Flow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indication that device is the primary (first and/or most significant) device used for interventional therapy of a particular pathology; e.g. lesion
    /// </summary>
    public static readonly Coding PrimaryInterventionDevice = new Coding
    {
      Code = "122111",
      Display = "Primary Intervention Device",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Normal Myocardium
    /// </summary>
    public static readonly Coding NormalMyocardium = new Coding
    {
      Code = "122112",
      Display = "Normal Myocardium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Sacrred Myocardial
    /// </summary>
    public static readonly Coding SacrredMyocardial = new Coding
    {
      Code = "122113",
      Display = "Sacrred Myocardial",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Thinning Myocardium
    /// </summary>
    public static readonly Coding ThinningMyocardium = new Coding
    {
      Code = "122114",
      Display = "Thinning Myocardium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hemodynamics Report
    /// </summary>
    public static readonly Coding HemodynamicsReport = new Coding
    {
      Code = "122120",
      Display = "Hemodynamics Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Atrial pressure measurements, report section
    /// </summary>
    public static readonly Coding AtrialPressureMeasurements = new Coding
    {
      Code = "122121",
      Display = "Atrial pressure measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ventricular pressure measurements, report section
    /// </summary>
    public static readonly Coding VentricularPressureMeasurements = new Coding
    {
      Code = "122122",
      Display = "Ventricular pressure measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Gradient assessment, report section
    /// </summary>
    public static readonly Coding GradientAssessment = new Coding
    {
      Code = "122123",
      Display = "Gradient assessment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Blood velocity measurements, report section
    /// </summary>
    public static readonly Coding BloodVelocityMeasurements = new Coding
    {
      Code = "122124",
      Display = "Blood velocity measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Blood lab measurements, report section
    /// </summary>
    public static readonly Coding BloodLabMeasurements = new Coding
    {
      Code = "122125",
      Display = "Blood lab measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Derived Hemodynamic Measurements, report section
    /// </summary>
    public static readonly Coding DerivedHemodynamicMeasurements = new Coding
    {
      Code = "122126",
      Display = "Derived Hemodynamic Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Clinical Context, report section
    /// </summary>
    public static readonly Coding ClinicalContext = new Coding
    {
      Code = "122127",
      Display = "Clinical Context",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location from which the patient was transferred
    /// </summary>
    public static readonly Coding PatientTransferredFrom = new Coding
    {
      Code = "122128",
      Display = "Patient Transferred From",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indication that the procedure includes a percutaneous coronary intervention
    /// </summary>
    public static readonly Coding PCIDuringThisProcedure = new Coding
    {
      Code = "122129",
      Display = "PCI during this procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiation dose times area of exposure
    /// </summary>
    public static readonly Coding DoseAreaProduct = new Coding
    {
      Code = "122130",
      Display = "Dose Area Product",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Finding of probability and/or severity of thrombus
    /// </summary>
    public static readonly Coding DegreeOfThrombus = new Coding
    {
      Code = "122131",
      Display = "Degree of Thrombus",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Severity of Calcification, property of lesion
    /// </summary>
    public static readonly Coding SeverityOfCalcification = new Coding
    {
      Code = "122132",
      Display = "Severity of Calcification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lesion Morphology; form and/or structural properties of lesion
    /// </summary>
    public static readonly Coding LesionMorphology = new Coding
    {
      Code = "122133",
      Display = "Lesion Morphology",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vessel Morphology; form and/or structural properties of vessel
    /// </summary>
    public static readonly Coding VesselMorphology = new Coding
    {
      Code = "122134",
      Display = "Vessel Morphology",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Technique (device or procedure) of support for patient circulatory system; hemodynamic support
    /// </summary>
    public static readonly Coding CirculatorySupport = new Coding
    {
      Code = "122138",
      Display = "Circulatory Support",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reason for Exam
    /// </summary>
    public static readonly Coding ReasonForExam = new Coding
    {
      Code = "122139",
      Display = "Reason for Exam",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indication that the current exam data has been compared with prior exam data
    /// </summary>
    public static readonly Coding ComparisonWithPriorExamDone = new Coding
    {
      Code = "122140",
      Display = "Comparison with Prior Exam Done",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Electrocardiographic electrode placement technique
    /// </summary>
    public static readonly Coding ElectrodePlacement = new Coding
    {
      Code = "122141",
      Display = "Electrode Placement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition Device Type
    /// </summary>
    public static readonly Coding AcquisitionDeviceType = new Coding
    {
      Code = "122142",
      Display = "Acquisition Device Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Acquisition Device ID
    /// </summary>
    public static readonly Coding AcquisitionDeviceID = new Coding
    {
      Code = "122143",
      Display = "Acquisition Device ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Quantitative Analysis, report section
    /// </summary>
    public static readonly Coding QuantitativeAnalysis = new Coding
    {
      Code = "122144",
      Display = "Quantitative Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Qualitative Analysis, report section
    /// </summary>
    public static readonly Coding QualitativeAnalysis = new Coding
    {
      Code = "122145",
      Display = "Qualitative Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The date and time on which a procedure was performed on a patient
    /// </summary>
    public static readonly Coding ProcedureDateTime = new Coding
    {
      Code = "122146",
      Display = "Procedure DateTime",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Clinical Interpretation, report section
    /// </summary>
    public static readonly Coding ClinicalInterpretation = new Coding
    {
      Code = "122147",
      Display = "Clinical Interpretation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ECG Lead Identifier
    /// </summary>
    public static readonly Coding LeadID = new Coding
    {
      Code = "122148",
      Display = "Lead ID",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Beat Number; ordinal of cardiac cycle within an acquisition
    /// </summary>
    public static readonly Coding BeatNumber = new Coding
    {
      Code = "122149",
      Display = "Beat Number",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Complex coded semantic unit, consisting of several coded components
    /// </summary>
    public static readonly Coding CompoundStatement = new Coding
    {
      Code = "122150",
      Display = "Compound Statement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Trend (temporal progression) of a clinical condition, finding, or disease
    /// </summary>
    public static readonly Coding Trend = new Coding
    {
      Code = "122151",
      Display = "Trend",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Coded semantic unit
    /// </summary>
    public static readonly Coding Statement = new Coding
    {
      Code = "122152",
      Display = "Statement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Coded modifier for a semantic unit
    /// </summary>
    public static readonly Coding StatementModifier = new Coding
    {
      Code = "122153",
      Display = "Statement Modifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Conjunctive term between semantic units
    /// </summary>
    public static readonly Coding ConjunctiveTerm = new Coding
    {
      Code = "122154",
      Display = "Conjunctive Term",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Probability
    /// </summary>
    public static readonly Coding Probability = new Coding
    {
      Code = "122157",
      Display = "Probability",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ECG Global Measurements, report section
    /// </summary>
    public static readonly Coding ECGGlobalMeasurements = new Coding
    {
      Code = "122158",
      Display = "ECG Global Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ECG Lead Measurements, report section
    /// </summary>
    public static readonly Coding ECGLeadMeasurements = new Coding
    {
      Code = "122159",
      Display = "ECG Lead Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Derived cross-sectional area of a vessel or anatomic feature, other than a cardiac valve
    /// </summary>
    public static readonly Coding DerivedAreaNonValve = new Coding
    {
      Code = "122160",
      Display = "Derived Area, Non-Valve",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Rate of blood flow through Pulmonary artery
    /// </summary>
    public static readonly Coding PulmonaryFlow = new Coding
    {
      Code = "122161",
      Display = "Pulmonary Flow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Rate of blood flow through the aorta
    /// </summary>
    public static readonly Coding SystemicFlow = new Coding
    {
      Code = "122162",
      Display = "Systemic Flow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// DateTime of patient discharge from hospital admission
    /// </summary>
    public static readonly Coding DischargeDateTime = new Coding
    {
      Code = "122163",
      Display = "Discharge DateTime",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indication that a Coronary Artery Bypass operation was performed during the current hospital admission
    /// </summary>
    public static readonly Coding CoronaryArteryBypassDuringThisAdmission = new Coding
    {
      Code = "122164",
      Display = "Coronary Artery Bypass During This Admission",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Date of Death
    /// </summary>
    public static readonly Coding DateOfDeath = new Coding
    {
      Code = "122165",
      Display = "Date of Death",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indication that the patient died during the current hospital admission
    /// </summary>
    public static readonly Coding DeathDuringThisAdmission = new Coding
    {
      Code = "122166",
      Display = "Death During This Admission",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indication that the patient died during the current Catheterization procedure
    /// </summary>
    public static readonly Coding DeathDuringCatheterization = new Coding
    {
      Code = "122167",
      Display = "Death During Catheterization",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Finding of type of Myocardial Infarction
    /// </summary>
    public static readonly Coding TypeOfMyocardialInfarction = new Coding
    {
      Code = "122170",
      Display = "Type of Myocardial Infarction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Finding of Coronary lesion with greater than 50% stenosis
    /// </summary>
    public static readonly Coding CoronaryLesionGreaterThanEquals50PercentStenosis = new Coding
    {
      Code = "122171",
      Display = "Coronary lesion > = 50% stenosis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Finding of Acute Myocardial Infarction Presence as indication for interventional procedure
    /// </summary>
    public static readonly Coding AcuteMIPresent = new Coding
    {
      Code = "122172",
      Display = "Acute MI Present",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// DateTime of first determination of elevated ECG ST segment, as indication of Myocardial Infarction
    /// </summary>
    public static readonly Coding STElevationOnsetDateTime = new Coding
    {
      Code = "122173",
      Display = "ST Elevation Onset DateTime",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of lesion interventions attempted during current procedure
    /// </summary>
    public static readonly Coding NumberOfLesionInterventionsAttempted = new Coding
    {
      Code = "122175",
      Display = "Number of lesion interventions attempted",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of lesion interventions successful during current procedure, where the residual post intervention stenosis is less than or equal to 50% of the arterial luminal diameter, TIMI Flow is 3 and the minimal decrease in stenosis was 20%
    /// </summary>
    public static readonly Coding NumberOfLesionInterventionsSuccessful = new Coding
    {
      Code = "122176",
      Display = "Number of lesion interventions successful",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Overall success of interventional procedure
    /// </summary>
    public static readonly Coding ProcedureResult = new Coding
    {
      Code = "122177",
      Display = "Procedure Result",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lesion Intervention Information, report section
    /// </summary>
    public static readonly Coding LesionInterventionInformation = new Coding
    {
      Code = "122178",
      Display = "Lesion Intervention Information",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indication that Myocardial Infarction occurred during current procedure
    /// </summary>
    public static readonly Coding PeriProceduralMIOccurred = new Coding
    {
      Code = "122179",
      Display = "Peri-procedural MI occurred",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Creatine Kinase-MB value at baseline (start of procedure)
    /// </summary>
    public static readonly Coding CKMBBaseline = new Coding
    {
      Code = "122180",
      Display = "CK-MB baseline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Creatine Kinase-MB highest value measured during procedure
    /// </summary>
    public static readonly Coding CKMBPeak = new Coding
    {
      Code = "122181",
      Display = "CK-MB peak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time interval between ECG R-wave peaks in subsequent cardiac cycles
    /// </summary>
    public static readonly Coding RRInterval = new Coding
    {
      Code = "122182",
      Display = "R-R interval",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Blood temperature
    /// </summary>
    public static readonly Coding BloodTemperature = new Coding
    {
      Code = "122183",
      Display = "Blood temperature",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Blood Oxygen content
    /// </summary>
    public static readonly Coding BloodOxygenContent = new Coding
    {
      Code = "122185",
      Display = "Blood Oxygen content",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Blood Carbon dioxide saturation
    /// </summary>
    public static readonly Coding BloodCarbonDioxideSaturation = new Coding
    {
      Code = "122187",
      Display = "Blood Carbon dioxide saturation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pulmonary Arterial Content (FCpa)
    /// </summary>
    public static readonly Coding PulmonaryArterialContentFCpa = new Coding
    {
      Code = "122188",
      Display = "Pulmonary Arterial Content (FCpa)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pulmonary Venous Content (FCpv)
    /// </summary>
    public static readonly Coding PulmonaryVenousContentFCpv = new Coding
    {
      Code = "122189",
      Display = "Pulmonary Venous Content (FCpv)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Max dp/dt/P
    /// </summary>
    public static readonly Coding MaxDpDtP = new Coding
    {
      Code = "122190",
      Display = "Max dp/dt/P",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ventricular End Diastolic pressure
    /// </summary>
    public static readonly Coding VentricularEndDiastolicPressure = new Coding
    {
      Code = "122191",
      Display = "Ventricular End Diastolic pressure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Elapsed time from injection of an indicator bolus until it is observed at another location
    /// </summary>
    public static readonly Coding IndicatorAppearanceTime = new Coding
    {
      Code = "122192",
      Display = "Indicator appearance time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Maximum pressure acceleration
    /// </summary>
    public static readonly Coding MaximumPressureAcceleration = new Coding
    {
      Code = "122193",
      Display = "Maximum pressure acceleration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ventricular Systolic blood pressure
    /// </summary>
    public static readonly Coding VentricularSystolicBloodPressure = new Coding
    {
      Code = "122194",
      Display = "Ventricular Systolic blood pressure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pulse Strength; palpable strength of systolic flow
    /// </summary>
    public static readonly Coding PulseStrength = new Coding
    {
      Code = "122195",
      Display = "Pulse Strength",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The secondary peak pressure in the atrium during atrial contraction
    /// </summary>
    public static readonly Coding CWavePressure = new Coding
    {
      Code = "122196",
      Display = "C wave pressure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Gradient pressure, average
    /// </summary>
    public static readonly Coding GradientPressureAverage = new Coding
    {
      Code = "122197",
      Display = "Gradient pressure, average",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Gradient pressure, peak
    /// </summary>
    public static readonly Coding GradientPressurePeak = new Coding
    {
      Code = "122198",
      Display = "Gradient pressure, peak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pressure at dp/dt max
    /// </summary>
    public static readonly Coding PressureAtDpDtMax = new Coding
    {
      Code = "122199",
      Display = "Pressure at dp/dt max",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Diastolic blood velocity, mean
    /// </summary>
    public static readonly Coding DiastolicBloodVelocityMean = new Coding
    {
      Code = "122201",
      Display = "Diastolic blood velocity, mean",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Diastolic blood velocity, peak
    /// </summary>
    public static readonly Coding DiastolicBloodVelocityPeak = new Coding
    {
      Code = "122202",
      Display = "Diastolic blood velocity, peak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Systolic blood velocity, mean
    /// </summary>
    public static readonly Coding SystolicBloodVelocityMean = new Coding
    {
      Code = "122203",
      Display = "Systolic blood velocity, mean",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Systolic blood velocity, peak
    /// </summary>
    public static readonly Coding SystolicBloodVelocityPeak = new Coding
    {
      Code = "122204",
      Display = "Systolic blood velocity, peak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Blood velocity, mean
    /// </summary>
    public static readonly Coding BloodVelocityMean = new Coding
    {
      Code = "122205",
      Display = "Blood velocity, mean",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Blood velocity, minimum
    /// </summary>
    public static readonly Coding BloodVelocityMinimum = new Coding
    {
      Code = "122206",
      Display = "Blood velocity, minimum",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Blood velocity, peak
    /// </summary>
    public static readonly Coding BloodVelocityPeak = new Coding
    {
      Code = "122207",
      Display = "Blood velocity, peak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Venous or atrial pressure minimum during ventricular systole, after A-wave
    /// </summary>
    public static readonly Coding XDescentPressure = new Coding
    {
      Code = "122208",
      Display = "x-descent pressure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Venous or atrial pressure minimum when tricuspid valve opens during diastole, after V-wave
    /// </summary>
    public static readonly Coding YDescentPressure = new Coding
    {
      Code = "122209",
      Display = "y-descent pressure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Atrial pressure upon closure of tricuspid and mitral valves
    /// </summary>
    public static readonly Coding ZPointPressure = new Coding
    {
      Code = "122210",
      Display = "z-point pressure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Left Ventricular ejection time
    /// </summary>
    public static readonly Coding LeftVentricularEjectionTime = new Coding
    {
      Code = "122211",
      Display = "Left Ventricular ejection time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Left Ventricular filling time
    /// </summary>
    public static readonly Coding LeftVentricularFillingTime = new Coding
    {
      Code = "122212",
      Display = "Left Ventricular filling time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Right Ventricular ejection time
    /// </summary>
    public static readonly Coding RightVentricularEjectionTime = new Coding
    {
      Code = "122213",
      Display = "Right Ventricular ejection time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Right Ventricular filling time
    /// </summary>
    public static readonly Coding RightVentricularFillingTime = new Coding
    {
      Code = "122214",
      Display = "Right Ventricular filling time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total Pulmonary Resistance
    /// </summary>
    public static readonly Coding TotalPulmonaryResistance = new Coding
    {
      Code = "122215",
      Display = "Total Pulmonary Resistance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total Vascular Resistance
    /// </summary>
    public static readonly Coding TotalVascularResistance = new Coding
    {
      Code = "122216",
      Display = "Total Vascular Resistance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Coronary Flow reserve
    /// </summary>
    public static readonly Coding CoronaryFlowReserve = new Coding
    {
      Code = "122217",
      Display = "Coronary Flow reserve",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Diastolic/Systolic velocity ratio
    /// </summary>
    public static readonly Coding DiastolicSystolicVelocityRatio = new Coding
    {
      Code = "122218",
      Display = "Diastolic/Systolic velocity ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hyperemic ratio
    /// </summary>
    public static readonly Coding HyperemicRatio = new Coding
    {
      Code = "122219",
      Display = "Hyperemic ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hemodynamic Resistance Index
    /// </summary>
    public static readonly Coding HemodynamicResistanceIndex = new Coding
    {
      Code = "122220",
      Display = "Hemodynamic Resistance Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Thorax diameter, sagittal
    /// </summary>
    public static readonly Coding ThoraxDiameterSagittal = new Coding
    {
      Code = "122221",
      Display = "Thorax diameter, sagittal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Environmental characteristics in the procedure room
    /// </summary>
    public static readonly Coding ProcedureEnvironmentalCharacteristics = new Coding
    {
      Code = "122222",
      Display = "Procedure Environmental Characteristics",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Oxygen concentration in the procedure room
    /// </summary>
    public static readonly Coding RoomOxygenConcentration = new Coding
    {
      Code = "122223",
      Display = "Room oxygen concentration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Temperature in the procedure room
    /// </summary>
    public static readonly Coding RoomTemperature = new Coding
    {
      Code = "122224",
      Display = "Room temperature",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Barometric pressure in the procedure room
    /// </summary>
    public static readonly Coding RoomBarometricPressure = new Coding
    {
      Code = "122225",
      Display = "Room Barometric pressure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Left to Right Flow
    /// </summary>
    public static readonly Coding LeftToRightFlow = new Coding
    {
      Code = "122227",
      Display = "Left to Right Flow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Right to Left Flow
    /// </summary>
    public static readonly Coding RightToLeftFlow = new Coding
    {
      Code = "122228",
      Display = "Right to Left Flow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Arteriovenous oxygen content difference
    /// </summary>
    public static readonly Coding ArteriovenousDifference = new Coding
    {
      Code = "122229",
      Display = "Arteriovenous difference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Framingham Study 10 Year CHD Risk
    /// </summary>
    public static readonly Coding VAL10YearCHDRisk = new Coding
    {
      Code = "122230",
      Display = "10 Year CHD Risk",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Framingham Study Comparative Average10 Year CHD Risk
    /// </summary>
    public static readonly Coding ComparativeAverage10YearCHDRisk = new Coding
    {
      Code = "122231",
      Display = "Comparative Average10 Year CHD Risk",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Framingham Study Comparative Low10 Year CHD Risk
    /// </summary>
    public static readonly Coding ComparativeLow10YearCHDRisk = new Coding
    {
      Code = "122232",
      Display = "Comparative Low10 Year CHD Risk",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Framingham Study LDL Cholesterol Score Sheet for Men
    /// </summary>
    public static readonly Coding LDLCholesterolScoreSheetForMen = new Coding
    {
      Code = "122233",
      Display = "LDL Cholesterol Score Sheet for Men",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Framingham Study LDL Cholesterol Score Sheet for Women
    /// </summary>
    public static readonly Coding LDLCholesterolScoreSheetForWomen = new Coding
    {
      Code = "122234",
      Display = "LDL Cholesterol Score Sheet for Women",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Framingham Study Total Cholesterol Score Sheet for Men
    /// </summary>
    public static readonly Coding TotalCholesterolScoreSheetForMen = new Coding
    {
      Code = "122235",
      Display = "Total Cholesterol Score Sheet for Men",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Framingham Study Total Cholesterol Score Sheet for Women
    /// </summary>
    public static readonly Coding TotalCholesterolScoreSheetForWomen = new Coding
    {
      Code = "122236",
      Display = "Total Cholesterol Score Sheet for Women",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Corrected Sinus Node Recovery Time
    /// </summary>
    public static readonly Coding CorrectedSinusNodeRecoveryTime = new Coding
    {
      Code = "122237",
      Display = "Corrected Sinus Node Recovery Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Max volume normalized to 50mmHg pulse pressure
    /// </summary>
    public static readonly Coding MaxVolumeNormalizedTo50mmHgPulsePressure = new Coding
    {
      Code = "122238",
      Display = "Max volume normalized to 50mmHg pulse pressure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Oxygen Consumption
    /// </summary>
    public static readonly Coding OxygenConsumption = new Coding
    {
      Code = "122239",
      Display = "Oxygen Consumption",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient height and weight: BSA = 3.207*WT[g]^(0.7285-0.0188 log (WT[g])) *HT[cm] ^ 0.3 [Boyd E, The growth of the surface area of the human body. Minneapolis: University of Minnesota Press, 1935, eq. (36) ]
    /// </summary>
    public static readonly Coding BSAEquals3207AsteriskWTPower0728500188LogWTAsteriskHTPower03 = new Coding
    {
      Code = "122240",
      Display = "BSA = 3.207*WT^(0.7285-0.0188 log (WT)) *HT^0.3",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient height and weight: BSA = 0.007184* WT[kg] ^ 0.425*HT[cm] ^ 0.725 [Dubois and Dubois, Arch Int Med 1916 17:863-71]
    /// </summary>
    public static readonly Coding BSAEquals0007184AsteriskWTPower0425AsteriskHTPower0725 = new Coding
    {
      Code = "122241",
      Display = "BSA = 0.007184*WT^ 0.425*HT^0.725",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient height and weight: BSA = 0.0235* WT[kg] ^0.51456*HT[cm]^ 0.42246 [Gehan EA, George SL, 'Estimation of human body surface area from height and weight', Cancer Chemother Rep 1970 54:225-35]
    /// </summary>
    public static readonly Coding BSAEquals00235AsteriskWTPower051456AsteriskHTPower042246 = new Coding
    {
      Code = "122242",
      Display = "BSA = 0.0235*WT^0.51456*HT^ 0.42246",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient height and weight: BSA = 0.024265 * WT[kg] ^ 0.5378 * HT[cm] ^ 0.3964 [Haycock G.B., Schwartz G.J., Wisotsky D.H. 'Geometric method for measuring body surface area: A height weight formula validated in infants, children and adults.' The Journal of Pediatrics 1978 93:1:62-66]
    /// </summary>
    public static readonly Coding BSAEquals0024265AsteriskWTPower05378AsteriskHTPower03964 = new Coding
    {
      Code = "122243",
      Display = "BSA = 0.024265*WT^0.5378*HT^0.3964",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient height and weight: BSA = (HT[m] * WT[kg] / 36) ^ 0.5 [Mosteller, R.D. 'Simplified Calculation of Body Surface Area.' N Engl J Med 1987 Oct 22;317(17):1098]
    /// </summary>
    public static readonly Coding BSAEqualsHTAsteriskWT36Power05 = new Coding
    {
      Code = "122244",
      Display = "BSA = (HT * WT/36) ^0.5",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient weight:BSA = 1321 + 0.3433 * WT[kg] (for pediatrics 3-30 kg) [Current, J.D. 'A Linear Equation For Estimating The Body Surface Area In Infants And Children', The Internet Journal of Anesthesiology. 1998. 2:2]
    /// </summary>
    public static readonly Coding BSAEquals1321Plus03433AsteriskWT = new Coding
    {
      Code = "122245",
      Display = "BSA = 1321+0.3433*WT",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// BSA = 0.0004688 * (1000 * WT) ^ (0.8168 - 0.0154 * log(1000 * WT)) Where (WT is weight in kilogram) Units = m2 Boyd, Edith. The Growth of the Surface Area of the Human Body(originally published in 1935 by the University of Minnesota Press), Greenwood Press, Westport, Connecticut, 1975, p. 102.Equation (35)
    /// </summary>
    public static readonly Coding BSAEquals00004688AsteriskWTPower0816800154AsteriskLogWT = new Coding
    {
      Code = "122246",
      Display = "BSA = 0.0004688 * WT ^ (0.8168 - 0.0154 * log(WT))",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equation for estimated oxygen consumption: VO2male = BSA (138.1 - 11.49 * loge(age) + 0.378 * HRf)
    /// </summary>
    public static readonly Coding VO2maleEqualsBSA13811149AsteriskLogeAgePlus0378AsteriskHRf = new Coding
    {
      Code = "122247",
      Display = "VO2male = BSA (138.1 - 11.49 * loge(age) + 0.378 * HRf)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equation for estimated oxygen consumption: VO2female = BSA (138.1 - 17.04 * loge(age) + 0.378 * HRf)
    /// </summary>
    public static readonly Coding VO2femaleEqualsBSA13811704AsteriskLogeAgePlus0378AsteriskHRf = new Coding
    {
      Code = "122248",
      Display = "VO2female = BSA (138.1 - 17.04 * loge(age) + 0.378 * HRf)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equation for estimated oxygen consumption: VO2 = VeSTPD * 10 * (FIO2 - FE02)
    /// </summary>
    public static readonly Coding VO2EqualsVeSTPDAsterisk10AsteriskFIO2FE02 = new Coding
    {
      Code = "122249",
      Display = "VO2 = VeSTPD * 10 * (FIO2 - FE02)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equation for estimated oxygen consumption: VO2 = 152 * BSA
    /// </summary>
    public static readonly Coding VO2Equals152AsteriskBSA = new Coding
    {
      Code = "122250",
      Display = "VO2 = 152 * BSA",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equation for estimated oxygen consumption: VO2 = 175 * BSA
    /// </summary>
    public static readonly Coding VO2Equals175AsteriskBSA = new Coding
    {
      Code = "122251",
      Display = "VO2 = 175 * BSA",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equation for estimated oxygen consumption: VO2 = 176 * BSA
    /// </summary>
    public static readonly Coding VO2Equals176AsteriskBSA = new Coding
    {
      Code = "122252",
      Display = "VO2 = 176 * BSA",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Robertson &amp; Reid Table for estimated oxygen consumption
    /// </summary>
    public static readonly Coding RobertsonAndReidTable = new Coding
    {
      Code = "122253",
      Display = "Robertson & Reid table",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fleisch table for estimated oxygen consumption
    /// </summary>
    public static readonly Coding FleischTable = new Coding
    {
      Code = "122254",
      Display = "Fleisch table",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Boothby table for estimated oxygen consumption
    /// </summary>
    public static readonly Coding BoothbyTable = new Coding
    {
      Code = "122255",
      Display = "Boothby table",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Estimate of Oxygen partial pressure at 50% saturation for premature infants less than 3 days old: P50 = 19.9
    /// </summary>
    public static readonly Coding IfPremAgeLessThan3daysP50Equals199 = new Coding
    {
      Code = "122256",
      Display = "if (prem age< 3days) P50 = 19.9",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Estimate of Oxygen partial pressure at 50% saturation for infants less than 1 day old: P50 = 21.6
    /// </summary>
    public static readonly Coding IfAgeLessThan1dayP50Equals216 = new Coding
    {
      Code = "122257",
      Display = "if (age < 1day) P50 = 21.6",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Estimate of Oxygen partial pressure at 50% saturation for infants less than 30 days old: P50 = 24.6
    /// </summary>
    public static readonly Coding IfAgeLessThan30dayP50Equals246 = new Coding
    {
      Code = "122258",
      Display = "if (age < 30day) P50 = 24.6",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Estimate of Oxygen partial pressure at 50% saturation for patients less than 18 years old: P50 = 27.2
    /// </summary>
    public static readonly Coding IfAgeLessThan18yP50Equals272 = new Coding
    {
      Code = "122259",
      Display = "if (age < 18y) P50 = 27.2",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Estimate of Oxygen partial pressure at 50% saturation for patients less than 40 years old: P50 = 27.4
    /// </summary>
    public static readonly Coding IfAgeLessThan40yP50Equals274 = new Coding
    {
      Code = "122260",
      Display = "if (age < 40y) P50 = 27.4",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Estimate of Oxygen partial pressure at 50% saturation for patients more than 60 years old: P50 = 29.3
    /// </summary>
    public static readonly Coding IfAgeGreaterThan60yP50Equals293 = new Coding
    {
      Code = "122261",
      Display = "if (age > 60y) P50 = 29.3",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Cardiac valve area computed from flow and pressure gradient: Area = Flow / 44.5 * sqrt(Gradient[mmHg]) [Gorlin and Gorlin, Am Heart J, 1951]
    /// </summary>
    public static readonly Coding AreaEqualsFlow445AsteriskSqrtGradientMmHg = new Coding
    {
      Code = "122262",
      Display = "Area = Flow / 44.5 * sqrt(Gradient[mmHg])",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mitral valve area computed from flow and pressure gradient: Mitral valve Area = Flow / 38.0 * sqrt(Gradient[mmHg]) [Gorlin and Gorlin, Am Heart J, 1951]
    /// </summary>
    public static readonly Coding MVAEqualsFlow380AsteriskSqrtGradientMmHg = new Coding
    {
      Code = "122263",
      Display = "MVA = Flow / 38.0 * sqrt(Gradient[mmHg])",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Mass Index computed from weight and height: BMI = Wt/Ht^2
    /// </summary>
    public static readonly Coding BMIEqualsWtHtPower2 = new Coding
    {
      Code = "122265",
      Display = "BMI = Wt / Ht ^ 2",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient height and weight: BSA = 0.007358 * WT[kg] ^ 0.425 * HT[cm] ^ 0.725 (for East Asian adult, aged 15+ years) [Kanai Izumi, Masamitsu Kanai, 'Clinical examination method summary']
    /// </summary>
    public static readonly Coding BSAEquals0007358AsteriskWTPower0425AsteriskHTPower0725 = new Coding
    {
      Code = "122266",
      Display = "BSA = 0.007358 * WT ^ 0.425 * HT ^ 0.725",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient height and weight: BSA = 0.010265 * WT[kg] ^ 0.423 * HT[cm] ^ 0.651 (For East Asian child aged 12-14 years)
    /// </summary>
    public static readonly Coding BSAEquals0010265AsteriskWTPower0423AsteriskHTPower0651 = new Coding
    {
      Code = "122267",
      Display = "BSA = 0.010265 * WT ^ 0.423 * HT ^ 0.651",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient height and weight: BSA = 0.008883* WT[kg] ^ 0.444 * HT[cm] ^ 0.663 (For East Asian child aged 6-11 years)
    /// </summary>
    public static readonly Coding BSAEquals0008883AsteriskWTPower0444AsteriskHTPower0663 = new Coding
    {
      Code = "122268",
      Display = "BSA = 0.008883 * WT ^ 0.444 * HT ^ 0.663",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient height and weight: BSA = 0.038189 * WT[kg] ^ 0.423 * HT[cm] ^ 0.362 (For East Asian child aged 1-5 years)
    /// </summary>
    public static readonly Coding BSAEquals0038189AsteriskWTPower0423AsteriskHTPower0362 = new Coding
    {
      Code = "122269",
      Display = "BSA = 0.038189 * WT ^ 0.423 * HT ^ 0.362",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Body Surface Area computed from patient height and weight: BSA = 0.009568* WT[kg] ^ 0.473 * HT[cm] ^ 0.655 (For East Asian child aged 0-12 months)
    /// </summary>
    public static readonly Coding BSAEquals0009568AsteriskWTPower0473AsteriskHTPower0655 = new Coding
    {
      Code = "122270",
      Display = "BSA = 0.009568 * WT ^ 0.473 * HT ^ 0.655",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Skin Condition Warm
    /// </summary>
    public static readonly Coding SkinConditionWarm = new Coding
    {
      Code = "122271",
      Display = "Skin Condition Warm",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Skin Condition Cool
    /// </summary>
    public static readonly Coding SkinConditionCool = new Coding
    {
      Code = "122272",
      Display = "Skin Condition Cool",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Skin Condition Cold
    /// </summary>
    public static readonly Coding SkinConditionCold = new Coding
    {
      Code = "122273",
      Display = "Skin Condition Cold",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Skin Condition Dry
    /// </summary>
    public static readonly Coding SkinConditionDry = new Coding
    {
      Code = "122274",
      Display = "Skin Condition Dry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Skin Condition Clammy
    /// </summary>
    public static readonly Coding SkinConditionClammy = new Coding
    {
      Code = "122275",
      Display = "Skin Condition Clammy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Skin Condition Diaphoretic
    /// </summary>
    public static readonly Coding SkinConditionDiaphoretic = new Coding
    {
      Code = "122276",
      Display = "Skin Condition Diaphoretic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Skin Condition Flush
    /// </summary>
    public static readonly Coding SkinConditionFlush = new Coding
    {
      Code = "122277",
      Display = "Skin Condition Flush",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Skin Condition Mottled
    /// </summary>
    public static readonly Coding SkinConditionMottled = new Coding
    {
      Code = "122278",
      Display = "Skin Condition Mottled",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Skin Condition Pale
    /// </summary>
    public static readonly Coding SkinConditionPale = new Coding
    {
      Code = "122279",
      Display = "Skin Condition Pale",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Airway unobstructed
    /// </summary>
    public static readonly Coding AirwayUnobstructed = new Coding
    {
      Code = "122281",
      Display = "Airway unobstructed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Airway partially obstructed
    /// </summary>
    public static readonly Coding AirwayPartiallyObstructed = new Coding
    {
      Code = "122282",
      Display = "Airway partially obstructed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Airway severely obstructed
    /// </summary>
    public static readonly Coding AirwaySeverelyObstructed = new Coding
    {
      Code = "122283",
      Display = "Airway severely obstructed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Anatomy could not be visualized for the purpose of evaluation
    /// </summary>
    public static readonly Coding NotVisualized = new Coding
    {
      Code = "122288",
      Display = "Not Visualized",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Quantitative Arteriography Report
    /// </summary>
    public static readonly Coding QuantitativeArteriographyReport = new Coding
    {
      Code = "122291",
      Display = "Quantitative Arteriography Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Quantitative Ventriculography Report
    /// </summary>
    public static readonly Coding QuantitativeVentriculographyReport = new Coding
    {
      Code = "122292",
      Display = "Quantitative Ventriculography Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Guidewire crossing lesion unsuccessful
    /// </summary>
    public static readonly Coding GuidewireCrossingLesionUnsuccessful = new Coding
    {
      Code = "122301",
      Display = "Guidewire crossing lesion unsuccessful",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Guidewire crossing lesion successful
    /// </summary>
    public static readonly Coding GuidewireCrossingLesionSuccessful = new Coding
    {
      Code = "122302",
      Display = "Guidewire crossing lesion successful",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Angioplasty balloon inflated
    /// </summary>
    public static readonly Coding AngioplastyBalloonInflated = new Coding
    {
      Code = "122303",
      Display = "Angioplasty balloon inflated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Angioplasty balloon deflated
    /// </summary>
    public static readonly Coding AngioplastyBalloonDeflated = new Coding
    {
      Code = "122304",
      Display = "Angioplasty balloon deflated",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Device deployed
    /// </summary>
    public static readonly Coding DeviceDeployed = new Coding
    {
      Code = "122305",
      Display = "Device deployed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Stent re-expanded
    /// </summary>
    public static readonly Coding StentReExpanded = new Coding
    {
      Code = "122306",
      Display = "Stent re-expanded",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Object removed
    /// </summary>
    public static readonly Coding ObjectRemoved = new Coding
    {
      Code = "122307",
      Display = "Object removed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiation applied
    /// </summary>
    public static readonly Coding RadiationApplied = new Coding
    {
      Code = "122308",
      Display = "Radiation applied",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiation removed
    /// </summary>
    public static readonly Coding RadiationRemoved = new Coding
    {
      Code = "122309",
      Display = "Radiation removed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Interventional device placement unsuccessful
    /// </summary>
    public static readonly Coding InterventionalDevicePlacementUnsuccessful = new Coding
    {
      Code = "122310",
      Display = "Interventional device placement unsuccessful",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Interventional device placed
    /// </summary>
    public static readonly Coding InterventionalDevicePlaced = new Coding
    {
      Code = "122311",
      Display = "Interventional device placed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Intervention performed
    /// </summary>
    public static readonly Coding InterventionPerformed = new Coding
    {
      Code = "122312",
      Display = "Intervention performed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Interventional device withdrawn
    /// </summary>
    public static readonly Coding InterventionalDeviceWithdrawn = new Coding
    {
      Code = "122313",
      Display = "Interventional device withdrawn",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Catheter Size
    /// </summary>
    public static readonly Coding CatheterSize = new Coding
    {
      Code = "122319",
      Display = "Catheter Size",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Injectate Temperature
    /// </summary>
    public static readonly Coding InjectateTemperature = new Coding
    {
      Code = "122320",
      Display = "Injectate Temperature",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Injectate Volume
    /// </summary>
    public static readonly Coding InjectateVolume = new Coding
    {
      Code = "122321",
      Display = "Injectate Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Factor by which a measured or calculated value is multiplied to obtain the estimated real-world value
    /// </summary>
    public static readonly Coding CalibrationFactor = new Coding
    {
      Code = "122322",
      Display = "Calibration Factor",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Intravascular Ultrasound Report
    /// </summary>
    public static readonly Coding IVUSReport = new Coding
    {
      Code = "122325",
      Display = "IVUS Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// External Elastic Membrane (EEM) diameter measured through the center point of the vessel. Center point of the vessel is defined as the center of gravity of the EEM area. The EEM is a discrete interface at the border between the media and the adventitia
    /// </summary>
    public static readonly Coding EEMDiameter = new Coding
    {
      Code = "122330",
      Display = "EEM Diameter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The distance from intimal leading edge to the external elastic membrane along any line passing through the luminal center, which is defined as the center of gravity of the lumen area
    /// </summary>
    public static readonly Coding PlaquePlusMediaThickness = new Coding
    {
      Code = "122331",
      Display = "Plaque Plus Media Thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Planimetered perimeter of the lumen
    /// </summary>
    public static readonly Coding LumenPerimeter = new Coding
    {
      Code = "122332",
      Display = "Lumen Perimeter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vessel area measured at the External Elastic Membrane (EEM), a discrete interface at the border between the media and the adventitia
    /// </summary>
    public static readonly Coding EEMCrossSectionalArea = new Coding
    {
      Code = "122333",
      Display = "EEM Cross-Sectional Area",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Area within the EEM occupied by atheroma, regardless of lumen compromise. Plaque plus Media Area = EEM cross-sectional area - vessel lumen cross-sectional area
    /// </summary>
    public static readonly Coding PlaquePlusMediaCrossSectionalArea = new Coding
    {
      Code = "122334",
      Display = "Plaque plus Media Cross-Sectional Area",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement of in-stent restenosis. In-Stent Intimal Area = Stent cross-sectional area - vessel lumen cross-sectional area
    /// </summary>
    public static readonly Coding InStentNeointimalCrossSectionalArea = new Coding
    {
      Code = "122335",
      Display = "In-Stent Neointimal Cross-Sectional Area",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Longitudinal extent of the Vascular Volume Measurement. This is the distance from the distal edge to the proximal edge of the Volume measurement
    /// </summary>
    public static readonly Coding VascularVolumeMeasurementLength = new Coding
    {
      Code = "122336",
      Display = "Vascular Volume measurement length",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Longitudinal distance from the closest edge of a fiducial feature or reference location to the start of the vascular measurement. This value will be a positive if the measurement is distal to the fiducial feature or reference location, or negative if the measurement is proximal to the fiducial feature or reference location
    /// </summary>
    public static readonly Coding RelativePosition = new Coding
    {
      Code = "122337",
      Display = "Relative position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// In-Stent Neointimal Volume / Stent Volume
    /// </summary>
    public static readonly Coding StentVolumeObstruction = new Coding
    {
      Code = "122339",
      Display = "Stent Volume Obstruction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference, normally anatomical, which is used for locating the position of a measurement
    /// </summary>
    public static readonly Coding FiducialFeature = new Coding
    {
      Code = "122340",
      Display = "Fiducial feature",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Longitudinal calcium length measurement
    /// </summary>
    public static readonly Coding CalciumLength = new Coding
    {
      Code = "122341",
      Display = "Calcium Length",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement of vessel lumen eccentricity. Lumen Eccentricity Index = (maximum vessel lumen diameter - minimum vessel lumen diameter) / maximum vessel lumen diameter. Lumen diameters are measured through the center point of the lumen, which is defined as the center of gravity of the lumen area
    /// </summary>
    public static readonly Coding LumenEccentricityIndex = new Coding
    {
      Code = "122343",
      Display = "Lumen Eccentricity Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Plaque plus Media Eccentricity Index = (maximum Plaque plus media thickness - minimum Plaque plus media thickness) / maximum Plaque plus media thickness
    /// </summary>
    public static readonly Coding PlaquePlusMediaEccentricityIndex = new Coding
    {
      Code = "122344",
      Display = "Plaque plus Media Eccentricity Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement of increase or decrease in EEM area that occurs during the development of atherosclerosis. Remodeling Index = Lesion EEM area / reference EEM area
    /// </summary>
    public static readonly Coding RemodelingIndex = new Coding
    {
      Code = "122345",
      Display = "Remodeling Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement of stent circularity. Stent Symmetry Index = (maximum stent diameter - minimum stent diameter) / maximum stent diameter
    /// </summary>
    public static readonly Coding StentSymmetryIndex = new Coding
    {
      Code = "122346",
      Display = "Stent Symmetry Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement of stent area relative to the reference lumen area. Stent Expansion Index = Minimum stent area / reference vessel lumen cross-sectional area
    /// </summary>
    public static readonly Coding StentExpansionIndex = new Coding
    {
      Code = "122347",
      Display = "Stent Expansion Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement of vessel lumen eccentricity. Lumen Shape Index = (2p * sqrt(Vessel lumen cross-sectional area / p) / Lumen Perimeter) 2 Reference: Tobis &amp; Yock, "Intravascular Ultrasound Imaging", Chapter 7
    /// </summary>
    public static readonly Coding LumenShapeIndex = new Coding
    {
      Code = "122348",
      Display = "Lumen Shape Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lumen diameter ratio = minimum vessel lumen diameter / maximum vessel lumen diameter, measured at the same cross section in the vessel. Lumen diameters are measured through the center point of the lumen, which is defined as the center of gravity of the lumen area
    /// </summary>
    public static readonly Coding LumenDiameterRatio = new Coding
    {
      Code = "122350",
      Display = "Lumen Diameter Ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Stent diameter ratio = Minimum stent diameter / Maximum stent diameter, measured at the same cross section in the vessel. Stent diameters are measured through the center point of the stent, which is defined as the center of gravity of the stent area
    /// </summary>
    public static readonly Coding StentDiameterRatio = new Coding
    {
      Code = "122351",
      Display = "Stent Diameter Ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// EEM diameter ratio = minimum EEM diameter / maximum EEM diameter. Measured at the same cross section in the vessel
    /// </summary>
    public static readonly Coding EEMDiameterRatio = new Coding
    {
      Code = "122352",
      Display = "EEM Diameter Ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fractional area within the External Elastic Membrane (EEM) occupied by atheroma. Plaque Burden = (EEM area - vessel lumen cross-sectional area) / EEM area
    /// </summary>
    public static readonly Coding PlaqueBurden = new Coding
    {
      Code = "122354",
      Display = "Plaque Burden",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Angular measurement of a Calcium deposit with the apex located at the center of the lumen, which is defined as the center of gravity of the lumen area
    /// </summary>
    public static readonly Coding ArcOfCalcium = new Coding
    {
      Code = "122355",
      Display = "Arc of Calcium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Plaque characterized by low density or echogenicity
    /// </summary>
    public static readonly Coding SoftPlaque = new Coding
    {
      Code = "122356",
      Display = "Soft plaque",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Abnormal thickening of the intima within the stented segment
    /// </summary>
    public static readonly Coding InStentNeointima = new Coding
    {
      Code = "122357",
      Display = "In-Stent Neointima",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lumen surrounded by all three layers of the vessel-intima, media, and adventitia
    /// </summary>
    public static readonly Coding TrueLumen = new Coding
    {
      Code = "122360",
      Display = "True Lumen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A channel, usually parallel to the true lumen, which does not communicate with the true lumen over a portion of its length
    /// </summary>
    public static readonly Coding FalseLumen = new Coding
    {
      Code = "122361",
      Display = "False Lumen",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Plaque ulceration with a tear detected in a fibrous cap
    /// </summary>
    public static readonly Coding PlaqueRupture = new Coding
    {
      Code = "122363",
      Display = "Plaque Rupture",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Length of gap between two consecutive stents
    /// </summary>
    public static readonly Coding StentGap = new Coding
    {
      Code = "122364",
      Display = "Stent Gap",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Worst stenosis - the stenosis with the smallest lumen size within a vessel segment
    /// </summary>
    public static readonly Coding T1Worst = new Coding
    {
      Code = "122367",
      Display = "T-1 Worst",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 2nd most severe stenosis within a vessel segment
    /// </summary>
    public static readonly Coding T2Secondary = new Coding
    {
      Code = "122368",
      Display = "T-2 Secondary",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 3rd most severe stenosis within a vessel segment
    /// </summary>
    public static readonly Coding T3Secondary = new Coding
    {
      Code = "122369",
      Display = "T-3 Secondary",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 4th most severe stenosis within a vessel segment
    /// </summary>
    public static readonly Coding T4Secondary = new Coding
    {
      Code = "122370",
      Display = "T-4 Secondary",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// External Elastic Membrane (EEM) volume measured within a specified region. The EEM is a discrete interface at the border between the media and the Adventitia
    /// </summary>
    public static readonly Coding EEMVolume = new Coding
    {
      Code = "122371",
      Display = "EEM Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lumen volume measured within a specified region
    /// </summary>
    public static readonly Coding LumenVolume = new Coding
    {
      Code = "122372",
      Display = "Lumen Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The amount of plaque between the lumen and stent, within the stent region; In-stent restenosis. In-Stent Neointimal Volume = Stent Volume - Lumen Volume
    /// </summary>
    public static readonly Coding InStentNeointimalVolume = new Coding
    {
      Code = "122374",
      Display = "In-Stent Neointimal Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The amount of plaque between the stent and the EEM, within the stent region. Native Plaque Volume = EEM Volume - Stent Volume
    /// </summary>
    public static readonly Coding NativePlaqueVolume = new Coding
    {
      Code = "122375",
      Display = "Native Plaque Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total amount of plaque between the EEM and the Lumen, over the entire region that is measured. Total Plaque Volume = EEM Volume - Lumen Volume
    /// </summary>
    public static readonly Coding TotalPlaqueVolume = new Coding
    {
      Code = "122376",
      Display = "Total Plaque Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Proximal reference segment measurement site. Typically the site with the largest lumen proximal to a stenosis but within the same segment (usually within 10 mm of the stenosis with no major intervening branches)
    /// </summary>
    public static readonly Coding ProximalReference = new Coding
    {
      Code = "122380",
      Display = "Proximal Reference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Distal reference segment measurement site. Typically the site with the largest lumen distal to a stenosis but within the same segment (usually within 10 mm of the stenosis with no major intervening branches)
    /// </summary>
    public static readonly Coding DistalReference = new Coding
    {
      Code = "122381",
      Display = "Distal Reference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Site of the smallest lumen in a vessel; e.g. due to a stenotic lesion
    /// </summary>
    public static readonly Coding SiteOfLumenMinimum = new Coding
    {
      Code = "122382",
      Display = "Site of Lumen Minimum",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement region that encompasses the entire vessel imaged in a single pullback acquisition
    /// </summary>
    public static readonly Coding EntirePullback = new Coding
    {
      Code = "122383",
      Display = "Entire Pullback",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurement region occupied by the stent
    /// </summary>
    public static readonly Coding StentedRegion = new Coding
    {
      Code = "122384",
      Display = "Stented Region",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Region starting at the proximal edge of the Stent and extending several millimeters (usually 5 mm) proximal to the Stent edge
    /// </summary>
    public static readonly Coding ProximalStentMargin = new Coding
    {
      Code = "122385",
      Display = "Proximal Stent Margin",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Region starting at the distal edge of the Stent and extending several millimeters (usually 5 mm) distal to the Stent edge
    /// </summary>
    public static readonly Coding DistalStentMargin = new Coding
    {
      Code = "122386",
      Display = "Distal Stent Margin",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Classification of dissections in a vessel
    /// </summary>
    public static readonly Coding DissectionClassification = new Coding
    {
      Code = "122387",
      Display = "Dissection Classification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Separation of neointimal hyperplasia from stent struts, usually seen only after treatment of in-stent restenosis
    /// </summary>
    public static readonly Coding IntraStentDissection = new Coding
    {
      Code = "122388",
      Display = "Intra-stent Dissection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Plaque with a thin cap fibrous atheroma that is at increased risk of rupture and thrombosis (or re-thrombosis) and rapid stenosis progression
    /// </summary>
    public static readonly Coding VulnerablePlaque = new Coding
    {
      Code = "122389",
      Display = "Vulnerable Plaque",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Plaque erosions with no structural defect (beyond endothelial injury) or gap in the plaque
    /// </summary>
    public static readonly Coding ErodedPlaque = new Coding
    {
      Code = "122390",
      Display = "Eroded Plaque",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Stenosis severity classifications of multiple lesions in a vessel
    /// </summary>
    public static readonly Coding RelativeStenosisSeverity = new Coding
    {
      Code = "122391",
      Display = "Relative Stenosis Severity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A finding of a previously treated lesion in which stenosis has reoccurred
    /// </summary>
    public static readonly Coding RestenoticLesion = new Coding
    {
      Code = "122393",
      Display = "Restenotic Lesion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Loosely packed bundles of collagen fibers with regions of lipid deposition present. Region is cellular and no cholesterol clefts or necrosis are present. Some macrophage infiltration. Increase in extra cellular matrix
    /// </summary>
    public static readonly Coding FibroLipidicPlaque = new Coding
    {
      Code = "122394",
      Display = "Fibro-Lipidic Plaque",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Area within the plaque with very low echogenicity separated from the lumen and surrounded by more echogenic structures (fibrous cap). Highly lipidic necrotic region with remnants of foam cells and dead lymphocytes present. No collagen fibers are visible and mechanical integrity is poor. Cholesterol clefts and micro calcifications are visible
    /// </summary>
    public static readonly Coding NecroticLipidicPlaque = new Coding
    {
      Code = "122395",
      Display = "Necrotic-Lipidic Plaque",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dissection limited to the intima or atheroma, and not extending to the media
    /// </summary>
    public static readonly Coding IntimalDissection = new Coding
    {
      Code = "122398",
      Display = "Intimal Dissection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Dissection in the arterial Media, extending into the media
    /// </summary>
    public static readonly Coding MedialDissection = new Coding
    {
      Code = "122399",
      Display = "Medial Dissection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The referenced information was acquired simultaneously with the information in the object in which the reference occurs
    /// </summary>
    public static readonly Coding SimultaneouslyAcquired = new Coding
    {
      Code = "122400",
      Display = "Simultaneously Acquired",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Information acquired for the same anatomic region
    /// </summary>
    public static readonly Coding SameAnatomy = new Coding
    {
      Code = "122401",
      Display = "Same Anatomy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Information acquired for the same indication; e.g. to elucidate the same diagnostic question
    /// </summary>
    public static readonly Coding SameIndication = new Coding
    {
      Code = "122402",
      Display = "Same Indication",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The referenced information was used to correct the data for differential attenuation through different anatomic tissue
    /// </summary>
    public static readonly Coding ForAttenuationCorrection = new Coding
    {
      Code = "122403",
      Display = "For Attenuation Correction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Value estimated for a vessel in the absence of a stenosis
    /// </summary>
    public static readonly Coding Reconstructed = new Coding
    {
      Code = "122404",
      Display = "Reconstructed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Manufacturer of application used
    /// </summary>
    public static readonly Coding AlgorithmManufacturer = new Coding
    {
      Code = "122405",
      Display = "Algorithm Manufacturer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Left Atrial Ejection Fraction by Angiography
    /// </summary>
    public static readonly Coding LeftAtrialEjectionFractionByAngiography = new Coding
    {
      Code = "122406",
      Display = "Left Atrial Ejection Fraction by Angiography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Left Atrial End Diastolic Volume
    /// </summary>
    public static readonly Coding LeftAtrialEDVolume = new Coding
    {
      Code = "122407",
      Display = "Left Atrial ED Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Left Atrial End Systolic Volume
    /// </summary>
    public static readonly Coding LeftAtrialESVolume = new Coding
    {
      Code = "122408",
      Display = "Left Atrial ES Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Contour repositioning of End Diastolic relative to End Systolic contour
    /// </summary>
    public static readonly Coding ContourRealignment = new Coding
    {
      Code = "122410",
      Display = "Contour Realignment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The minimum standard deviation to define the hypokinesis and hyperkinesis
    /// </summary>
    public static readonly Coding ThresholdValue = new Coding
    {
      Code = "122411",
      Display = "Threshold Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report of differentiation of wall motion compared to normal
    /// </summary>
    public static readonly Coding RegionalAbnormalWallMotion = new Coding
    {
      Code = "122417",
      Display = "Regional Abnormal Wall Motion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Object used for Calibration
    /// </summary>
    public static readonly Coding CalibrationObject = new Coding
    {
      Code = "122421",
      Display = "Calibration Object",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method used for Calibration
    /// </summary>
    public static readonly Coding CalibrationMethod = new Coding
    {
      Code = "122422",
      Display = "Calibration Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Size of calibration object
    /// </summary>
    public static readonly Coding CalibrationObjectSize = new Coding
    {
      Code = "122423",
      Display = "Calibration Object Size",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method how long axis is positioned
    /// </summary>
    public static readonly Coding AreaLengthMethod = new Coding
    {
      Code = "122428",
      Display = "Area Length Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Model for cardiac chamber volume calculation
    /// </summary>
    public static readonly Coding VolumeMethod = new Coding
    {
      Code = "122429",
      Display = "Volume Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method to define original diameter of the artery
    /// </summary>
    public static readonly Coding ReferenceMethod = new Coding
    {
      Code = "122430",
      Display = "Reference Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Relation between calculated End Diastolic volume and ventricular End Diastolic volume. The specific meaning is dependent on volume method used
    /// </summary>
    public static readonly Coding RegressionSlopeED = new Coding
    {
      Code = "122431",
      Display = "Regression Slope ED",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Correction factor for the calculated End Diastolic volume and ventricular End Diastolic volume. The specific meaning is dependent on volume method used
    /// </summary>
    public static readonly Coding RegressionOffsetED = new Coding
    {
      Code = "122432",
      Display = "Regression Offset ED",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Relation between calculated End Systolic volume and ventricular End Systolic volume. The specific meaning is dependent on volume method used
    /// </summary>
    public static readonly Coding RegressionSlopeES = new Coding
    {
      Code = "122433",
      Display = "Regression Slope ES",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Correction factor for the calculated End Systolic volume and ventricular End Systolic volume. The specific meaning is dependent on volume method used
    /// </summary>
    public static readonly Coding RegressionOffsetES = new Coding
    {
      Code = "122434",
      Display = "Regression Offset ES",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Exponent of volume in regression formula
    /// </summary>
    public static readonly Coding RegressionVolumeExponent = new Coding
    {
      Code = "122435",
      Display = "Regression Volume Exponent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Container for spatial locations or coordinates used for calculation
    /// </summary>
    public static readonly Coding ReferencePoints = new Coding
    {
      Code = "122438",
      Display = "Reference Points",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Average thickness of the chamber wall in the current view
    /// </summary>
    public static readonly Coding WallThickness = new Coding
    {
      Code = "122445",
      Display = "Wall Thickness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume of the chamber wall estimated from the current view
    /// </summary>
    public static readonly Coding WallVolume = new Coding
    {
      Code = "122446",
      Display = "Wall Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mass of the chamber wall (myocardium)
    /// </summary>
    public static readonly Coding WallMass = new Coding
    {
      Code = "122447",
      Display = "Wall Mass",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Peak systolic stress of chamber wall
    /// </summary>
    public static readonly Coding WallStress = new Coding
    {
      Code = "122448",
      Display = "Wall Stress",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method to calculate wall motion [example: Sheehan, 1986]
    /// </summary>
    public static readonly Coding CenterlineWallMotionAnalysis = new Coding
    {
      Code = "122449",
      Display = "Centerline Wall Motion Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The length between End Diastolic and End Systolic contour perpendicular on the centerline normalized by a method dependent ventricular perimeter length. The centerline is the line equidistant between the End Diastolic and End Systolic contour [example: Sheehan, 1986]
    /// </summary>
    public static readonly Coding NormalizedChordLength = new Coding
    {
      Code = "122450",
      Display = "Normalized Chord Length",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The report of the boundaries of the abnormal (hyperkinetic, hypokinetic, a-kinetic) regions associated with the territory of the artery [example: Sheehan, 1986]
    /// </summary>
    public static readonly Coding AbnormalRegion = new Coding
    {
      Code = "122451",
      Display = "Abnormal Region",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The chord number specifying the begin of abnormal region [example: Sheehan, 1986]
    /// </summary>
    public static readonly Coding FirstChordOfAbnormalRegion = new Coding
    {
      Code = "122452",
      Display = "First Chord of Abnormal Region",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The chord number specifying the end of abnormal region [example: Sheehan, 1986]
    /// </summary>
    public static readonly Coding LastChordOfAbnormalRegion = new Coding
    {
      Code = "122453",
      Display = "Last Chord of Abnormal Region",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Severity at the regional abnormality extent [example: Sheehan, 1986]
    /// </summary>
    public static readonly Coding TerritoryRegionSeverity = new Coding
    {
      Code = "122459",
      Display = "Territory Region Severity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Severity at the opposite regional abnormality extent [example: Sheehan, 1986]
    /// </summary>
    public static readonly Coding OppositeRegionSeverity = new Coding
    {
      Code = "122461",
      Display = "Opposite Region Severity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Based on a total number of chords of 100 and RAO project the range of chords belonging to this circumferential extent lies between 5 - 85. [Sheehan, 1986]
    /// </summary>
    public static readonly Coding LADRegionInRAOProjection = new Coding
    {
      Code = "122464",
      Display = "LAD Region in RAO Projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Based on a total number of chords of 100 and RAO project the range of chords belonging to this circumferential extent lies between 25 - 85. [Sheehan, 1986]
    /// </summary>
    public static readonly Coding RCARegionInROAProjection = new Coding
    {
      Code = "122465",
      Display = "RCA Region in ROA Projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Based on a total number of chords of 100 and RAO projection the range of chords belonging to this regional extent lies between 10 - 66 (hypokinetic) and 67 - 80 (hyperkinetic). [Sheehan, 1986]
    /// </summary>
    public static readonly Coding SingleLADRegionInRAOProjection = new Coding
    {
      Code = "122466",
      Display = "Single LAD Region in RAO Projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Based on a total number of chords of 100 and RAO projection the range of chords belonging to this regional extent lies between 51 - 80 (hypokinetic) and 10 - 50 (hyperkinetic). [Sheehan, 1986]
    /// </summary>
    public static readonly Coding SingleRCARegionInRAOProjection = new Coding
    {
      Code = "122467",
      Display = "Single RCA Region in RAO Projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Based on a total number of chords of 100 and RAO projection the range of chords belonging to this regional extent lies between 10 - 58 (hypokinetic) and 59 -80 (hyperkinetic). [Sheehan, 1986]
    /// </summary>
    public static readonly Coding MultipleLADRegionInRAOProjection = new Coding
    {
      Code = "122468",
      Display = "Multiple LAD Region in RAO Projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Based on a total number of chords of 100 and RAO projection the range of chords belonging to this regional extent lies between 59 - 80 (hypokinetic) and 10 - 58 (hyperkinetic). [Sheehan, 1986]
    /// </summary>
    public static readonly Coding MultipleRCARegionInRAOProjection = new Coding
    {
      Code = "122469",
      Display = "Multiple RCA Region in RAO Projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Based on a total number of chords of 100 and LAO projection the range of chords belonging to this regional extent lies between 50 -100 (hypokinetic) and 20 - 49 (hyperkinetic). [Sheehan, 1986]
    /// </summary>
    public static readonly Coding LADRegionInLAOProjection = new Coding
    {
      Code = "122470",
      Display = "LAD Region in LAO Projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Based on a total number of chords of 100 and LAO projection the range of chords belonging to this regional extent lies between 19 - 67 (hypokinetic) and 68 - 100 (hyperkinetic). [Sheehan, 1986]
    /// </summary>
    public static readonly Coding RCARegionInLAOProjection = new Coding
    {
      Code = "122471",
      Display = "RCA Region in LAO Projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Based on a total number of chords of 100 and LAO projection the range of chords belonging to this regional extent lies between 38 -74 (hypokinetic) and 75 - 100 (hyperkinetic). [Sheehan, 1986]
    /// </summary>
    public static readonly Coding CFXRegionInLAOProjection = new Coding
    {
      Code = "122472",
      Display = "CFX Region in LAO Projection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method based on assumption that the image object is circular
    /// </summary>
    public static readonly Coding CircularMethod = new Coding
    {
      Code = "122473",
      Display = "Circular Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method based on the gray value distribution of the image
    /// </summary>
    public static readonly Coding DensitometricMethod = new Coding
    {
      Code = "122474",
      Display = "Densitometric Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// End Systolic contour realigned to End Diastolic contour based on the center of gravity
    /// </summary>
    public static readonly Coding CenterOfGravity = new Coding
    {
      Code = "122475",
      Display = "Center of Gravity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// End Systolic contour realigned to End Diastolic contour based on the mid point of the long axis. The long axis end-points are defined as the posterior and apex
    /// </summary>
    public static readonly Coding LongAxisBased = new Coding
    {
      Code = "122476",
      Display = "Long Axis Based",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No Contour Realignment applied
    /// </summary>
    public static readonly Coding NoRealignment = new Coding
    {
      Code = "122477",
      Display = "No Realignment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calculated Vessel Lumen Cross-Sectional Area based on the referenced method
    /// </summary>
    public static readonly Coding VesselLumenCrossSectionalArea = new Coding
    {
      Code = "122480",
      Display = "Vessel Lumen Cross-Sectional Area",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location of the beginning of a contour
    /// </summary>
    public static readonly Coding ContourStart = new Coding
    {
      Code = "122481",
      Display = "Contour Start",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location of the end of a contour
    /// </summary>
    public static readonly Coding ContourEnd = new Coding
    {
      Code = "122482",
      Display = "Contour End",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Sphere is used as calibration object
    /// </summary>
    public static readonly Coding Sphere = new Coding
    {
      Code = "122485",
      Display = "Sphere",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Object of interest in isocenter of image and pixel separation is calculated from geometric data
    /// </summary>
    public static readonly Coding GeometricIsocenter = new Coding
    {
      Code = "122486",
      Display = "Geometric Isocenter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Object of interest not in isocenter of image and pixel separation is calculated from geometric data and out of isocenter distances
    /// </summary>
    public static readonly Coding GeometricNonIsocenter = new Coding
    {
      Code = "122487",
      Display = "Geometric Non-Isocenter",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Object used for calibration; e.g. sphere
    /// </summary>
    public static readonly Coding CalibrationObjectUsed = new Coding
    {
      Code = "122488",
      Display = "Calibration Object Used",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Application dependent method to calculate the reference diameter based on the multiple diameter values
    /// </summary>
    public static readonly Coding CurveFittedReference = new Coding
    {
      Code = "122489",
      Display = "Curve Fitted Reference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Application dependent method to calculate reference by interpolation, based on the diameter of two or more user defined reference positions
    /// </summary>
    public static readonly Coding InterpolatedLocalReference = new Coding
    {
      Code = "122490",
      Display = "Interpolated Local Reference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Application dependent method to calculate by averaging the reference, based on the diameter of one or more user defined reference positions
    /// </summary>
    public static readonly Coding MeanLocalReference = new Coding
    {
      Code = "122491",
      Display = "Mean Local Reference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method to calculate wall motion based on the lengths of the radials in the predefined regions [Ingels]
    /// </summary>
    public static readonly Coding RadialBasedWallMotionAnalysis = new Coding
    {
      Code = "122493",
      Display = "Radial Based Wall Motion Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Contribution of Region to global Ejection factor based on radial or landmark based wall motion method
    /// </summary>
    public static readonly Coding RegionalContributionToEjectionFraction = new Coding
    {
      Code = "122495",
      Display = "Regional Contribution to Ejection Fraction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The reduction of area between End Systolic and End Diastolic based on radial wall motion analysis
    /// </summary>
    public static readonly Coding RadialShortening = new Coding
    {
      Code = "122496",
      Display = "Radial Shortening",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method to calculate wall motion based on the move of landmarks on the wall [Slager]
    /// </summary>
    public static readonly Coding LandmarkBasedWallMotionAnalysis = new Coding
    {
      Code = "122497",
      Display = "Landmark Based Wall Motion Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Contribution to the ejection fraction of a specific slice region [Slager]
    /// </summary>
    public static readonly Coding SliceContributionToEjectionFraction = new Coding
    {
      Code = "122498",
      Display = "Slice Contribution to Ejection Fraction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method to calculate volumes of heart chambers for every image in a range
    /// </summary>
    public static readonly Coding FrameToFrameAnalysis = new Coding
    {
      Code = "122499",
      Display = "Frame to Frame Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The area is derived by considering a set of coordinates as a closed irregular polygon, accounting for inner angles. The exact method, such as by decomposition into triangles or quadrilaterals, is not specified, since it does not affect the numeric result, apart from the effect of numeric precision during computation of intermediate results
    /// </summary>
    public static readonly Coding AreaOfClosedIrregularPolygon = new Coding
    {
      Code = "122501",
      Display = "Area of closed irregular polygon",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The area is derived by using a set of coordinates as control points for a Non Uniform Rational B-Spline (NURBS)
    /// </summary>
    public static readonly Coding AreaOfAClosedNURBS = new Coding
    {
      Code = "122502",
      Display = "Area of a closed NURBS",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The volume derived by integrating the sum of the areas on adjacent slices across the slice interval; each area is defined by a regular planar shape or by considering a set of coordinates as a closed irregular polygon, accounting for inner angles
    /// </summary>
    public static readonly Coding IntegrationOfSumOfClosedAreasOnContiguousSlices = new Coding
    {
      Code = "122503",
      Display = "Integration of sum of closed areas on contiguous slices",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure used to calibrate measurements or measurement devices
    /// </summary>
    public static readonly Coding Calibration = new Coding
    {
      Code = "122505",
      Display = "Calibration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Left contour of lumen (direction proximal to distal)
    /// </summary>
    public static readonly Coding LeftContour = new Coding
    {
      Code = "122507",
      Display = "Left Contour",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Right contour of lumen (direction proximal to distal)
    /// </summary>
    public static readonly Coding RightContour = new Coding
    {
      Code = "122508",
      Display = "Right Contour",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ordered set of diameters values derived from contours (direction proximal to distal)
    /// </summary>
    public static readonly Coding DiameterGraph = new Coding
    {
      Code = "122509",
      Display = "Diameter Graph",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Length Luminal Segment
    /// </summary>
    public static readonly Coding LengthLuminalSegment = new Coding
    {
      Code = "122510",
      Display = "Length Luminal Segment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Increment value along X-axis in Diameter Graph
    /// </summary>
    public static readonly Coding GraphIncrement = new Coding
    {
      Code = "122511",
      Display = "Graph Increment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Location of the maximum lumen area in a lesion or vessel
    /// </summary>
    public static readonly Coding SiteOfMaximumLuminal = new Coding
    {
      Code = "122516",
      Display = "Site of Maximum Luminal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ordered set of cross-sectional Vessel Lumen Cross-Sectional Area values derived from contours (direction proximal to distal) based on densitometric method
    /// </summary>
    public static readonly Coding DensitometricLuminalCrossSectionalAreaGraph = new Coding
    {
      Code = "122517",
      Display = "Densitometric Luminal Cross-sectional Area Graph",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Position of proximal border of segment relative to the contour start (proximal end of analysis area)
    /// </summary>
    public static readonly Coding PositionOfProximalBorder = new Coding
    {
      Code = "122528",
      Display = "Position of Proximal Border",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Position of distal border of segment relative to the contour start (proximal end of analysis area)
    /// </summary>
    public static readonly Coding PositionOfDistalBorder = new Coding
    {
      Code = "122529",
      Display = "Position of Distal Border",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Longitudinal cross sectional area of plaque
    /// </summary>
    public static readonly Coding PlaqueArea = new Coding
    {
      Code = "122542",
      Display = "Plaque Area",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Symmetry of stenosis (0 = complete asymmetry, 1 = complete symmetry); see Section T.2 "Definition of Diameter Symmetry with Arterial Plaques" in PS3.17
    /// </summary>
    public static readonly Coding DiameterSymmetry = new Coding
    {
      Code = "122544",
      Display = "Diameter Symmetry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Symmetry of plaque (0 = complete asymmetry, 1 = complete symmetry); see Section T.2 "Definition of Diameter Symmetry with Arterial Plaques" in PS3.17
    /// </summary>
    public static readonly Coding AreaSymmetry = new Coding
    {
      Code = "122545",
      Display = "Area Symmetry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The average slope of the diameter function between the position of the minimum luminal diameter and the position of the proximal border of the segment
    /// </summary>
    public static readonly Coding InflowAngle = new Coding
    {
      Code = "122546",
      Display = "Inflow Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The average slope of the diameter function between the position of the minimum luminal diameter and the position of the distal border of the segment
    /// </summary>
    public static readonly Coding OutflowAngle = new Coding
    {
      Code = "122547",
      Display = "Outflow Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The relation between coronary pressure and coronary flow
    /// </summary>
    public static readonly Coding StenoticFlowReserve = new Coding
    {
      Code = "122548",
      Display = "Stenotic Flow Reserve",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Poiseuille Resistance at the location of the stenosis
    /// </summary>
    public static readonly Coding PoiseuilleResistance = new Coding
    {
      Code = "122549",
      Display = "Poiseuille Resistance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Turbulence Resistance at the location of the stenosis
    /// </summary>
    public static readonly Coding TurbulenceResistance = new Coding
    {
      Code = "122550",
      Display = "Turbulence Resistance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pressure drop over the stenosis at maximum heart output
    /// </summary>
    public static readonly Coding PressureDropAtSFR = new Coding
    {
      Code = "122551",
      Display = "Pressure Drop at SFR",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method for selection of vessel sub-segments
    /// </summary>
    public static readonly Coding SegmentationMethod = new Coding
    {
      Code = "122554",
      Display = "Segmentation Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Estimate of the volume of blood flow in the absence of stenosis
    /// </summary>
    public static readonly Coding EstimatedNormalFlow = new Coding
    {
      Code = "122555",
      Display = "Estimated Normal Flow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Area Length method defined by Kennedy [Kennedy, 1970]
    /// </summary>
    public static readonly Coding AreaLengthKennedy = new Coding
    {
      Code = "122558",
      Display = "Area Length Kennedy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Area Length method defined by Dodge [Dodge, 1960]
    /// </summary>
    public static readonly Coding AreaLengthDodge = new Coding
    {
      Code = "122559",
      Display = "Area Length Dodge",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Area Length method defined by Wynne [Wynne]
    /// </summary>
    public static readonly Coding AreaLengthWynne = new Coding
    {
      Code = "122560",
      Display = "Area Length Wynne",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume method based on multiple slice
    /// </summary>
    public static readonly Coding MultipleSlices = new Coding
    {
      Code = "122562",
      Display = "Multiple Slices",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume method defined by Boak [Boak]
    /// </summary>
    public static readonly Coding Boak = new Coding
    {
      Code = "122563",
      Display = "Boak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume method defined by Ferlinz [Ferlinz]
    /// </summary>
    public static readonly Coding TSPyramid = new Coding
    {
      Code = "122564",
      Display = "TS Pyramid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume method defined by Graham [Graham]
    /// </summary>
    public static readonly Coding TwoChamber = new Coding
    {
      Code = "122565",
      Display = "Two Chamber",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume method defined by Arcilla [Arcilla]
    /// </summary>
    public static readonly Coding Parallelepiped = new Coding
    {
      Code = "122566",
      Display = "Parallelepiped",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Corrected Body Surface area for indexing the hemodynamic measurements for a pediatric patient
    /// </summary>
    public static readonly Coding BSAPower1219 = new Coding
    {
      Code = "122572",
      Display = "BSA^1.219",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method for selecting sub-segments that are all of the same length
    /// </summary>
    public static readonly Coding EquidistantMethod = new Coding
    {
      Code = "122574",
      Display = "Equidistant method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Manually selected start and end of sub-segment
    /// </summary>
    public static readonly Coding UserSelectedMethod = new Coding
    {
      Code = "122575",
      Display = "User selected method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Left ventricular posterobasal segment
    /// </summary>
    public static readonly Coding LeftVentricularPosterobasalSegment = new Coding
    {
      Code = "122582",
      Display = "Left ventricular posterobasal segment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report of a Cardiovascular Analysis, typically from a CT or MR study
    /// </summary>
    public static readonly Coding CardiovascularAnalysisReport = new Coding
    {
      Code = "122600",
      Display = "Cardiovascular Analysis Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ventricular Analysis
    /// </summary>
    public static readonly Coding VentricularAnalysis = new Coding
    {
      Code = "122601",
      Display = "Ventricular Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Myocardial Perfusion Analysis
    /// </summary>
    public static readonly Coding MyocardialPerfusionAnalysis = new Coding
    {
      Code = "122602",
      Display = "Myocardial Perfusion Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calcium Scoring Analysis
    /// </summary>
    public static readonly Coding CalciumScoringAnalysis = new Coding
    {
      Code = "122603",
      Display = "Calcium Scoring Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Flow Quantification Analysis
    /// </summary>
    public static readonly Coding FlowQuantification = new Coding
    {
      Code = "122604",
      Display = "Flow Quantification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vascular Morphological Analysis
    /// </summary>
    public static readonly Coding VascularMorphologicalAnalysis = new Coding
    {
      Code = "122605",
      Display = "Vascular Morphological Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Vascular Functional Analysis
    /// </summary>
    public static readonly Coding VascularFunctionalAnalysis = new Coding
    {
      Code = "122606",
      Display = "Vascular Functional Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Analysis of myocardial wall thickening
    /// </summary>
    public static readonly Coding ThickeningAnalysis = new Coding
    {
      Code = "122607",
      Display = "Thickening Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Section Heading for absolute values of ventricular measurements
    /// </summary>
    public static readonly Coding AbsoluteValuesOfVentricularMeasurements = new Coding
    {
      Code = "122608",
      Display = "Absolute Values Of Ventricular Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Results of normalizing ventricular measurements
    /// </summary>
    public static readonly Coding NormalizedValuesOfVentricularMeasurements = new Coding
    {
      Code = "122609",
      Display = "Normalized Values Of Ventricular Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference Point of a measurement
    /// </summary>
    public static readonly Coding ReferencePoint = new Coding
    {
      Code = "122611",
      Display = "Reference Point",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Central breathing position between inspiration and expiration
    /// </summary>
    public static readonly Coding CentralBreathingPosition = new Coding
    {
      Code = "122612",
      Display = "Central breathing position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Peak of the ventricular ejection rate
    /// </summary>
    public static readonly Coding PeakEjectionRate = new Coding
    {
      Code = "122616",
      Display = "Peak Ejection Rate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time of the peak of ventricular ejection
    /// </summary>
    public static readonly Coding PeakEjectionTime = new Coding
    {
      Code = "122617",
      Display = "Peak Ejection Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Peak of the fluid filling rate
    /// </summary>
    public static readonly Coding PeakFillingRate = new Coding
    {
      Code = "122618",
      Display = "Peak Filling Rate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time interval until time of peak filling from a given reference point; e.g. end systole
    /// </summary>
    public static readonly Coding PeakFillingTime = new Coding
    {
      Code = "122619",
      Display = "Peak Filling Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Papillary muscle was excluded from the measurement
    /// </summary>
    public static readonly Coding PapillaryMuscleExcluded = new Coding
    {
      Code = "122620",
      Display = "Papillary Muscle Excluded",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Papillary muscle was included in the measurement
    /// </summary>
    public static readonly Coding PapillaryMuscleIncluded = new Coding
    {
      Code = "122621",
      Display = "Papillary Muscle Included",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The ratio of the end-systolic wall thickness compared to the end-diastolic wall thickness
    /// </summary>
    public static readonly Coding WallThicknessRatioEndSystolicToEndDiastolic = new Coding
    {
      Code = "122624",
      Display = "Wall Thickness Ratio end-systolic to end-diastolic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The method to smooth a ventricular volume as a function of time
    /// </summary>
    public static readonly Coding CurveFitMethod = new Coding
    {
      Code = "122627",
      Display = "Curve Fit Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Baseline correction used in the calculation of the results
    /// </summary>
    public static readonly Coding BaselineResultCorrection = new Coding
    {
      Code = "122628",
      Display = "Baseline Result Correction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time in a dynamic set of images at which the first peak of the signal is observed for the analyzed myocardial wall segments
    /// </summary>
    public static readonly Coding SignalEarliestPeakTime = new Coding
    {
      Code = "122631",
      Display = "Signal Earliest Peak Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// This is the time at which the signal begins to increase
    /// </summary>
    public static readonly Coding SignalIncreaseStartTime = new Coding
    {
      Code = "122633",
      Display = "Signal Increase Start Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time interval between the beginning of the signal increase to the time at which the signal intensity reaches its first maximum in a dynamic set of images
    /// </summary>
    public static readonly Coding SignalTimeToPeak = new Coding
    {
      Code = "122634",
      Display = "Signal Time to Peak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Peak of the MR perfusion signal
    /// </summary>
    public static readonly Coding MRPerfusionPeak = new Coding
    {
      Code = "122635",
      Display = "MR Perfusion Peak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Signal intensity as a function of time. It is the change in the signal intensity divided by the change in the time
    /// </summary>
    public static readonly Coding MRPerfusionSlope = new Coding
    {
      Code = "122636",
      Display = "MR Perfusion Slope",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// MR perfusion time integral from baseline (foot time) to earliest peak
    /// </summary>
    public static readonly Coding MRPerfusionTimeIntegral = new Coding
    {
      Code = "122637",
      Display = "MR Perfusion Time Integral",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// First time point in a dynamic set of images used in the calculation of the baseline signal intensity for each myocardial wall segment
    /// </summary>
    public static readonly Coding SignalBaselineStart = new Coding
    {
      Code = "122638",
      Display = "Signal Baseline Start",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Last time point in a dynamic set of images used in the calculation of the baseline signal intensity for each myocardial wall segment
    /// </summary>
    public static readonly Coding SignalBaselineEnd = new Coding
    {
      Code = "122639",
      Display = "Signal Baseline End",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time delta between images in a dynamic set of images
    /// </summary>
    public static readonly Coding ImageInterval = new Coding
    {
      Code = "122640",
      Display = "Image Interval",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The minimum velocity encoded by the phase encoding gradient
    /// </summary>
    public static readonly Coding VelocityEncodingMinimumValue = new Coding
    {
      Code = "122642",
      Display = "Velocity Encoding Minimum Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The maximum velocity encoded by the phase encoding gradient
    /// </summary>
    public static readonly Coding VelocityEncodingMaximumValue = new Coding
    {
      Code = "122643",
      Display = "Velocity Encoding Maximum Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Forward volume-reverse volume
    /// </summary>
    public static readonly Coding NetForwardVolume = new Coding
    {
      Code = "122645",
      Display = "Net Forward Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Area Based Method for estimating volume or area
    /// </summary>
    public static readonly Coding AreaBasedMethod = new Coding
    {
      Code = "122650",
      Display = "Area Based Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Diameter Based Method for estimating volume, area or diameter
    /// </summary>
    public static readonly Coding DiameterBasedMethod = new Coding
    {
      Code = "122651",
      Display = "Diameter Based Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume Based Method for estimating volume
    /// </summary>
    public static readonly Coding VolumeBasedMethod = new Coding
    {
      Code = "122652",
      Display = "Volume Based Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of diameter measurements according to NASCET (North American Symptomatic Carotid Endarterectomy Trial)
    /// </summary>
    public static readonly Coding NASCET = new Coding
    {
      Code = "122655",
      Display = "NASCET",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of diameter measurements according to ECST (European Carotid Surgery Trial)
    /// </summary>
    public static readonly Coding ECST = new Coding
    {
      Code = "122656",
      Display = "ECST",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Agatston Score Threshold
    /// </summary>
    public static readonly Coding AgatstonScoreThreshold = new Coding
    {
      Code = "122657",
      Display = "Agatston Score Threshold",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calcium Mass Threshold
    /// </summary>
    public static readonly Coding CalciumMassThreshold = new Coding
    {
      Code = "122658",
      Display = "Calcium Mass Threshold",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calcium Scoring Calibration
    /// </summary>
    public static readonly Coding CalciumScoringCalibration = new Coding
    {
      Code = "122659",
      Display = "Calcium Scoring Calibration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calcium Volume
    /// </summary>
    public static readonly Coding CalciumVolume = new Coding
    {
      Code = "122660",
      Display = "Calcium Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calcium Mass
    /// </summary>
    public static readonly Coding CalciumMass = new Coding
    {
      Code = "122661",
      Display = "Calcium Mass",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Delayed hyperenhancement of a tissue observed in an image acquired after injection of contrast media
    /// </summary>
    public static readonly Coding LateContrastEnhancement = new Coding
    {
      Code = "122664",
      Display = "Late Contrast Enhancement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time interval since injection of contrast media
    /// </summary>
    public static readonly Coding TimeIntervalSinceInjectionOfContrastMedia = new Coding
    {
      Code = "122665",
      Display = "Time interval since injection of contrast media",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time relative to R-wave peak
    /// </summary>
    public static readonly Coding TimeRelativeToRWavePeak = new Coding
    {
      Code = "122666",
      Display = "Time relative to R-wave peak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Relationship between blood velocity and time relative to R-wave peak
    /// </summary>
    public static readonly Coding BloodVelocityVsTimeOfCardiacCycle = new Coding
    {
      Code = "122667",
      Display = "Blood velocity vs. time of cardiac cycle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time interval since detection of contrast bolus
    /// </summary>
    public static readonly Coding TimeIntervalSinceDetectionOfContrastBolus = new Coding
    {
      Code = "122668",
      Display = "Time interval since detection of contrast bolus",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indicates if the papillary muscle was included or excluded in the measurement
    /// </summary>
    public static readonly Coding PapillaryMuscleIncludedExcluded = new Coding
    {
      Code = "122670",
      Display = "Papillary Muscle Included/Excluded",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Anterior to Posterior direction
    /// </summary>
    public static readonly Coding AnteriorPosterior = new Coding
    {
      Code = "122675",
      Display = "Anterior-Posterior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Persistent flow of blood into the stent-grafting
    /// </summary>
    public static readonly Coding Endoleak = new Coding
    {
      Code = "122680",
      Display = "endoleak",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fracture of a stent
    /// </summary>
    public static readonly Coding StentFracture = new Coding
    {
      Code = "122683",
      Display = "Stent Fracture",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Disintegration of a stent
    /// </summary>
    public static readonly Coding StentDisintegration = new Coding
    {
      Code = "122684",
      Display = "Stent Disintegration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Material that a stent consists of
    /// </summary>
    public static readonly Coding StentComposition = new Coding
    {
      Code = "122685",
      Display = "Stent Composition",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Finding about the characteristics of the parent vessel of a vessel
    /// </summary>
    public static readonly Coding ParentVesselFinding = new Coding
    {
      Code = "122686",
      Display = "Parent Vessel Finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Site of Maximal lumen diameter of a vessel
    /// </summary>
    public static readonly Coding SiteOfLumenMaximum = new Coding
    {
      Code = "122687",
      Display = "Site of Lumen Maximum",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The physical domain (time, space, etc.) to the horizontal axis of the graphical presentation
    /// </summary>
    public static readonly Coding XConcept = new Coding
    {
      Code = "122698",
      Display = "X-Concept",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The physical domain (time, space, etc.) to the vertical axis of the graphical presentation
    /// </summary>
    public static readonly Coding YConcept = new Coding
    {
      Code = "122699",
      Display = "Y-Concept",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Indications for Pharmacological Stress
    /// </summary>
    public static readonly Coding IndicationsForPharmacologicalStress = new Coding
    {
      Code = "122700",
      Display = "Indications for Pharmacological Stress",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Reference time for measurement of elapsed time in a procedure
    /// </summary>
    public static readonly Coding ProcedureTimeBase = new Coding
    {
      Code = "122701",
      Display = "Procedure time base",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Treadmill speed
    /// </summary>
    public static readonly Coding TreadmillSpeed = new Coding
    {
      Code = "122702",
      Display = "Treadmill speed",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Treadmill gradient
    /// </summary>
    public static readonly Coding TreadmillGradient = new Coding
    {
      Code = "122703",
      Display = "Treadmill gradient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ergometer power
    /// </summary>
    public static readonly Coding ErgometerPower = new Coding
    {
      Code = "122704",
      Display = "Ergometer power",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pharmacological Stress Agent Dose Rate
    /// </summary>
    public static readonly Coding PharmacologicalStressAgentDoseRate = new Coding
    {
      Code = "122705",
      Display = "Pharmacological Stress Agent Dose Rate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Rating of Perceived Exertion
    /// </summary>
    public static readonly Coding RatingOfPerceivedExertion = new Coding
    {
      Code = "122706",
      Display = "Rating of Perceived Exertion",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of ectopic beats during a period of collection
    /// </summary>
    public static readonly Coding NumberOfEctopicBeats = new Coding
    {
      Code = "122707",
      Display = "Number of Ectopic Beats",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Heart rate times systolic blood pressure
    /// </summary>
    public static readonly Coding DoubleProduct = new Coding
    {
      Code = "122708",
      Display = "Double Product",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Physical activity workload (intensity) measurement
    /// </summary>
    public static readonly Coding ActivityWorkload = new Coding
    {
      Code = "122709",
      Display = "Activity workload",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Elapsed time at stage
    /// </summary>
    public static readonly Coding TimeSinceStartOfStage = new Coding
    {
      Code = "122710",
      Display = "Time since start of stage",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Exercise duration after stress agent injection
    /// </summary>
    public static readonly Coding ExerciseDurationAfterStressAgentInjection = new Coding
    {
      Code = "122711",
      Display = "Exercise duration after stress agent injection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Imaging Start Time
    /// </summary>
    public static readonly Coding ImagingStartTime = new Coding
    {
      Code = "122712",
      Display = "Imaging Start Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Attenuation correction method
    /// </summary>
    public static readonly Coding AttenuationCorrectionMethod = new Coding
    {
      Code = "122713",
      Display = "Attenuation correction method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pharmacological Stress Agent Dose
    /// </summary>
    public static readonly Coding PharmacologicalStressAgentDose = new Coding
    {
      Code = "122715",
      Display = "Pharmacological Stress Agent Dose",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Maximum power output achieved during course of procedure
    /// </summary>
    public static readonly Coding MaximumPowerOutputAchieved = new Coding
    {
      Code = "122716",
      Display = "Maximum Power Output Achieved",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Peak physical activity intensity measurement during course of procedure
    /// </summary>
    public static readonly Coding PeakActivityWorkload = new Coding
    {
      Code = "122717",
      Display = "Peak activity workload",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Peak Double Product measurement during course of procedure
    /// </summary>
    public static readonly Coding PeakDoubleProduct = new Coding
    {
      Code = "122718",
      Display = "Peak Double Product",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ordered subsets expectation maximization reconstruction algorithm
    /// </summary>
    public static readonly Coding OSEMAlgorithm = new Coding
    {
      Code = "122720",
      Display = "OSEM algorithm",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Chang attenuation correction method
    /// </summary>
    public static readonly Coding ChangMethod = new Coding
    {
      Code = "122721",
      Display = "Chang method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Attenuation correction not based on image-based attenuation maps
    /// </summary>
    public static readonly Coding AlgorithmicAttenuationCorrection = new Coding
    {
      Code = "122726",
      Display = "Algorithmic attenuation correction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// NM transmission attenuation correction
    /// </summary>
    public static readonly Coding NMTransmissionAttenuationCorrection = new Coding
    {
      Code = "122727",
      Display = "NM transmission attenuation correction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CT-based attenuation correction
    /// </summary>
    public static readonly Coding CTBasedAttenuationCorrection = new Coding
    {
      Code = "122728",
      Display = "CT-based attenuation correction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No attenuation correction
    /// </summary>
    public static readonly Coding NoAttenuationCorrection = new Coding
    {
      Code = "122729",
      Display = "No Attenuation Correction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Bazett QT Correction Algorithm; QT/(RR ^ 0.5); Bazett HC. "An analysis of the time-relations of electrocardiograms" Heart7:353-370 (1920)
    /// </summary>
    public static readonly Coding BazettQTcAlgorithm = new Coding
    {
      Code = "122730",
      Display = "Bazett QTc Algorithm",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hodges QT Correction Algorithm; QT + 1.75 (heart rate-60); Hodges M, Salerno Q, Erlien D. "Bazett's QT correction reviewed. Evidence that a linear QT correction for heart rate is better." J Am Coll Cardiol1:694 (1983)
    /// </summary>
    public static readonly Coding HodgesQTcAlgorithm = new Coding
    {
      Code = "122731",
      Display = "Hodges QTc Algorithm",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fridericia QT Correction Algorithm; QT/(RR ^ 0.333); Fridericia LS. "The duration of systole in the electrocardiogram of normal subjects and of patients with heart disease" Acta Med Scand53:469-486 (1920)
    /// </summary>
    public static readonly Coding FridericiaQTcAlgorithm = new Coding
    {
      Code = "122732",
      Display = "Fridericia QTc Algorithm",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Framingham QT Correction Algorithm; QT + 0.154 (1- RR); Sagie A, Larson MG, Goldberg RJ, et al. "An improved method for adjusting the QT interval for heart rate (the Framingham Heart Study)." Am J Cardiol70:797-801(1992)
    /// </summary>
    public static readonly Coding FraminghamQTcAlgorithm = new Coding
    {
      Code = "122733",
      Display = "Framingham QTc Algorithm",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Borg Rating of Perceived Exertion Scale, range 6:20
    /// </summary>
    public static readonly Coding BorgRPEScale = new Coding
    {
      Code = "122734",
      Display = "Borg RPE Scale",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Borg category ratio scale, open ended range with nominal range 0:10
    /// </summary>
    public static readonly Coding BorgCR10Scale = new Coding
    {
      Code = "122735",
      Display = "Borg CR10 Scale",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Overall study quality
    /// </summary>
    public static readonly Coding OverallStudyQuality = new Coding
    {
      Code = "122739",
      Display = "Overall study quality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Excellent image quality
    /// </summary>
    public static readonly Coding ExcellentImageQuality = new Coding
    {
      Code = "122740",
      Display = "Excellent image quality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Good image quality
    /// </summary>
    public static readonly Coding GoodImageQuality = new Coding
    {
      Code = "122741",
      Display = "Good image quality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Poor image quality
    /// </summary>
    public static readonly Coding PoorImageQuality = new Coding
    {
      Code = "122742",
      Display = "Poor image quality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image attenuation due to body physique (overweight)
    /// </summary>
    public static readonly Coding BodyHabitusAttenuation = new Coding
    {
      Code = "122743",
      Display = "Body habitus attenuation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image attenuation due to breast tissue
    /// </summary>
    public static readonly Coding BreastAttenuation = new Coding
    {
      Code = "122744",
      Display = "Breast attenuation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image attenuation due to diaphragm
    /// </summary>
    public static readonly Coding DiaphragmaticAttenuation = new Coding
    {
      Code = "122745",
      Display = "Diaphragmatic attenuation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Finding of a defect is incorrect; e.g. from automated analysis
    /// </summary>
    public static readonly Coding FalsePositiveDefectFinding = new Coding
    {
      Code = "122748",
      Display = "False positive defect finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ECG is non-diagnostic due to low heart rate
    /// </summary>
    public static readonly Coding NonDiagnosticLowHeartRate = new Coding
    {
      Code = "122750",
      Display = "Non-diagnostic - low heart rate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ECG is non-diagnostic due to resting ST abnormalities
    /// </summary>
    public static readonly Coding NonDiagnosticRestingSTAbnormalities = new Coding
    {
      Code = "122751",
      Display = "Non-diagnostic - resting ST abnormalities",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ECG is non-diagnostic due to ventricular pacing or Left Bundle Branch Block
    /// </summary>
    public static readonly Coding NonDiagnosticVentricularPacingOrLBBB = new Coding
    {
      Code = "122752",
      Display = "Non-diagnostic - ventricular pacing or LBBB",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ECG is non-diagnostic for presence of acute coronary syndrome
    /// </summary>
    public static readonly Coding NonDiagnosticECG = new Coding
    {
      Code = "122753",
      Display = "Non-diagnostic ECG",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Strongly positive finding
    /// </summary>
    public static readonly Coding StronglyPositive = new Coding
    {
      Code = "122755",
      Display = "Strongly positive",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Strongly positive finding - ST elevation
    /// </summary>
    public static readonly Coding StronglyPositiveSTElevation = new Coding
    {
      Code = "122756",
      Display = "Strongly positive - ST elevation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Finding of ST segment depression with no slope
    /// </summary>
    public static readonly Coding STDepressionHorizontal = new Coding
    {
      Code = "122757",
      Display = "ST Depression - Horizontal",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Finding of ST segment depression with upslope
    /// </summary>
    public static readonly Coding STDepressionUpsloping = new Coding
    {
      Code = "122758",
      Display = "ST Depression - Upsloping",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Finding of ST segment depression with downslope
    /// </summary>
    public static readonly Coding STDepressionDownsloping = new Coding
    {
      Code = "122759",
      Display = "ST Depression - Downsloping",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Stress test score
    /// </summary>
    public static readonly Coding StressTestScore = new Coding
    {
      Code = "122760",
      Display = "Stress test score",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Number of diseased vessel territories
    /// </summary>
    public static readonly Coding NumberOfDiseasedVesselTerritories = new Coding
    {
      Code = "122762",
      Display = "Number of diseased vessel territories",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient weight exceeds equipment limit
    /// </summary>
    public static readonly Coding WeightExceedsEquipmentLimit = new Coding
    {
      Code = "122764",
      Display = "Weight exceeds equipment limit",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Difference in Ejection Fraction
    /// </summary>
    public static readonly Coding DifferenceInEjectionFraction = new Coding
    {
      Code = "122768",
      Display = "Difference in Ejection Fraction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Difference in End Diastolic Left Ventricular Volume
    /// </summary>
    public static readonly Coding DifferenceInEDLVVolume = new Coding
    {
      Code = "122769",
      Display = "Difference in ED LV Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ratio of achieved to predicted maximal oxygen consumption
    /// </summary>
    public static readonly Coding RatioOfAchievedToPredictedMaximalOxygenConsumption = new Coding
    {
      Code = "122770",
      Display = "Ratio of achieved to predicted maximal oxygen consumption",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ratio of achieved to predicted functional capacity
    /// </summary>
    public static readonly Coding RatioOfAchievedToPredictedFunctionalCapacity = new Coding
    {
      Code = "122771",
      Display = "Ratio of achieved to predicted functional capacity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Workload (Watts) at target heart rate divided by body weight
    /// </summary>
    public static readonly Coding AerobicIndex = new Coding
    {
      Code = "122772",
      Display = "Aerobic index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ST depression at peak exercise divided by the exercise-induced increase in heart rate [Kligfield P, Ameisen O, Okin PM. "Heart rate adjustment of ST segment depression for improved detection of coronary artery disease." Circulation 1989;79:245-55.]
    /// </summary>
    public static readonly Coding STHRIndex = new Coding
    {
      Code = "122773",
      Display = "ST/HR Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Agreement with prior findings
    /// </summary>
    public static readonly Coding AgreementWithPriorFindings = new Coding
    {
      Code = "122775",
      Display = "Agreement with prior findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Disagreement with prior findings
    /// </summary>
    public static readonly Coding DisagreementWithPriorFindings = new Coding
    {
      Code = "122776",
      Display = "Disagreement with prior findings",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nuclear Medicine Rest thallium/stress technetium procedure
    /// </summary>
    public static readonly Coding RestThalliumStressTechnetiumProcedure = new Coding
    {
      Code = "122781",
      Display = "Rest thallium/stress technetium procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nuclear Medicine Rest technetium/stress technetium 1 day procedure
    /// </summary>
    public static readonly Coding RestTechnetiumStressTechnetium1DayProcedure = new Coding
    {
      Code = "122782",
      Display = "Rest technetium/stress technetium 1 day procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nuclear Medicine Rest technetium/stress technetium 2 day procedure
    /// </summary>
    public static readonly Coding RestTechnetiumStressTechnetium2DayProcedure = new Coding
    {
      Code = "122783",
      Display = "Rest technetium/stress technetium 2 day procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nuclear Medicine Stress technetium/rest technetium 1 day procedure
    /// </summary>
    public static readonly Coding StressTechnetiumRestTechnetium1DayProcedure = new Coding
    {
      Code = "122784",
      Display = "Stress technetium/rest technetium 1 day procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nuclear Medicine Myocardial Viability procedure
    /// </summary>
    public static readonly Coding NMMyocardialViabilityProcedure = new Coding
    {
      Code = "122785",
      Display = "NM Myocardial Viability procedure",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Positron Emission Tomography Perfusion Imaging procedure, rest only
    /// </summary>
    public static readonly Coding PETMyocardialPerfusionRestOnly = new Coding
    {
      Code = "122791",
      Display = "PET Myocardial Perfusion, Rest only",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Positron Emission Tomography Perfusion Imaging procedure, stress only
    /// </summary>
    public static readonly Coding PETMyocardialPerfusionStressOnly = new Coding
    {
      Code = "122792",
      Display = "PET Myocardial Perfusion, Stress only",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Positron Emission Tomography Perfusion Imaging procedure, rest and stress
    /// </summary>
    public static readonly Coding PETMyocardialPerfusionRestAndStress = new Coding
    {
      Code = "122793",
      Display = "PET Myocardial Perfusion, Rest and Stress",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Positron Emission Tomography Myocardial Viability procedure, rest only
    /// </summary>
    public static readonly Coding PETMyocardialViabilityRestOnly = new Coding
    {
      Code = "122795",
      Display = "PET Myocardial Viability, Rest only",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Positron Emission Tomography Myocardial Viability procedure, stress only
    /// </summary>
    public static readonly Coding PETMyocardialViabilityStressOnly = new Coding
    {
      Code = "122796",
      Display = "PET Myocardial Viability, Stress only",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Positron Emission Tomography Myocardial Viability procedure, rest and stress
    /// </summary>
    public static readonly Coding PETMyocardialViabilityRestAndStress = new Coding
    {
      Code = "122797",
      Display = "PET Myocardial Viability, Rest and Stress",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Group of symptoms heralding angina pectoris that does not include chest pain (dyspnea, diaphoresis, profuse vomiting in a diabetic patient, or arm or jaw pain)
    /// </summary>
    public static readonly Coding AnginalEquivalent = new Coding
    {
      Code = "122799",
      Display = "Anginal Equivalent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Time of radiopharmaceutical administration to the patient for imaging purposes
    /// </summary>
    public static readonly Coding RadiopharmaceuticalStartTime = new Coding
    {
      Code = "123003",
      Display = "Radiopharmaceutical Start Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ending time of radiopharmaceutical administration to the patient for imaging purposes
    /// </summary>
    public static readonly Coding RadiopharmaceuticalStopTime = new Coding
    {
      Code = "123004",
      Display = "Radiopharmaceutical Stop Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume of radiopharmaceutical administered to the patient
    /// </summary>
    public static readonly Coding RadiopharmaceuticalVolume = new Coding
    {
      Code = "123005",
      Display = "Radiopharmaceutical Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Total amount of radionuclide administered to the patient at Radiopharmaceutical Start Time
    /// </summary>
    public static readonly Coding RadionuclideTotalDose = new Coding
    {
      Code = "123006",
      Display = "Radionuclide Total Dose",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Activity per unit mass of the radiopharmaceutical at Radiopharmaceutical Start Time
    /// </summary>
    public static readonly Coding RadiopharmaceuticalSpecificActivity = new Coding
    {
      Code = "123007",
      Display = "Radiopharmaceutical Specific Activity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pre-injection syringe acquisition count rate
    /// </summary>
    public static readonly Coding RadionuclideSyringeCounts = new Coding
    {
      Code = "123009",
      Display = "Radionuclide Syringe Counts",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Syringe acquisition count rate following patient injection
    /// </summary>
    public static readonly Coding RadionuclideResidualSyringeCounts = new Coding
    {
      Code = "123010",
      Display = "Radionuclide Residual Syringe Counts",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Contrast or bolus agent
    /// </summary>
    public static readonly Coding ContrastBolusAgent = new Coding
    {
      Code = "123011",
      Display = "Contrast/Bolus Agent",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Medication to be administered at the beginning of the Scheduled Procedure Step
    /// </summary>
    public static readonly Coding PreMedication = new Coding
    {
      Code = "123012",
      Display = "Pre-Medication",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Anatomic Region to be imaged
    /// </summary>
    public static readonly Coding TargetRegion = new Coding
    {
      Code = "123014",
      Display = "Target Region",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Direction of imaging (includes view, transducer orientation, patient orientation, and/or projection)
    /// </summary>
    public static readonly Coding ImagingDirection = new Coding
    {
      Code = "123015",
      Display = "Imaging Direction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Imaging condition for refinement of protocol (includes secondary posture, instruction, X-Ray / electron beam energy or nuclide, and ultrasound modes), as used in JJ1017 v3.0
    /// </summary>
    public static readonly Coding ImagingConditions = new Coding
    {
      Code = "123016",
      Display = "Imaging Conditions",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Caudal 10 degree distal-cranioproximal oblique radiographic projection, defined per Smallwood et al
    /// </summary>
    public static readonly Coding Caudal10DegreeDistalCranioproximalOblique = new Coding
    {
      Code = "123019",
      Display = "Caudal 10 degree distal-cranioproximal oblique",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing utilizing predefined weighting factors (i.e., kernels) applied to different data values depending on their location relative to other data values within the data domain. Includes Low Pass, High Pass, Gaussian, Laplacian, etc.
    /// </summary>
    public static readonly Coding NeighborhoodAnalysis = new Coding
    {
      Code = "123101",
      Display = "Neighborhood Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing applied non-uniformly utilizing a priori knowledge of the system and/or relative locations of the data values within the data domain. Example: Neighborhood analysis where weighting factors are modified continuously based on predefined criteria
    /// </summary>
    public static readonly Coding AdaptiveFiltering = new Coding
    {
      Code = "123102",
      Display = "Adaptive Filtering",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing through the exploitation of discontinuities in the data values within their domain. Includes Gradient filters
    /// </summary>
    public static readonly Coding EdgeDetection = new Coding
    {
      Code = "123103",
      Display = "Edge Detection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing based on the connectivity of values based on the shape or structure of the data values within their domain. Includes erode, dilate, etc.
    /// </summary>
    public static readonly Coding MorphologicalOperations = new Coding
    {
      Code = "123104",
      Display = "Morphological Operations",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing applied to the distribution of the data values. Includes thresholding, Bayesian Classification, etc.
    /// </summary>
    public static readonly Coding HistogramAnalysis = new Coding
    {
      Code = "123105",
      Display = "Histogram Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing accomplished through varying the data domain size. Include deformable models
    /// </summary>
    public static readonly Coding MultiScaleResolutionFiltering = new Coding
    {
      Code = "123106",
      Display = "Multi-Scale/Resolution Filtering",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing accomplished by combining data values based on their relative location within their domain or value distribution. Includes K- and C-means, Fuzzy Analysis, Watershed, Seed Growing, etc.
    /// </summary>
    public static readonly Coding ClusterAnalysis = new Coding
    {
      Code = "123107",
      Display = "Cluster Analysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing accomplished through the weighted combination of multiple data sets. Includes Principle Component Analysis, linear and non-linear weighed combinations, etc.
    /// </summary>
    public static readonly Coding MultispectralProcessing = new Coding
    {
      Code = "123108",
      Display = "Multispectral Processing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing accomplished through human interaction. Region drawing
    /// </summary>
    public static readonly Coding ManualProcessing = new Coding
    {
      Code = "123109",
      Display = "Manual Processing",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing using Artificial Intelligence techniques, such as Machine Learning, Neural Networks, etc.
    /// </summary>
    public static readonly Coding ArtificialIntelligence = new Coding
    {
      Code = "123110",
      Display = "Artificial Intelligence",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Surface processing using Deformable Model techniques, such as Point Distribution Models, Level Sets, Simplex Meshes, etc.
    /// </summary>
    public static readonly Coding DeformableModels = new Coding
    {
      Code = "123111",
      Display = "Deformable Models",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Document Title of OB-GYN procedure report
    /// </summary>
    public static readonly Coding OBGYNUltrasoundProcedureReport = new Coding
    {
      Code = "125000",
      Display = "OB-GYN Ultrasound Procedure Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report section for assessment of fetal growth using ratios and indexes
    /// </summary>
    public static readonly Coding FetalBiometryRatios = new Coding
    {
      Code = "125001",
      Display = "Fetal Biometry Ratios",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report section for assessment of fetal growth
    /// </summary>
    public static readonly Coding FetalBiometry = new Coding
    {
      Code = "125002",
      Display = "Fetal Biometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report section for assessment of fetal growth by long bone measurements
    /// </summary>
    public static readonly Coding FetalLongBones = new Coding
    {
      Code = "125003",
      Display = "Fetal Long Bones",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report section for assessment of fetal cranium growth
    /// </summary>
    public static readonly Coding FetalCranium = new Coding
    {
      Code = "125004",
      Display = "Fetal Cranium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Biometric assessment of
    /// </summary>
    public static readonly Coding BiometryGroup = new Coding
    {
      Code = "125005",
      Display = "Biometry Group",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report section for assessment of biophysical observations that evaluate fetal well-being according to Manning, Antepartum Fetal Evaluation: Development of a Fetal Biophysical Profile Score, Am. J Obstet Gynecol, 1980;136:787
    /// </summary>
    public static readonly Coding BiophysicalProfile = new Coding
    {
      Code = "125006",
      Display = "Biophysical Profile",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A grouping of related measurements and calculations that share a common context
    /// </summary>
    public static readonly Coding MeasurementGroup = new Coding
    {
      Code = "125007",
      Display = "Measurement Group",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report section for fetus specific procedure summary observations
    /// </summary>
    public static readonly Coding FetusSummary = new Coding
    {
      Code = "125008",
      Display = "Fetus Summary",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report section for assessment of early gestation fetus
    /// </summary>
    public static readonly Coding EarlyGestation = new Coding
    {
      Code = "125009",
      Display = "Early Gestation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A name to differentiate between multiple instances of some item
    /// </summary>
    public static readonly Coding Identifier = new Coding
    {
      Code = "125010",
      Display = "Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Report section for assessment of pelvis and uterus
    /// </summary>
    public static readonly Coding PelvisAndUterus = new Coding
    {
      Code = "125011",
      Display = "Pelvis and Uterus",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The rank of a measured growth indicator relative to a normal distribution expressed as a percentage
    /// </summary>
    public static readonly Coding GrowthPercentileRank = new Coding
    {
      Code = "125012",
      Display = "Growth Percentile rank",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The rank of a measured growth indicator relative to a normal distribution expressed as the dimensionless quantity z = (x-m) /s where (x-m) is the deviation of the value x, from the distribution mean, m, and s is the standard deviation of the distribution
    /// </summary>
    public static readonly Coding GrowthZScore = new Coding
    {
      Code = "125013",
      Display = "Growth Z-score",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fetus characteristics (findings section title)
    /// </summary>
    public static readonly Coding FetusCharacteristics = new Coding
    {
      Code = "125015",
      Display = "Fetus Characteristics",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fetal Measurements (findings section title)
    /// </summary>
    public static readonly Coding FetalMeasurements = new Coding
    {
      Code = "125016",
      Display = "Fetal Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// There is a defined equivalence between the Frame of Reference of the Registration SOP instance and the Frame of Reference of the referenced images
    /// </summary>
    public static readonly Coding FrameOfReferenceIdentity = new Coding
    {
      Code = "125021",
      Display = "Frame of Reference Identity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The registration is based on fiducials that represent patient or specimen features identified in each data set
    /// </summary>
    public static readonly Coding FiducialAlignment = new Coding
    {
      Code = "125022",
      Display = "Fiducial Alignment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration based on a-priori knowledge of the acquisition geometry. This is not an object registration as in fiducial registration. Rather, it specifies a known spatial relationship
    /// </summary>
    public static readonly Coding AcquisitionEquipmentAlignment = new Coding
    {
      Code = "125023",
      Display = "Acquisition Equipment Alignment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Computed registration based on global image information
    /// </summary>
    public static readonly Coding ImageContentBasedAlignment = new Coding
    {
      Code = "125024",
      Display = "Image Content-based Alignment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration by visually guided manipulation
    /// </summary>
    public static readonly Coding VisualAlignment = new Coding
    {
      Code = "125025",
      Display = "Visual Alignment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A plane fiducial that specifies the location of the plane separating the two hemispheres of the brain
    /// </summary>
    public static readonly Coding InterHemisphericPlane = new Coding
    {
      Code = "125030",
      Display = "Inter-Hemispheric Plane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A point fiducial that specifies the location in the plane perpendicular to the Anterior- Posterior-Commissure axis and tangential to the anterior limit of the right brain hemisphere
    /// </summary>
    public static readonly Coding RightHemisphereMostAnterior = new Coding
    {
      Code = "125031",
      Display = "Right Hemisphere Most Anterior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A point fiducial that specifies the location in the plane perpendicular to the Anterior- Posterior-Commissure axis and tangential to the posterior limit of the right brain hemisphere
    /// </summary>
    public static readonly Coding RightHemisphereMostPosterior = new Coding
    {
      Code = "125032",
      Display = "Right Hemisphere Most Posterior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A point fiducial that specifies the location in the plane perpendicular to the Anterior- Posterior-Commissure axis and tangential to the superior limit of the right brain hemisphere
    /// </summary>
    public static readonly Coding RightHemisphereMostSuperior = new Coding
    {
      Code = "125033",
      Display = "Right Hemisphere Most Superior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A point fiducial that specifies the location in the plane perpendicular to the Anterior- Posterior-Commissure axis and tangential to the inferior limit of the Right brain hemisphere
    /// </summary>
    public static readonly Coding RightHemisphereMostInferior = new Coding
    {
      Code = "125034",
      Display = "Right Hemisphere Most Inferior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A point fiducial that specifies the location in the plane perpendicular to the Anterior- Posterior-Commissure axis and tangential to the anterior limit of the left brain hemisphere
    /// </summary>
    public static readonly Coding LeftHemisphereMostAnterior = new Coding
    {
      Code = "125035",
      Display = "Left Hemisphere Most Anterior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A point fiducial that specifies the location in the plane perpendicular to the Anterior- Posterior-Commissure axis and tangential to the posterior limit of the left brain hemisphere
    /// </summary>
    public static readonly Coding LeftHemisphereMostPosterior = new Coding
    {
      Code = "125036",
      Display = "Left Hemisphere Most Posterior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A point fiducial that specifies the location in the plane perpendicular to the Anterior- Posterior-Commissure axis and tangential to the superior limit of the left brain hemisphere
    /// </summary>
    public static readonly Coding LeftHemisphereMostSuperior = new Coding
    {
      Code = "125037",
      Display = "Left Hemisphere Most Superior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A point fiducial that specifies the location in the plane perpendicular to the Anterior- Posterior-Commissure axis and tangential to the inferior limit of the left brain hemisphere
    /// </summary>
    public static readonly Coding LeftHemisphereMostInferior = new Coding
    {
      Code = "125038",
      Display = "Left Hemisphere Most Inferior",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// That which is not part of an object
    /// </summary>
    public static readonly Coding Background = new Coding
    {
      Code = "125040",
      Display = "Background",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A segment for use as an input to an image registration process; e.g. to specify the bounding region for determining a Frame of Reference Transformation Matrix
    /// </summary>
    public static readonly Coding RegistrationInput = new Coding
    {
      Code = "125041",
      Display = "Registration Input",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Root Document Title for ultrasound vascular evidence reports (worksheets)
    /// </summary>
    public static readonly Coding VascularUltrasoundProcedureReport = new Coding
    {
      Code = "125100",
      Display = "Vascular Ultrasound Procedure Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The particular vessel branch, such as the inferior, medial or lateral
    /// </summary>
    public static readonly Coding VesselBranch = new Coding
    {
      Code = "125101",
      Display = "Vessel Branch",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A descriptor or elaboration of the type of graft
    /// </summary>
    public static readonly Coding GraftType = new Coding
    {
      Code = "125102",
      Display = "Graft Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A modifier to a 2D distance measurement to describe its orientation; e.g. a vascular distance measurement for a vessel plague could have a modifier Transverse or Longitudinal
    /// </summary>
    public static readonly Coding MeasurementOrientation = new Coding
    {
      Code = "125105",
      Display = "Measurement Orientation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The angle formed between the Doppler beam line and the direction of blood flow within a region of interest in the body defined by the sample volume
    /// </summary>
    public static readonly Coding DopplerAngle = new Coding
    {
      Code = "125106",
      Display = "Doppler Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The depth of the center of the Doppler sample volume measured from skin line along the Doppler line
    /// </summary>
    public static readonly Coding SampleVolumeDepth = new Coding
    {
      Code = "125107",
      Display = "Sample Volume Depth",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Pediatric Cardiac Ultrasound Report (document title)
    /// </summary>
    public static readonly Coding PediatricCardiacUltrasoundReport = new Coding
    {
      Code = "125195",
      Display = "Pediatric Cardiac Ultrasound Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Fetal Cardiac Ultrasound Report (document title)
    /// </summary>
    public static readonly Coding FetalCardiacUltrasoundReport = new Coding
    {
      Code = "125196",
      Display = "Fetal Cardiac Ultrasound Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Adult Congenital Cardiac Ultrasound Report (document title)
    /// </summary>
    public static readonly Coding AdultCongenitalCardiacUltrasoundReport = new Coding
    {
      Code = "125197",
      Display = "Adult Congenital Cardiac Ultrasound Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Document title of adult echocardiography procedure (evidence) report
    /// </summary>
    public static readonly Coding AdultEchocardiographyProcedureReport = new Coding
    {
      Code = "125200",
      Display = "Adult Echocardiography Procedure Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An image that is a pictorial representation of findings. The concept is typically used as a purpose of reference to an image, such as a depiction of myocardium segments depicting wall motion function
    /// </summary>
    public static readonly Coding IllustrationOfFinding = new Coding
    {
      Code = "125201",
      Display = "Illustration of Finding",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The average of all scored (non-zero) Left Ventricle segment wall motion scores
    /// </summary>
    public static readonly Coding LVWallMotionScoreIndex = new Coding
    {
      Code = "125202",
      Display = "LV Wall Motion Score Index",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A type of clinical acquisition protocol for creating images or image-derived measurements. Acquisition protocols may be specific to a manufacturer's product
    /// </summary>
    public static readonly Coding AcquisitionProtocol = new Coding
    {
      Code = "125203",
      Display = "Acquisition Protocol",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method for calculating left ventricular volume from two orthogonal views containing the true long axis (usually the apical 4 and 2 chamber views). Volume = [pL1 / 6] * [(4A1) ÷ (pL1) ] * [(4A2) ÷ (pL2) ]
    /// </summary>
    public static readonly Coding AreaLengthBiplane = new Coding
    {
      Code = "125204",
      Display = "Area-length biplane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method for calculating left ventricular volume from a view containing the true long axis (usually the apical 4-chamber view). Volume = [8(A)2]÷[3pL]
    /// </summary>
    public static readonly Coding AreaLengthSinglePlane = new Coding
    {
      Code = "125205",
      Display = "Area-Length Single Plane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method (formula) for calculating left ventricle volumes and function derivatives (EF, SV, SI, etc.) that estimates the volume as the cube of diameter
    /// </summary>
    public static readonly Coding Cube = new Coding
    {
      Code = "125206",
      Display = "Cube",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of calculating volume based on the summation of disk volumes. The disk axis is parallel to the left ventricular long axis and using a disk diameter averaged from the two chamber and four chamber views
    /// </summary>
    public static readonly Coding MethodOfDisksBiplane = new Coding
    {
      Code = "125207",
      Display = "Method of Disks, Biplane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of calculating volume based on the summation of disk volumes. The disk axis is parallel to the left ventricular long axis with disk diameter taken from the four-chamber view
    /// </summary>
    public static readonly Coding MethodOfDisksSinglePlane = new Coding
    {
      Code = "125208",
      Display = "Method of Disks, Single Plane",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method (formula) for calculating left ventricle volumes and function derivatives (EF, SV, SI, etc.) Volume = [7.0/(2.4+D) ]*D3
    /// </summary>
    public static readonly Coding Teichholz = new Coding
    {
      Code = "125209",
      Display = "Teichholz",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mitral valve area (cm2) by Pressure Half-time = 220 (cm2.ms) / PHT (ms)
    /// </summary>
    public static readonly Coding AreaByPressureHalfTime = new Coding
    {
      Code = "125210",
      Display = "Area by Pressure Half-Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Area = P/4 X d1 X d2 d1 = anterior/posterior axis d2 = medial/lateral axis Hagen-Ansert, Sandra L., Textbook of Diagnostic Ultrasound, ed. 3, The C.V.Mosby Co., 1989, p. 73. 
    /// </summary>
    public static readonly Coding BiplaneEllipse = new Coding
    {
      Code = "125211",
      Display = "Biplane Ellipse",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For conduits in series ("in continuity"), volume flow is equal: A1*V1 = A2*V2. where V is the velocity
    /// </summary>
    public static readonly Coding ContinuityEquation = new Coding
    {
      Code = "125212",
      Display = "Continuity Equation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For conduits in series ("in continuity"), volume flow is equal: A1*V1 = A2*V2. where V is the mean velocity
    /// </summary>
    public static readonly Coding ContinuityEquationByMeanVelocity = new Coding
    {
      Code = "125213",
      Display = "Continuity Equation by Mean Velocity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For conduits in series ("in continuity"), volume flow is equal: A1*V1 = A2*V2. where V is the peak velocity
    /// </summary>
    public static readonly Coding ContinuityEquationByPeakVelocity = new Coding
    {
      Code = "125214",
      Display = "Continuity Equation by Peak Velocity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For conduits in series ("in continuity"), volume flow is equal: A1*V1 = A2*V2. where V is the velocity time integral
    /// </summary>
    public static readonly Coding ContinuityEquationByVelocityTimeIntegral = new Coding
    {
      Code = "125215",
      Display = "Continuity Equation by Velocity Time Integral",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Utilizes aliasing velocity (by color Doppler) of flow into an orifice (often regurgitant or stenotic) to measure instantaneous flow rate, orifice area, and flow volume. The instantaneous flow rate = (2πr2vav ) * (α / π) where vav is the constant velocity known as aliasing velocity at radius r, vp is the peak velocity at the orifice, and α is the angle in radians of the constant velocity surface. Estimated Orifice area = Flow rate / vp , where vp is the peak velocity at the orifice and the flow rate is the PISA peak flow rate. The volume flow is then the product of the orifice area and Velocity Time Integral
    /// </summary>
    public static readonly Coding ProximalIsovelocitySurfaceArea = new Coding
    {
      Code = "125216",
      Display = "Proximal Isovelocity Surface Area",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ΔP = 4*(V12 - V22)
    /// </summary>
    public static readonly Coding FullBernoulli = new Coding
    {
      Code = "125217",
      Display = "Full Bernoulli",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ΔP = 4*V2
    /// </summary>
    public static readonly Coding SimplifiedBernoulli = new Coding
    {
      Code = "125218",
      Display = "Simplified Bernoulli",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Volume flow = Conduit CSA * (Velocity Time Integral)
    /// </summary>
    public static readonly Coding DopplerVolumeFlow = new Coding
    {
      Code = "125219",
      Display = "Doppler Volume Flow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Direct measurement of an area by tracing an irregular perimeter
    /// </summary>
    public static readonly Coding Planimetry = new Coding
    {
      Code = "125220",
      Display = "Planimetry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mass = 1.04 * [(ST+LVID+PWT)3 - LVID3] * 0.8+ 0.6. Mass unit is grams and length in cm
    /// </summary>
    public static readonly Coding LeftVentricleMassByMMode = new Coding
    {
      Code = "125221",
      Display = "Left Ventricle Mass by M-mode",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mass = 1.05P ((b + t)2 X (2/3 (a + t) + d - d3 /3(a + t)2) - b2 (2/3a + d - d3 /3a2)) a = Semi-major axis from widest minor axis radius to apex. b = Short axis radius calculated from short axis cavity area t = Myocardial thickness calculated from short axis epicardial and cavity areas d = Truncated semi-major axis from widest short axis diameter to plane of mitral annulus. Mass unit is grams and length in cm. Schiller NB et al: Recommendations for quantification of the left ventricle by two-dimensional echocardiography, American Society of Echocardiography 2:364, 1989. 
    /// </summary>
    public static readonly Coding LeftVentricleMassByTruncatedEllipse = new Coding
    {
      Code = "125222",
      Display = "Left Ventricle Mass by Truncated Ellipse",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A four point, echocardiographic numeric scoring scheme of myocardium segments based on evaluation of wall motion and ventricle morphology. Recommendations for Quantitation of the Left Ventricle by Two-Dimensional Echocardiography, Journal of the American Society of Echocardiography, 2:358-367, 1989
    /// </summary>
    public static readonly Coding VAL4PointSegmentFindingScale = new Coding
    {
      Code = "125223",
      Display = "4 Point Segment Finding Scale",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A five point, echocardiographic numeric scoring scheme of myocardium segments based on evaluation of wall motion and ventricle morphology. Recommendations for Quantitation of the Left Ventricle by Two-Dimensional Echocardiography, Journal of the American Society of Echocardiography, 2:358-367, 1989
    /// </summary>
    public static readonly Coding VAL5PointSegmentFindingScale = new Coding
    {
      Code = "125224",
      Display = "5 Point Segment Finding Scale",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A five point, echocardiographic numeric scoring scheme of myocardium segments based on evaluation of wall motion and ventricle morphology, with severity of hypokinesis graded. Recommendations for Quantitation of the Left Ventricle by Two-Dimensional Echocardiography, Journal of the American Society of Echocardiography, 2:358-367, 1989
    /// </summary>
    public static readonly Coding VAL5PointSegmentFindingScaleWithGradedHypokinesis = new Coding
    {
      Code = "125225",
      Display = "5 Point Segment Finding Scale With Graded Hypokinesis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of estimating volume from a planar ellipse. Equivalent to Biplane Ellipse with an assumption that the ellipse in the orthogonal plane has identical major and minor diameters
    /// </summary>
    public static readonly Coding SinglePlaneEllipse = new Coding
    {
      Code = "125226",
      Display = "Single Plane Ellipse",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Modified Simpson's Method of estimating ventricular volume, based on the method of disks with paired apical views. Schiller NB, et al. "Recommendations for quantitation of the left ventricle by two-dimensional echocardiography. American Society of Echocardiography Committee on Standards, Subcommittee on Quantitation of Two-Dimensional Echocardiograms". J Am Soc Echocardiogr.1989 2(5):358-367. Sep-Oct
    /// </summary>
    public static readonly Coding ModifiedSimpson = new Coding
    {
      Code = "125227",
      Display = "Modified Simpson",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Bullet method of estimating ventricular volume. Volume = 5/6 * L * S L: Left ventricle long axis length S: Left ventricle area, SAX view at level of Mitral Valve
    /// </summary>
    public static readonly Coding BulletMethod = new Coding
    {
      Code = "125228",
      Display = "Bullet Method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Onset of administration of dose of a drug
    /// </summary>
    public static readonly Coding StartOfDrugDoseAdministration = new Coding
    {
      Code = "125233",
      Display = "Start of drug dose administration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Onset of contrast agent administration
    /// </summary>
    public static readonly Coding StartOfContrastAgentAdministration = new Coding
    {
      Code = "125234",
      Display = "Start of contrast agent administration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Destruction of ultrasonic contrast microbubbles by a high-energy ultrasound pulse
    /// </summary>
    public static readonly Coding DestructionOfMicrobubbles = new Coding
    {
      Code = "125235",
      Display = "Destruction of microbubbles",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instant at which exercise begins
    /// </summary>
    public static readonly Coding OnsetOfExercise = new Coding
    {
      Code = "125236",
      Display = "Onset of exercise",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instant at which exercise ends
    /// </summary>
    public static readonly Coding CessationOfExercise = new Coding
    {
      Code = "125237",
      Display = "Cessation of exercise",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instant at which stimulation begins
    /// </summary>
    public static readonly Coding OnsetOfStimulation = new Coding
    {
      Code = "125238",
      Display = "Onset of stimulation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instant at which stimulation ends
    /// </summary>
    public static readonly Coding CessationOfStimulation = new Coding
    {
      Code = "125239",
      Display = "Cessation of stimulation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasound transducer scan pattern in which information is gathered along a line
    /// </summary>
    public static readonly Coding LineScanPattern = new Coding
    {
      Code = "125240",
      Display = "Line scan pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasound transducer scan pattern in which information is gathered within a plane
    /// </summary>
    public static readonly Coding PlaneScanPattern = new Coding
    {
      Code = "125241",
      Display = "Plane scan pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasound transducer scan pattern in which information is gathered within a volume
    /// </summary>
    public static readonly Coding VolumeScanPattern = new Coding
    {
      Code = "125242",
      Display = "Volume scan pattern",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasound transducer geometry characterized by a single scan line used for PW or CW Doppler scanning
    /// </summary>
    public static readonly Coding NonImagingDopplerUltrasoundTransducerGeometry = new Coding
    {
      Code = "125251",
      Display = "Non-imaging Doppler ultrasound transducer geometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasonic transducer geometry characterized by parallel lines
    /// </summary>
    public static readonly Coding LinearUltrasoundTransducerGeometry = new Coding
    {
      Code = "125252",
      Display = "Linear ultrasound transducer geometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasonic transducer geometry characterized by radial lines normal to the outside of a curved surface
    /// </summary>
    public static readonly Coding CurvedLinearUltrasoundTransducerGeometry = new Coding
    {
      Code = "125253",
      Display = "Curved linear ultrasound transducer geometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasonic transducer geometry characterized by lines originating from a common apex
    /// </summary>
    public static readonly Coding SectorUltrasoundTransducerGeometry = new Coding
    {
      Code = "125254",
      Display = "Sector ultrasound transducer geometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasonic transducer geometry characterized by lines emanating radially from a single point
    /// </summary>
    public static readonly Coding RadialUltrasoundTransducerGeometry = new Coding
    {
      Code = "125255",
      Display = "Radial ultrasound transducer geometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasonic transducer geometry characterized by a circular ring of transducer elements
    /// </summary>
    public static readonly Coding RingUltrasoundTransducerGeometry = new Coding
    {
      Code = "125256",
      Display = "Ring ultrasound transducer geometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasonic steering technique consisting of a single beam normal to the transducer face steered by the orientation of the probe
    /// </summary>
    public static readonly Coding FixedBeamDirection = new Coding
    {
      Code = "125257",
      Display = "Fixed beam direction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasonic steering technique consisting of mechanically directing the beam
    /// </summary>
    public static readonly Coding MechanicalBeamSteering = new Coding
    {
      Code = "125258",
      Display = "Mechanical beam steering",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasonic steering technique consisting of electronically-steered beams
    /// </summary>
    public static readonly Coding PhasedBeamSteering = new Coding
    {
      Code = "125259",
      Display = "Phased beam steering",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Transducer is designed to be placed onto the surface of the subject
    /// </summary>
    public static readonly Coding ExternalTransducer = new Coding
    {
      Code = "125261",
      Display = "External Transducer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Transducer is designed for insertion into the esophagus
    /// </summary>
    public static readonly Coding TransesophagealTransducer = new Coding
    {
      Code = "125262",
      Display = "Transesophageal Transducer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Transducer is designed for insertion into the vagina
    /// </summary>
    public static readonly Coding EndovaginalTransducer = new Coding
    {
      Code = "125263",
      Display = "Endovaginal Transducer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Transducer is designed for insertion into the rectum
    /// </summary>
    public static readonly Coding EndorectalTransducer = new Coding
    {
      Code = "125264",
      Display = "Endorectal Transducer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Transducer is designed for insertion via a catheter
    /// </summary>
    public static readonly Coding IntravascularTransducer = new Coding
    {
      Code = "125265",
      Display = "Intravascular Transducer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// method to measure the mass of the Left Ventricle via the ASE area-length method at end diastole. LV Mass = 1.05*(5/6*(A1*(L+t)) - 5/6*(A2*L)) A1 = Left Ventricle epicardial SAX area at the level of the papillary muscle tips at end diastole. A2 = Left Ventricle endocardial SAX area cavity area at the level of the papillary muscle tips at end diastole. L = Left Ventricle apical view long axis length at end diastole. t = Myocardial thickness can be computed as: t = sqrt (A1/3.14) - sqrt (A2/3.14) Reference: 1) Schiller, N.B., et al. "Recommendations for Quantification of the LV by Two-dimensional Echocardiography." J Am Soc Echo, Vol. 2, No. 5: 358-367, Sep-Oct 1989. 2) Reichek, N., et al. "Anatomic Validation of Left Ventricular Mass Estimates from Clinical Two-dimensional Echocardiography: Initial Results." Circulation, Vol. 67, No. 2: 348-52, February 1983
    /// </summary>
    public static readonly Coding LeftVentricleMassByAreaLength = new Coding
    {
      Code = "125270",
      Display = "Left Ventricle Mass by Area Length",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equation = Left Ventricle Mass by M-mode (in gram) / (Height (in meter)) ^2.7 Reference: Giovanni De Simone, et al. "Effect of Growth on Variability of Left Ventricular Mass: Assessment of Allometric Signals in Adults and Children and Their Capacity to Predict Cardiovascular Risk". New York, New York and Cincinnati, Ohio
    /// </summary>
    public static readonly Coding LeftVentricleMassByMModeAdjustedByHeight = new Coding
    {
      Code = "125271",
      Display = "Left Ventricle Mass by M-mode - adjusted by Height",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equation = Left Ventricle Mass by Truncated Ellipse / Height^2.7 Reference: Giovanni De Simone, et al. "Effect of Growth on Variability of Left Ventricular Mass: Assessment of Allometric Signals in Adults and Children and Their Capacity to Predict Cardiovascular Risk". New York, New York and Cincinnati, Ohio
    /// </summary>
    public static readonly Coding LeftVentricleMassByTruncatedEllipseAdjustedByHeight = new Coding
    {
      Code = "125272",
      Display = "Left Ventricle Mass by Truncated Ellipse - adjusted by Height",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equation = Left Ventricle Mass by Area Length / Height^2.7 Reference: Giovanni De Simone, et al. "Effect of Growth on Variability of Left Ventricular Mass: Assessment of Allometric Signals in Adults and Children and Their Capacity to Predict Cardiovascular Risk". New York, New York and Cincinnati, Ohio
    /// </summary>
    public static readonly Coding LeftVentricleMassByAreaLengthAdjustedByHeight = new Coding
    {
      Code = "125273",
      Display = "Left Ventricle Mass by Area Length - adjusted by Height",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// CARDIOsphere ultrasonic contrast agent produced by POINT Biomedical
    /// </summary>
    public static readonly Coding CARDIOsphere = new Coding
    {
      Code = "125901",
      Display = "CARDIOsphere",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Echovist® ultrasonic contrast agent produced by Schering AG
    /// </summary>
    public static readonly Coding Echovist = new Coding
    {
      Code = "125902",
      Display = "Echovist",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Imagify ultrasonic contrast agent produced by Accusphere Inc
    /// </summary>
    public static readonly Coding Imagify = new Coding
    {
      Code = "125903",
      Display = "Imagify",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Levovist® ultrasonic contrast agent produced by Schering AG
    /// </summary>
    public static readonly Coding Levovist = new Coding
    {
      Code = "125904",
      Display = "Levovist",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Sonazoid ultrasonic contrast agent produced by Daiichi Pharmaceutical / General Electric
    /// </summary>
    public static readonly Coding Sonazoid = new Coding
    {
      Code = "125905",
      Display = "Sonazoid",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// SonoVue ultrasonic contrast agent produced by Bracco Diagnostics
    /// </summary>
    public static readonly Coding SonoVue = new Coding
    {
      Code = "125906",
      Display = "SonoVue",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Targestar-B ultrasonic contrast agent produced by Targeson LLC
    /// </summary>
    public static readonly Coding TargestarB = new Coding
    {
      Code = "125907",
      Display = "Targestar-B",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Targestar-P ultrasonic contrast agent produced by Targeson LLC
    /// </summary>
    public static readonly Coding TargestarP = new Coding
    {
      Code = "125908",
      Display = "Targestar-P",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A structured report containing the quantitative results of human or machine analysis of images
    /// </summary>
    public static readonly Coding ImagingMeasurementReport = new Coding
    {
      Code = "126000",
      Display = "Imaging Measurement Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A structured report containing the quantitative results of human or machine analysis of images for oncology evaluation
    /// </summary>
    public static readonly Coding OncologyMeasurementReport = new Coding
    {
      Code = "126001",
      Display = "Oncology Measurement Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A structured report containing the quantitative results of human or machine analysis of DCE-MR
    /// </summary>
    public static readonly Coding DynamicContrastMRMeasurementReport = new Coding
    {
      Code = "126002",
      Display = "Dynamic Contrast MR Measurement Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A structured report containing the quantitative results of human or machine analysis of PET images
    /// </summary>
    public static readonly Coding PETMeasurementReport = new Coding
    {
      Code = "126003",
      Display = "PET Measurement Report",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurements made on images
    /// </summary>
    public static readonly Coding ImagingMeasurements = new Coding
    {
      Code = "126010",
      Display = "Imaging Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurements derived from measurements made on images
    /// </summary>
    public static readonly Coding DerivedImagingMeasurements = new Coding
    {
      Code = "126011",
      Display = "Derived Imaging Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An MRI procedure in which multiple parameters including diffusion, dynamic contrast and T2 are measured
    /// </summary>
    public static readonly Coding MultiparametricMRI = new Coding
    {
      Code = "126020",
      Display = "Multiparametric MRI",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An MRI procedure of the prostate in which multiple parameters including diffusion, dynamic contrast and T2 are measured
    /// </summary>
    public static readonly Coding MultiparametricMRIOfProstate = new Coding
    {
      Code = "126021",
      Display = "Multiparametric MRI of prostate",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An MRI procedure of the whole body in which multiple parameters including diffusion, dynamic contrast and T2 are measured
    /// </summary>
    public static readonly Coding MultiparametricMRIOfWholeBody = new Coding
    {
      Code = "126022",
      Display = "Multiparametric MRI of whole body",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The volume derived by summing the volumes of all the voxels (and partial voxels if the segment contains partially occupied voxels) included in the segment
    /// </summary>
    public static readonly Coding SumOfSegmentedVoxelVolumes = new Coding
    {
      Code = "126030",
      Display = "Sum of segmented voxel volumes",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Maximum average gray value that is calculated from a 1 cubic centimeter sphere placed within the region of interest. Reference Wahl et al PERCIST article
    /// </summary>
    public static readonly Coding PeakValueWithinROI = new Coding
    {
      Code = "126031",
      Display = "Peak Value Within ROI",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The volume of a lesion (e.g. a tumor) ascertained through information about its metabolic activity (e.g. SUV on PET). Abbreviated "MV". Synonymous with Metabolic Tumor Volume (MTV)
    /// </summary>
    public static readonly Coding MetabolicVolume = new Coding
    {
      Code = "126032",
      Display = "Metabolic Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The total activity of a lesion obtained as the product of its volume and its glycolytic activity (on FDG-PET). The volume may be defined on the same modality (e.g. the MV on FDG-PET by some thresholding or other technique) or on another spatially registered modality (e.g. the lesion outline segmented on CT or MR). Does not apply to other radiopharmaceuticals than those involved in glucose metabolism. Abbreviated TLG. Synonymnous with "Tumor Lesion Glycolysis"
    /// </summary>
    public static readonly Coding TotalLesionGlycolysis = new Coding
    {
      Code = "126033",
      Display = "Total Lesion Glycolysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The amount glycolytic activity summed across all voxels in a defined region or within a defined range of SUV (on FDG-PET)
    /// </summary>
    public static readonly Coding Glycolysis = new Coding
    {
      Code = "126034",
      Display = "Glycolysis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The total activity of a lesion obtained as the product of its volume and its proliferative activity (on FLT-PET). The volume may be defined on the same modality (e.g. the MV on FDG-PET by some thresholding or other technique) or on another spatially registered modality (e.g. the lesion outline segmented on CT or MR). Does not apply to other radiopharmaceuticals than those involved in cellular proliferation. Abbreviated TLP. Synonymnous with "Tumor Lesion Proliferation"
    /// </summary>
    public static readonly Coding TotalLesionProliferation = new Coding
    {
      Code = "126035",
      Display = "Total Lesion Proliferation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The amount proliferative activity summed across all voxels in a defined region or within a defined range of SUV (on FLT-PET)
    /// </summary>
    public static readonly Coding ProliferativeActivity = new Coding
    {
      Code = "126036",
      Display = "Proliferative Activity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A background-corrected, partial volume independent version of TLG. SAM is calculated by drawing a volume of interest (VOI1) around the tumour and a larger VOI (VOI2) around VOI1. Subtracting the background activity in VOI2-VOI1 from VOI1 yields SAM. See Mertens et al. "Standardized added metabolic activity (SAM): a partial volume independent marker of total lesion glycolysis in liver metastases". Eur J Nucl Med Mol Imaging (2012) 39:1441-1448
    /// </summary>
    public static readonly Coding StandardizedAddedMetabolicActivitySAM = new Coding
    {
      Code = "126037",
      Display = "Standardized Added Metabolic Activity (SAM)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The background value (VOI2-VOI1) used to calculate Standardized Added Metabolic Activity (SAM). SAM is calculated by drawing a volume of interest (VOI1) around the tumour and a larger VOI (VOI2) around VOI1. Subtracting the background activity in VOI2-VOI1 from VOI1 yields SAM. See Mertens et al. "Standardized added metabolic activity (SAM): a partial volume independent marker of total lesion glycolysis in liver metastases". Eur J Nucl Med Mol Imaging (2012) 39:1441-1448
    /// </summary>
    public static readonly Coding StandardizedAddedMetabolicActivitySAMBackground = new Coding
    {
      Code = "126038",
      Display = "Standardized Added Metabolic Activity (SAM) Background",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The ratio of the SUV within a tumor to the SUV of a pre-defined background region. Need reference(s). A more general concept than Tumor to Background Ratio (TBR)
    /// </summary>
    public static readonly Coding LesionToBackgroundSUVRatio = new Coding
    {
      Code = "126039",
      Display = "Lesion to Background SUV Ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The SUV of a pre-defined background region used to compute Lesion to Background SUV Ratio. Need reference(s)
    /// </summary>
    public static readonly Coding BackgroundForLesionToBackgroundSUVRatio = new Coding
    {
      Code = "126040",
      Display = "Background for Lesion to Background SUV Ratio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A statistical index of complexity comparing how detail in a fractal pattern changes with the scale at which it is measured; a ratio of the change in detail to the change in scale
    /// </summary>
    public static readonly Coding FractalDimension = new Coding
    {
      Code = "126050",
      Display = "Fractal Dimension",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measure of the asymmetry of the probability distribution of a real-valued random variable about its mean
    /// </summary>
    public static readonly Coding Skewness = new Coding
    {
      Code = "126051",
      Display = "Skewness",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measure of the peakedness of the probability distribution of a real-valued random variable
    /// </summary>
    public static readonly Coding Kurtosis = new Coding
    {
      Code = "126052",
      Display = "Kurtosis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The zero order entropy of a Gray Level Co-occurrence Matrix (GLCM). A measure of disorder. See http://www.fp.ucalgary.ca/mhallbey/equations.htm
    /// </summary>
    public static readonly Coding EntropyOfGLCM = new Coding
    {
      Code = "126060",
      Display = "Entropy of GLCM",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The energy (uniformity) (square root of the Angular Second Moment (ASM)) of a Gray Level Co-occurrence Matrix (GLCM). A measure of orderliness. See http://www.fp.ucalgary.ca/mhallbey/equations.htm
    /// </summary>
    public static readonly Coding EnergyOfGLCM = new Coding
    {
      Code = "126061",
      Display = "Energy of GLCM",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Inverse Difference Moment of a Gray Level Co-occurrence Matrix (GLCM). See http://www.fp.ucalgary.ca/mhallbey/equations.htm
    /// </summary>
    public static readonly Coding HomogeneityOfGLCM = new Coding
    {
      Code = "126062",
      Display = "Homogeneity of GLCM",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The sum of squares variance of a Gray Level Co-occurrence Matrix (GLCM). See http://www.fp.ucalgary.ca/mhallbey/equations.htm
    /// </summary>
    public static readonly Coding ContrastOfGLCM = new Coding
    {
      Code = "126063",
      Display = "Contrast of GLCM",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The dissimilarity of a Gray Level Co-occurrence Matrix (GLCM). See http://www.fp.ucalgary.ca/mhallbey/equations.htm
    /// </summary>
    public static readonly Coding DissimilarityOfGLCM = new Coding
    {
      Code = "126064",
      Display = "Dissimilarity of GLCM",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The Angular Second Moment of a Gray Level Co-occurrence Matrix (GLCM). See http://www.fp.ucalgary.ca/mhallbey/equations.htm
    /// </summary>
    public static readonly Coding ASMOfGLCM = new Coding
    {
      Code = "126065",
      Display = "ASM of GLCM",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A measure of the linear dependency of grey levels on those of neighbouring pixels of a Gray Level Co-occurrence Matrix (GLCM). See http://www.fp.ucalgary.ca/mhallbey/equations.htm
    /// </summary>
    public static readonly Coding CorrelationOfGLCM = new Coding
    {
      Code = "126066",
      Display = "Correlation of GLCM",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A tabulation of how often different combinations of pixel values (grey levels) occur in an image. See http://www.fp.ucalgary.ca/mhallbey/the_glcm.htm
    /// </summary>
    public static readonly Coding GrayLevelCoOccurrenceMatrixGLCM = new Coding
    {
      Code = "126067",
      Display = "Gray Level Co-occurrence Matrix (GLCM)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An identifier of a specific time point in a continuum, which is unique within an appropriate local context (such as an entire organization, system or treatment protocol), which identifies the time point for a specific patient
    /// </summary>
    public static readonly Coding SubjectTimePointIdentifier = new Coding
    {
      Code = "126070",
      Display = "Subject Time Point Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An identifier of a specific time point in a continuum, which is unique within an appropriate local context (such as an entire organization, system or treatment protocol), which identifies the time point "slot" within a treatment protocol using the same value for all patients in the protocol
    /// </summary>
    public static readonly Coding ProtocolTimePointIdentifier = new Coding
    {
      Code = "126071",
      Display = "Protocol Time Point Identifier",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A pre-defined type of a specific time point in a continuum
    /// </summary>
    public static readonly Coding TimePointType = new Coding
    {
      Code = "126072",
      Display = "Time Point Type",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A number indicating the order of a time point relative to other time points in the same continuum
    /// </summary>
    public static readonly Coding TimePointOrder = new Coding
    {
      Code = "126073",
      Display = "Time Point Order",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time after the treatment of interest
    /// </summary>
    public static readonly Coding Posttreatment = new Coding
    {
      Code = "126074",
      Display = "Posttreatment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// For the purpose of determining eligibility for a protocol
    /// </summary>
    public static readonly Coding Eligibility = new Coding
    {
      Code = "126075",
      Display = "Eligibility",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Response Evaluation Criteria in Solid Tumors version 1.0. See [RECIST] in Normative References
    /// </summary>
    public static readonly Coding RECIST10 = new Coding
    {
      Code = "126080",
      Display = "RECIST 1.0",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Response Evaluation Criteria in Solid Tumors Version 1.1. See Eisenhauer et al. "New Response Evaluation Criteria in Solid Tumours: Revised RECIST Guideline (version 1.1)." European Journal of Cancer 45, no. 2 (n.d.): 228-47. doi:10.1016/j.ejca.2008.10.026.
    /// </summary>
    public static readonly Coding RECIST11 = new Coding
    {
      Code = "126081",
      Display = "RECIST 1.1",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A reference to the Real World Value Map applied to the stored image pixel values before their use for a measurement
    /// </summary>
    public static readonly Coding RealWorldValueMapUsedForMeasurement = new Coding
    {
      Code = "126100",
      Display = "Real World Value Map used for measurement",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A container that groups common information about a set of images used as evidence to produce a report
    /// </summary>
    public static readonly Coding ImageLibraryGroup = new Coding
    {
      Code = "126200",
      Display = "Image Library Group",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The date the acquisition of data started
    /// </summary>
    public static readonly Coding AcquisitionDate = new Coding
    {
      Code = "126201",
      Display = "Acquisition Date",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time the acquisition of data started
    /// </summary>
    public static readonly Coding AcquisitionTime = new Coding
    {
      Code = "126202",
      Display = "Acquisition Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time between the start of injection of the PET radionuclide and the start of acquisition of the PET data
    /// </summary>
    public static readonly Coding PETRadionuclideIncubationTime = new Coding
    {
      Code = "126203",
      Display = "PET Radionuclide Incubation Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Coefficient of determination, R2. An indication of goodness of fit
    /// </summary>
    public static readonly Coding R2Coefficient = new Coding
    {
      Code = "126220",
      Display = "R2-Coefficient",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Perfusion analysis by Stable Xenon CT technique
    /// </summary>
    public static readonly Coding PerfusionAnalysisByStableXenonCTTechnique = new Coding
    {
      Code = "126300",
      Display = "Perfusion analysis by Stable Xenon CT technique",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Perfusion analysis by IV Iodinated Contrast CT technique
    /// </summary>
    public static readonly Coding PerfusionAnalysisByIVIodinatedContrastCTTechnique = new Coding
    {
      Code = "126301",
      Display = "Perfusion analysis by IV Iodinated Contrast CT technique",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Perfusion analysis by Arterial Spin Labeling (ASL) MR technique
    /// </summary>
    public static readonly Coding PerfusionAnalysisByArterialSpinLabelingMRTechnique = new Coding
    {
      Code = "126302",
      Display = "Perfusion analysis by Arterial Spin Labeling MR technique",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Perfusion analysis by Susceptibility (T2*) MR technique
    /// </summary>
    public static readonly Coding PerfusionAnalysisBySusceptibilityMRTechnique = new Coding
    {
      Code = "126303",
      Display = "Perfusion analysis by Susceptibility MR technique",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Least Mean Square (LMS) deconvolution
    /// </summary>
    public static readonly Coding LeastMeanSquareLMSDeconvolution = new Coding
    {
      Code = "126310",
      Display = "Least Mean Square (LMS) deconvolution",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Singular Value Decomposition (SVD) deconvolution
    /// </summary>
    public static readonly Coding SingularValueDecompositionSVDDeconvolution = new Coding
    {
      Code = "126311",
      Display = "Singular Value Decomposition (SVD) deconvolution",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ktrans, the volume transfer constant of a tracer diffusion kinetic model, specifically the volume transfer constant between blood plasma and extravascular extracellular space (EES) See Tofts et al, "Estimating Kinetic Parameters From Dynamic Contrast-Enhanced T1-Weighted MRI of a Diffusable Tracer: Standardized Quantities and Symbols", Journal of Magnetic Resonance Imaging, vol. 10, pp. 223-232, 1999
    /// </summary>
    public static readonly Coding Ktrans = new Coding
    {
      Code = "126312",
      Display = "Ktrans",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// kep, the rate constant between extravascular extracellular space (EES) and blood plasma See Tofts et al, "Estimating Kinetic Parameters From Dynamic Contrast-Enhanced T1-Weighted MRI of a Diffusable Tracer: Standardized Quantities and Symbols", Journal of Magnetic Resonance Imaging, vol. 10, pp. 223-232, 1999
    /// </summary>
    public static readonly Coding Kep = new Coding
    {
      Code = "126313",
      Display = "kep",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ve, the fractional (not absolute) volume of extravascular extracellular space (EES) per unit volume of tissue See Tofts et al, "Estimating Kinetic Parameters From Dynamic Contrast-Enhanced T1-Weighted MRI of a Diffusable Tracer: Standardized Quantities and Symbols", Journal of Magnetic Resonance Imaging, vol. 10, pp. 223-232, 1999
    /// </summary>
    public static readonly Coding Ve = new Coding
    {
      Code = "126314",
      Display = "ve",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The intial area under the contrast agent concentration-time curve
    /// </summary>
    public static readonly Coding IAUC = new Coding
    {
      Code = "126320",
      Display = "IAUC",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The intial area under the contrast agent concentration-time curve at 60 seconds after the onset time
    /// </summary>
    public static readonly Coding IAUC60 = new Coding
    {
      Code = "126321",
      Display = "IAUC60",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The intial area under the contrast agent concentration-time curve at 90 seconds after the onset time
    /// </summary>
    public static readonly Coding IAUC90 = new Coding
    {
      Code = "126322",
      Display = "IAUC90",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// τm. The mean intracellular water lifetime (τi). Used in the Shutter-Speed Model (SSM) of tracer kinetics
    /// </summary>
    public static readonly Coding TauM = new Coding
    {
      Code = "126330",
      Display = "tau_m",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// vp. The fractional (not absolute) blood plasma volume per unit volume of tissue. See Tofts et al, "Estimating Kinetic Parameters From Dynamic Contrast-Enhanced T1-Weighted MRI of a Diffusable Tracer: Standardized Quantities and Symbols", Journal of Magnetic Resonance Imaging, vol. 10, pp. 223-232, 1999
    /// </summary>
    public static readonly Coding Vp = new Coding
    {
      Code = "126331",
      Display = "vp",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A tracer diffusion kinetic model in which the permeability is assumed to be isodirectional. See P. Tofts, "Modeling tracer kinetics in dynamic Gd-DTPA MR imaging", Journal of Magnetic Resonance Imaging, vol. 7, pp. 91-101, 1997
    /// </summary>
    public static readonly Coding StandardToftsModel = new Coding
    {
      Code = "126340",
      Display = "Standard Tofts Model",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A tracer diffusion kinetic model in which the permeability is not assumed to be isodirectional, and which includes the contribution of tracer in the blood plasma to the total tissue concentration. See P. Tofts, "Modeling tracer kinetics in dynamic Gd-DTPA MR imaging", Journal of Magnetic Resonance Imaging, vol. 7, pp. 91-101, 1997
    /// </summary>
    public static readonly Coding ExtendedToftsModel = new Coding
    {
      Code = "126341",
      Display = "Extended Tofts Model",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A semiquantitative analysis of the contrast-enhancement concentration versus time curve that avoids the use of a pharmacokinetic model; e.g. integration to compute the initial area under the curve
    /// </summary>
    public static readonly Coding ModelFreeConcentrationTimeQuantitification = new Coding
    {
      Code = "126342",
      Display = "Model-free concentration-time quantitification",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A tracer diffusion kinetic model that accounts for the tumor leakage profile during the first pass of contrast. See Li, Ka-Loh, Xiao Ping Zhu, John Waterton, and Alan Jackson. "Improved 3D Quantitative Mapping of Blood Volume and Endothelial Permeability in Brain Tumors." Journal of Magnetic Resonance Imaging 12, no. 2 (2000): 347-357. doi:10.1002/1522-2586(200008)12:2&lt;347::AID-JMRI19&gt;3.0.CO;2-7
    /// </summary>
    public static readonly Coding FirstPassLeakageProfileFPLP = new Coding
    {
      Code = "126343",
      Display = "First Pass Leakage Profile (FPLP)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A tracer diffusion kinetic model that does not assume that intercompartmental water molecule exchange is infinitely fast. See Li, Xin, Wei Huang, Thomas E. Yankeelov, Alina Tudorica, William D. Rooney, and Charles S. Springer. "Shutter-Speed Analysis of Contrast Reagent Bolus-Tracking Data: Preliminary Observations in Benign and Malignant Breast Disease." Magnetic Resonance in Medicine 53, no. 3 (2005): 724-29. doi:10.1002/mrm.20405
    /// </summary>
    public static readonly Coding ShutterSpeedModelSSM = new Coding
    {
      Code = "126344",
      Display = "Shutter-Speed Model (SSM)",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// T1 measurement by Multiple Flip Angles (MFA) (variable saturation) method
    /// </summary>
    public static readonly Coding T1ByMultipleFlipAngles = new Coding
    {
      Code = "126350",
      Display = "T1 by Multiple Flip Angles",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// T1 measurement by Inversion Recovery (IR) method
    /// </summary>
    public static readonly Coding T1ByInversionRecovery = new Coding
    {
      Code = "126351",
      Display = "T1 by Inversion Recovery",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Calculation was performed using a fixed value of T1 rather than a measured value. The value could be encoded as the value of (126353, DCM, "T1 Used For Calculation")
    /// </summary>
    public static readonly Coding T1ByFixedValue = new Coding
    {
      Code = "126352",
      Display = "T1 by Fixed Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The fixed value of T1 used for a calculation
    /// </summary>
    public static readonly Coding T1UsedForCalculation = new Coding
    {
      Code = "126353",
      Display = "T1 Used For Calculation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// No Arterial Input Function was used
    /// </summary>
    public static readonly Coding AIFIgnored = new Coding
    {
      Code = "126360",
      Display = "AIF Ignored",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A population-averaged Arterial Input Function
    /// </summary>
    public static readonly Coding PopulationAveragedAIF = new Coding
    {
      Code = "126361",
      Display = "Population Averaged AIF",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An Arterial Input Function computed from a user-defined Region of Interest
    /// </summary>
    public static readonly Coding UserDefinedAIFROI = new Coding
    {
      Code = "126362",
      Display = "User-defined AIF ROI",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An Arterial Input Function computed from an automatically detected Region of Interest
    /// </summary>
    public static readonly Coding AutomaticallyDetectedAIFROI = new Coding
    {
      Code = "126363",
      Display = "Automatically Detected AIF ROI",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A data-driven blind source separation (BSS) algorithm that estimates AIF from individuals without any presumed AIF model and initialization. See Lin, Yu-Chun, Tsung-Han Chan, Chong-Yung Chi, Shu-Hang Ng, Hao-Li Liu, Kuo-Chen Wei, Yau-Yau Wai, Chun-Chieh Wang, and Jiun-Jie Wang. "Blind Estimation of the Arterial Input Function in Dynamic Contrast-Enhanced MRI Using Purity Maximization." Magnetic Resonance in Medicine 68, no. 5 (November 1, 2012): 1439-49. doi:10.1002/mrm.24144
    /// </summary>
    public static readonly Coding BlindEstimationOfAIF = new Coding
    {
      Code = "126364",
      Display = "Blind Estimation of AIF",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time at which the concentration-time curve achieves its peak for the first time. Used as a concept name for a value or as a method; e.g. used as a method of calculation for BAT. See Shpilfoygel Med Phys 2008. doi: 10.1118/1.1288669
    /// </summary>
    public static readonly Coding TimeOfPeakConcentration = new Coding
    {
      Code = "126370",
      Display = "Time of Peak Concentration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The nominal time at which arrival of a contrast bolus is detected, which is used as a reference point for subsequent calculations. Used as a concept name for a value or as a method. No specific computational method is implied by this general definition. Abbreviated BAT
    /// </summary>
    public static readonly Coding BolusArrivalTime = new Coding
    {
      Code = "126371",
      Display = "Bolus Arrival Time",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The time at which the concentration-time curve achieves half of its peak density for the first time. Used as a concept name for a value or as a method; e.g. used as a method of calculation for BAT. See Shpilfoygel Med Phys 2008. doi: 10.1118/1.1288669
    /// </summary>
    public static readonly Coding TimeOfLeadingHalfPeakConcentration = new Coding
    {
      Code = "126372",
      Display = "Time of Leading Half-Peak Concentration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A method of determining BAT that involves computing the temporal derivative of the concentration-time curve and selecting the time when the temporal derivative exceeds a specified threshold. See Shpilfoygel Med Phys 2008. doi: 10.1118/1.1288669
    /// </summary>
    public static readonly Coding TemporalDerivativeExceedsThreshold = new Coding
    {
      Code = "126373",
      Display = "Temporal Derivative Exceeds Threshold",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A threshold applied to the temporal derivative of the concentration-time curve; e.g. used to establish BAT. See Shpilfoygel Med Phys 2008. doi: 10.1118/1.1288669
    /// </summary>
    public static readonly Coding TemporalDerivativeThreshold = new Coding
    {
      Code = "126374",
      Display = "Temporal Derivative Threshold",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The maximum rate of signal intensity change within a measured region of a time-activity curve. See Boonsirikamchai, Piyaporn, Harmeet Kaur, Deborah A. Kuban, Edward Jackson, Ping Hou, and Haesun Choi. "Use of Maximum Slope Images Generated From Dynamic Contrast-Enhanced MRI to Detect Locally Recurrent Prostate Carcinoma After Prostatectomy: A Practical Approach." American Journal of Roentgenology 198, no. 3 (March 1, 2012): W228-W236. doi:10.2214/AJR.10.6387
    /// </summary>
    public static readonly Coding MaximumSlope = new Coding
    {
      Code = "126375",
      Display = "Maximum Slope",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The maximum degree of signal intensity change within a measured region of a time-activity curve. See Boonsirikamchai, Piyaporn, Harmeet Kaur, Deborah A. Kuban, Edward Jackson, Ping Hou, and Haesun Choi. "Use of Maximum Slope Images Generated From Dynamic Contrast-Enhanced MRI to Detect Locally Recurrent Prostate Carcinoma After Prostatectomy: A Practical Approach." American Journal of Roentgenology 198, no. 3 (March 1, 2012): W228-W236. doi:10.2214/AJR.10.6387
    /// </summary>
    public static readonly Coding MaximumDifference = new Coding
    {
      Code = "126376",
      Display = "Maximum Difference",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Tracer concentration in tissue; e.g. in a DCE-MR experiment, the concentration of contrast agent in mmol/l
    /// </summary>
    public static readonly Coding TracerConcentration = new Coding
    {
      Code = "126377",
      Display = "Tracer Concentration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The degree to which a paramagnetic contrast agent can enhance the proton longitudinal relaxation rate constant (R1, 1/T1), normalized to the concentration of the contrast agent. Also referred to as r1. Typically expressed in units of l/mmol/s
    /// </summary>
    public static readonly Coding ContrastLongitudinalRelaxivity = new Coding
    {
      Code = "126380",
      Display = "Contrast Longitudinal Relaxivity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The flow rate of blood perfusing a region as volume per mass per unit of time
    /// </summary>
    public static readonly Coding RegionalBloodFlow = new Coding
    {
      Code = "126390",
      Display = "Regional Blood Flow",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The volume of blood perfusing a region as volume per mass
    /// </summary>
    public static readonly Coding RegionalBloodVolume = new Coding
    {
      Code = "126391",
      Display = "Regional Blood Volume",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The percent of the oxygen removed from the blood by tissue during its passage through the capillary network. For example, as measured by blood oxygenation level dependent (BOLD) MR. See He, Xiang, and Dmitriy A. Yablonskiy. "Quantitative BOLD: Mapping of Human Cerebral Deoxygenated Blood Volume and Oxygen Extraction Fraction: Default State." Magnetic Resonance in Medicine 57, no. 1 (2007): 115-26
    /// </summary>
    public static readonly Coding OxygenExtractionFraction = new Coding
    {
      Code = "126392",
      Display = "Oxygen Extraction Fraction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The longitiudinal relaxation rate constant. The inverse of longitudinal relaxation time, i.e., R1 = 1/T1
    /// </summary>
    public static readonly Coding R1 = new Coding
    {
      Code = "126393",
      Display = "R1",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// The transverse relaxation rate constant. The inverse of transverse relaxation time, i.e., R2 = 1/T2
    /// </summary>
    public static readonly Coding R2 = new Coding
    {
      Code = "126394",
      Display = "R2",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A ratio of locally measured radioactivity concentration versus the injected radioactivity distributed evenly throughout the whole body. This general concept encompasses all specific methods of calculating the whole body volume of distribution, such as using body weight, lean body mass, body surface area, etc.
    /// </summary>
    public static readonly Coding StandardizedUptakeValue = new Coding
    {
      Code = "126400",
      Display = "Standardized Uptake Value",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Standardized Uptake Value calculated using body weight. The patient size correction factor for males and females is body weight. Defined in Sugawara et al. Reevaluation of the Standardized Uptake Value for FDG: Variations with Body Weight and Methods for Correction.Radiology, 1999 at http://radiology.rsna.org/content/213/2/521
    /// </summary>
    public static readonly Coding SUVbw = new Coding
    {
      Code = "126401",
      Display = "SUVbw",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Standardized Uptake Value calculated using lean body mass. The patient size correction factor for males is 1.10 * weight - 120 * (weight/height) ^2, and for females is 1.07 * weight - 148 * (weight/height) ^2. Defined in Sugawara et al. Reevaluation of the Standardized Uptake Value for FDG: Variations with Body Weight and Methods for Correction.Radiology, 1999 at http://radiology.rsna.org/content/213/2/521
    /// </summary>
    public static readonly Coding SUVlbm = new Coding
    {
      Code = "126402",
      Display = "SUVlbm",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Standardized Uptake Value calculated using body surface area. The patient size correction factor for males and females is weight^ 0.425 * height^0.725 * 0.007184. Defined in Sugawara et al. Reevaluation of the Standardized Uptake Value for FDG: Variations with Body Weight and Methods for Correction.Radiology, 1999 at http://radiology.rsna.org/content/213/2/521
    /// </summary>
    public static readonly Coding SUVbsa = new Coding
    {
      Code = "126403",
      Display = "SUVbsa",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Standardized Uptake Value calculated using ideal body weight. The patient size correction factor for males is 48.0 + 1.06 * (height - 152) and for females is 45.5 + 0.91 * (height - 152). Defined in Sugawara et al. Reevaluation of the Standardized Uptake Value for FDG: Variations with Body Weight and Methods for Correction.Radiology, 1999 at http://radiology.rsna.org/content/213/2/521
    /// </summary>
    public static readonly Coding SUVibw = new Coding
    {
      Code = "126404",
      Display = "SUVibw",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of calculating Standardized Uptake Value using body weight. The patient size correction factor for males and females is body weight. Defined in Sugawara et al. Reevaluation of the Standardized Uptake Value for FDG: Variations with Body Weight and Methods for Correction.Radiology, 1999 at http://radiology.rsna.org/content/213/2/521
    /// </summary>
    public static readonly Coding SUVBodyWeightCalculationMethod = new Coding
    {
      Code = "126410",
      Display = "SUV body weight calculation method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of calculating Standardized Uptake Value using lean body mass. The patient size correction factor for males is 1.10 * weight - 120 * (weight/height) ^2, and for females is 1.07 * weight - 148 * (weight/height) ^2. Defined in Sugawara et al. Reevaluation of the Standardized Uptake Value for FDG: Variations with Body Weight and Methods for Correction.Radiology, 1999 at http://radiology.rsna.org/content/213/2/521
    /// </summary>
    public static readonly Coding SUVLeanBodyMassCalculationMethod = new Coding
    {
      Code = "126411",
      Display = "SUV lean body mass calculation method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of calculating Standardized Uptake Value using body surface area. The patient size correction factor for males and females is weight^ 0.425 * height^0.725 * 0.007184. Defined in Sugawara et al. Reevaluation of the Standardized Uptake Value for FDG: Variations with Body Weight and Methods for Correction.Radiology, 1999 at http://radiology.rsna.org/content/213/2/521
    /// </summary>
    public static readonly Coding SUVBodySurfaceAreaCalculationMethod = new Coding
    {
      Code = "126412",
      Display = "SUV body surface area calculation method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Method of calculating Standardized Uptake Value using ideal body weight. The patient size correction factor for males is 48.0 + 1.06 * (height - 152) and for females is 45.5 + 0.91 * (height - 152). Defined in Sugawara et al. Reevaluation of the Standardized Uptake Value for FDG: Variations with Body Weight and Methods for Correction.Radiology, 1999 at http://radiology.rsna.org/content/213/2/521
    /// </summary>
    public static readonly Coding SUVIdealBodyWeightCalculationMethod = new Coding
    {
      Code = "126413",
      Display = "SUV ideal body weight calculation method",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A beta-amyloid PET radiotracer that is an analog of thioflavin T
    /// </summary>
    public static readonly Coding PittsburghCompoundBCPower11Power = new Coding
    {
      Code = "126500",
      Display = "Pittsburgh compound B C^11^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A beta-amyloid PET radiotracer
    /// </summary>
    public static readonly Coding FlorbetabenFPower18Power = new Coding
    {
      Code = "126501",
      Display = "Florbetaben F^18^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A PHF-tau PET radiotracer
    /// </summary>
    public static readonly Coding T807FPower18Power = new Coding
    {
      Code = "126502",
      Display = "T807 F^18^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A nicotinic α4β2 receptor (nAChR) PET radiotracer
    /// </summary>
    public static readonly Coding FlubatineFPower18Power = new Coding
    {
      Code = "126503",
      Display = "Flubatine F^18^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Cu 64 Monoclonal Antibody (mAb) PET Radiotracer
    /// </summary>
    public static readonly Coding MonoclonalAntibodyMAbPower64PowerCu = new Coding
    {
      Code = "126510",
      Display = "Monoclonal Antibody (mAb) ^64^Cu",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Zr 89 Monoclonal Antibody (mAb) PET Radiotracer
    /// </summary>
    public static readonly Coding MonoclonalAntibodyMAbPower89PowerZr = new Coding
    {
      Code = "126511",
      Display = "Monoclonal Antibody (mAb) ^89^Zr",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Zr 89 Trastuzumab PET Radiotracer
    /// </summary>
    public static readonly Coding TrastuzumabPower89PowerZr = new Coding
    {
      Code = "126512",
      Display = "Trastuzumab ^89^Zr",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Zr 89 Cetuximab PET Radiotracer
    /// </summary>
    public static readonly Coding CetuximabPower89PowerZr = new Coding
    {
      Code = "126513",
      Display = "Cetuximab ^89^Zr",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Zr 89 J591 PET Radiotracer
    /// </summary>
    public static readonly Coding J591Power89PowerZr = new Coding
    {
      Code = "126514",
      Display = "J591 ^89^Zr",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Zr 89 cU36 PET Radiotracer
    /// </summary>
    public static readonly Coding CU36Power89PowerZr = new Coding
    {
      Code = "126515",
      Display = "cU36 ^89^Zr",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Zr 89 Bevacizumab PET Radiotracer
    /// </summary>
    public static readonly Coding BevacizumabPower89PowerZr = new Coding
    {
      Code = "126516",
      Display = "Bevacizumab ^89^Zr",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Zr 89 cG250-F(ab')(2) PET Radiotracer
    /// </summary>
    public static readonly Coding CG250FAbQuote2Power89PowerZr = new Coding
    {
      Code = "126517",
      Display = "cG250-F(ab')(2) ^89^Zr",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Zr 89 R1507 PET Radiotracer
    /// </summary>
    public static readonly Coding R1507Power89PowerZr = new Coding
    {
      Code = "126518",
      Display = "R1507 ^89^Zr",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Zr 89 E4G10 PET Radiotracer
    /// </summary>
    public static readonly Coding E4G10Power89PowerZr = new Coding
    {
      Code = "126519",
      Display = "E4G10 ^89^Zr",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Zr 89 Df-CD45 PET Radiotracer
    /// </summary>
    public static readonly Coding DfCD45Power89PowerZr = new Coding
    {
      Code = "126520",
      Display = "Df-CD45 ^89^Zr",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ^44^Scandium
    /// </summary>
    public static readonly Coding Power44PowerScandium = new Coding
    {
      Code = "126600",
      Display = "^44^Scandium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ^51^Manganese
    /// </summary>
    public static readonly Coding Power51PowerManganese = new Coding
    {
      Code = "126601",
      Display = "^51^Manganese",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ^70^Arsenic
    /// </summary>
    public static readonly Coding Power70PowerArsenic = new Coding
    {
      Code = "126602",
      Display = "^70^Arsenic",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ^90^Niobium
    /// </summary>
    public static readonly Coding Power90PowerNiobium = new Coding
    {
      Code = "126603",
      Display = "^90^Niobium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ^191m^Iridium
    /// </summary>
    public static readonly Coding Power191mPowerIridium = new Coding
    {
      Code = "126604",
      Display = "^191m^Iridium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ^43^Scandium
    /// </summary>
    public static readonly Coding Power43PowerScandium = new Coding
    {
      Code = "126605",
      Display = "^43^Scandium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// ^152^Terbium
    /// </summary>
    public static readonly Coding Power152PowerTerbium = new Coding
    {
      Code = "126606",
      Display = "^152^Terbium",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Cu 60 ATSM PET radiotracer
    /// </summary>
    public static readonly Coding ATSMCuPower60Power = new Coding
    {
      Code = "126700",
      Display = "ATSM Cu^60^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Cu 61 ATSM PET radiotracer
    /// </summary>
    public static readonly Coding ATSMCuPower61Power = new Coding
    {
      Code = "126701",
      Display = "ATSM Cu^61^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A Cu 62 ATSM PET radiotracer
    /// </summary>
    public static readonly Coding ATSMCuPower62Power = new Coding
    {
      Code = "126702",
      Display = "ATSM Cu^62^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A C 11 Choline PET radiotracer
    /// </summary>
    public static readonly Coding CholineCPower11Power = new Coding
    {
      Code = "126703",
      Display = "Choline C^11^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A C 11 Fallypride PET radiotracer
    /// </summary>
    public static readonly Coding FallyprideCPower11Power = new Coding
    {
      Code = "126704",
      Display = "Fallypride C^11^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An F 18 Fallypride PET radiotracer
    /// </summary>
    public static readonly Coding FallyprideFPower18Power = new Coding
    {
      Code = "126705",
      Display = "Fallypride F^18^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A C 11 FLB 457 PET radiotracer
    /// </summary>
    public static readonly Coding FLB457CPower11Power = new Coding
    {
      Code = "126706",
      Display = "FLB 457 C^11^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An F 18 Fluorotriopride PET radiotracer
    /// </summary>
    public static readonly Coding FluorotrioprideFPower18Power = new Coding
    {
      Code = "126707",
      Display = "Fluorotriopride F^18^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An F 18 Fluoromisonidazole PET radiotracer
    /// </summary>
    public static readonly Coding FluoromisonidazoleFMISOFPower18Power = new Coding
    {
      Code = "126708",
      Display = "Fluoromisonidazole (FMISO) F^18^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A C 11 Glutamine PET radiotracer
    /// </summary>
    public static readonly Coding GlutamineCPower11Power = new Coding
    {
      Code = "126709",
      Display = "Glutamine C^11^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A C 14 Glutamine PET radiotracer
    /// </summary>
    public static readonly Coding GlutamineCPower14Power = new Coding
    {
      Code = "126710",
      Display = "Glutamine C^14^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An F 18 Glutamine PET radiotracer
    /// </summary>
    public static readonly Coding GlutamineFPower18Power = new Coding
    {
      Code = "126711",
      Display = "Glutamine F^18^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An F 18 Flubatine PET radiotracer
    /// </summary>
    public static readonly Coding FlubatineFPower18Power_2 = new Coding
    {
      Code = "126712",
      Display = "Flubatine F^18^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An F 18 2FA PET radiotracer
    /// </summary>
    public static readonly Coding VAL2FAFPower18Power = new Coding
    {
      Code = "126713",
      Display = "2FA F^18^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An F 18 Nifene PET radiotracer
    /// </summary>
    public static readonly Coding NifeneFPower18Power = new Coding
    {
      Code = "126714",
      Display = "Nifene F^18^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An I 124 cancer targeted phospholipid ether PET radiotracer
    /// </summary>
    public static readonly Coding CLR1404IPower124Power = new Coding
    {
      Code = "126715",
      Display = "CLR1404 I^124^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An I 131 cancer targeted phospholipid ether PET radiotracer
    /// </summary>
    public static readonly Coding CLR1404IPower131Power = new Coding
    {
      Code = "126716",
      Display = "CLR1404 I^131^",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Patient Support Continuous Angle in IEC PATIENT SUPPORT Coordinate System [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127PatientSupportContinuousAngle = new Coding
    {
      Code = "126801",
      Display = "IEC6127 Patient Support Continuous Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Top Continuous Pitch Angle in the direction of the IEC TABLE TOP Coordinate System [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127TableTopContinuousPitchAngle = new Coding
    {
      Code = "126802",
      Display = "IEC6127 Table Top Continuous Pitch Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Top Continuous Roll Angle in the direction of the IEC TABLE TOP Coordinate System [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127TableTopContinuousRollAngle = new Coding
    {
      Code = "126803",
      Display = "IEC6127 Table Top Continuous Roll Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Top Eccentric Axis Distance [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127TableTopEccentricAxisDistance = new Coding
    {
      Code = "126804",
      Display = "IEC6127 Table Top Eccentric Axis Distance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Top Continuous Eccentric Angle in the direction of the IEC TABLE TOP ECCENTRIC Coordinate System [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127TableTopContinuousEccentricAngle = new Coding
    {
      Code = "126805",
      Display = "IEC6127 Table Top Continuous Eccentric Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Top Lateral Position IEC TABLE TOP Coordinate System [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127TableTopLateralPosition = new Coding
    {
      Code = "126806",
      Display = "IEC6127 Table Top Lateral Position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Top Longitudinal Position IEC TABLE TOP Coordinate System [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127TableTopLongitudinalPosition = new Coding
    {
      Code = "126807",
      Display = "IEC6127 Table Top Longitudinal Position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Table Top Vertical Position in IEC TABLE TOP Coordinate System [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127TableTopVerticalPosition = new Coding
    {
      Code = "126808",
      Display = "IEC6127 Table Top Vertical Position",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Gantry Continuous Roll Angle in degrees of the radiation source, i.e., the rotation about the Y-axis of the IEC GANTRY coordinate system [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127GantryContinuousRollAngle = new Coding
    {
      Code = "126809",
      Display = "IEC6127 Gantry Continuous Roll Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Gantry Pitch Continuous Angle in degrees of the radiation source, i.e., the rotation about the X-axis of the IEC GANTRY coordinate system [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127GantryContinuousPitchAngle = new Coding
    {
      Code = "126810",
      Display = "IEC6127 Gantry Continuous Pitch Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Gantry Yaw Continuous Angle in degrees of the radiation source, i.e., about the Z-axis of the IEC GANTRY coordinate system [IEC 61217]
    /// </summary>
    public static readonly Coding IEC6127GantryContinuousYawAngle = new Coding
    {
      Code = "126811",
      Display = "IEC6127 Gantry Continuous Yaw Angle",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Autorefraction device
    /// </summary>
    public static readonly Coding Autorefraction = new Coding
    {
      Code = "AR",
      Display = "Autorefraction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Archive device
    /// </summary>
    public static readonly Coding Archive = new Coding
    {
      Code = "ARCHIVE",
      Display = "Archive",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Audio object
    /// </summary>
    public static readonly Coding Audio = new Coding
    {
      Code = "AU",
      Display = "Audio",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasound Bone Densitometry (modality)
    /// </summary>
    public static readonly Coding UltrasoundBoneDensitometry = new Coding
    {
      Code = "BDUS",
      Display = "Ultrasound Bone Densitometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Biomagnetic imaging device
    /// </summary>
    public static readonly Coding BiomagneticImaging = new Coding
    {
      Code = "BI",
      Display = "Biomagnetic imaging",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Bone Mineral Densitometry by X-Ray (modality), including dual-energy X-Ray absorptiometry (DXA) and morphometric X-Ray absorptiometry (MXA)
    /// </summary>
    public static readonly Coding BoneMineralDensitometry = new Coding
    {
      Code = "BMD",
      Display = "Bone Mineral Densitometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Computer Assisted Detection/Diagnosis device
    /// </summary>
    public static readonly Coding ComputerAssistedDetectionDiagnosis = new Coding
    {
      Code = "CAD",
      Display = "Computer Assisted Detection/Diagnosis",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Image Capture Device, includes video capture
    /// </summary>
    public static readonly Coding ImageCapture = new Coding
    {
      Code = "CAPTURE",
      Display = "Image Capture",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Computation Server; includes radiotherapy planning
    /// </summary>
    public static readonly Coding ComputationServer = new Coding
    {
      Code = "COMP",
      Display = "Computation Server",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Computed Radiography device
    /// </summary>
    public static readonly Coding ComputedRadiography = new Coding
    {
      Code = "CR",
      Display = "Computed Radiography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Computed Tomography device
    /// </summary>
    public static readonly Coding ComputedTomography = new Coding
    {
      Code = "CT",
      Display = "Computed Tomography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Diaphanography device
    /// </summary>
    public static readonly Coding Diaphanography = new Coding
    {
      Code = "DG",
      Display = "Diaphanography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment that digitized hardcopy documents and imported them
    /// </summary>
    public static readonly Coding DocumentDigitizerEquipment = new Coding
    {
      Code = "DOCD",
      Display = "Document Digitizer Equipment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding ADocumentOperation = new Coding
    {
      Code = "document",
      Display = "A Document Operation",
      System = "http://terminology.hl7.org/CodeSystem/audit-event-type"
    };
    /// <summary>
    /// Department System Scheduler, workflow manager; includes RIS
    /// </summary>
    public static readonly Coding DepartmentSystemScheduler = new Coding
    {
      Code = "DSS",
      Display = "Department System Scheduler",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Digital Radiography device
    /// </summary>
    public static readonly Coding DigitalRadiography = new Coding
    {
      Code = "DX",
      Display = "Digital Radiography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Electrocardiography device
    /// </summary>
    public static readonly Coding Electrocardiography = new Coding
    {
      Code = "ECG",
      Display = "Electrocardiography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Cardiac Electrophysiology device
    /// </summary>
    public static readonly Coding CardiacElectrophysiology = new Coding
    {
      Code = "EPS",
      Display = "Cardiac Electrophysiology",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Endoscopy device
    /// </summary>
    public static readonly Coding Endoscopy = new Coding
    {
      Code = "ES",
      Display = "Endoscopy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Female sex
    /// </summary>
    public static readonly Coding Female = new Coding
    {
      Code = "F",
      Display = "Female",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Female sex changed to Male sex
    /// </summary>
    public static readonly Coding FemaleChangedToMale = new Coding
    {
      Code = "FC",
      Display = "Female changed to Male",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Film Digitizer
    /// </summary>
    public static readonly Coding FilmDigitizer = new Coding
    {
      Code = "FILMD",
      Display = "Film Digitizer",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Female Pseudohermaphrodite
    /// </summary>
    public static readonly Coding FemalePseudohermaphrodite = new Coding
    {
      Code = "FP",
      Display = "Female Pseudohermaphrodite",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// General Microscopy device
    /// </summary>
    public static readonly Coding GeneralMicroscopy = new Coding
    {
      Code = "GM",
      Display = "General Microscopy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hermaphrodite
    /// </summary>
    public static readonly Coding Hermaphrodite = new Coding
    {
      Code = "H",
      Display = "Hermaphrodite",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hard Copy
    /// </summary>
    public static readonly Coding HardCopy = new Coding
    {
      Code = "HC",
      Display = "Hard Copy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hemodynamic Waveform acquisition device
    /// </summary>
    public static readonly Coding HemodynamicWaveform = new Coding
    {
      Code = "HD",
      Display = "Hemodynamic Waveform",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HL7V2Operation = new Coding
    {
      Code = "hl7-v2",
      Display = "HL7 v2 Operation",
      System = "http://terminology.hl7.org/CodeSystem/audit-event-type"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding HL7V3Operation = new Coding
    {
      Code = "hl7-v3",
      Display = "HL7 v3 Operation",
      System = "http://terminology.hl7.org/CodeSystem/audit-event-type"
    };
    /// <summary>
    /// Intra-oral Radiography device
    /// </summary>
    public static readonly Coding IntraOralRadiography = new Coding
    {
      Code = "IO",
      Display = "Intra-oral Radiography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An acquisition device, process or method that performs intravascular optical coherence tomography
    /// </summary>
    public static readonly Coding IntravascularOpticalCoherenceTomography = new Coding
    {
      Code = "IVOCT",
      Display = "Intravascular Optical Coherence Tomography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Intravascular Ultrasound device
    /// </summary>
    public static readonly Coding IntravascularUltrasound = new Coding
    {
      Code = "IVUS",
      Display = "Intravascular Ultrasound",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Keratometry device
    /// </summary>
    public static readonly Coding Keratometry = new Coding
    {
      Code = "KER",
      Display = "Keratometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Key Object Selection object
    /// </summary>
    public static readonly Coding KeyObjectSelection = new Coding
    {
      Code = "KO",
      Display = "Key Object Selection",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Lensometry device
    /// </summary>
    public static readonly Coding Lensometry = new Coding
    {
      Code = "LEN",
      Display = "Lensometry",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Procedure Logging device; includes cath lab logging
    /// </summary>
    public static readonly Coding ProcedureLogging = new Coding
    {
      Code = "LOG",
      Display = "Procedure Logging",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Laser surface scan device
    /// </summary>
    public static readonly Coding LaserSurfaceScan = new Coding
    {
      Code = "LS",
      Display = "Laser surface scan",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Male sex
    /// </summary>
    public static readonly Coding Male = new Coding
    {
      Code = "M",
      Display = "Male",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Male sex changed to Female sex
    /// </summary>
    public static readonly Coding MaleChangedToFemale = new Coding
    {
      Code = "MC",
      Display = "Male changed to Female",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// A device that creates DICOM PS3.10 interchange media; e.g. a CD creator that is managed by the Media Creation Management Service Class
    /// </summary>
    public static readonly Coding MediaCreationDevice = new Coding
    {
      Code = "MCD",
      Display = "Media Creation Device",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment that retrieved and imported objects from interchange Media
    /// </summary>
    public static readonly Coding PortableMediaImporterEquipment = new Coding
    {
      Code = "MEDIM",
      Display = "Portable Media Importer Equipment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Mammography device
    /// </summary>
    public static readonly Coding Mammography = new Coding
    {
      Code = "MG",
      Display = "Mammography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Male Pseudohermaphrodite
    /// </summary>
    public static readonly Coding MalePseudohermaphrodite = new Coding
    {
      Code = "MP",
      Display = "Male Pseudohermaphrodite",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Magnetic Resonance device
    /// </summary>
    public static readonly Coding MagneticResonance = new Coding
    {
      Code = "MR",
      Display = "Magnetic Resonance",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instances need to be retrieved from relatively slow media such as optical disk or tape
    /// </summary>
    public static readonly Coding Nearline = new Coding
    {
      Code = "NEARLINE",
      Display = "Nearline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Nuclear Medicine device
    /// </summary>
    public static readonly Coding NuclearMedicine = new Coding
    {
      Code = "NM",
      Display = "Nuclear Medicine",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Measurements of the axial length of the eye, which are done by various devices
    /// </summary>
    public static readonly Coding OphthalmicAxialMeasurements = new Coding
    {
      Code = "OAM",
      Display = "Ophthalmic Axial Measurements",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding AnOperationOnOtherObjects = new Coding
    {
      Code = "object",
      Display = "An Operation on other Objects",
      System = "http://terminology.hl7.org/CodeSystem/audit-event-type"
    };
    /// <summary>
    /// Modality device that uses an interferometric, non-invasive optical tomographic technique to image 2D slices and 3D volumes of tissue using visible and near visible frequencies
    /// </summary>
    public static readonly Coding OpticalCoherenceTomography = new Coding
    {
      Code = "OCT",
      Display = "Optical Coherence Tomography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instances need to be retrieved by manual intervention
    /// </summary>
    public static readonly Coding Offline = new Coding
    {
      Code = "OFFLINE",
      Display = "Offline",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instances are immediately available
    /// </summary>
    public static readonly Coding Online = new Coding
    {
      Code = "ONLINE",
      Display = "Online",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ophthalmic photography modality
    /// </summary>
    public static readonly Coding OphthalmicPhotography = new Coding
    {
      Code = "OP",
      Display = "Ophthalmic photography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Modality device that measures corneal topography, corneal or retinal thickness, and other similar parameters that are typically displayed as maps
    /// </summary>
    public static readonly Coding OphthalmicMapping = new Coding
    {
      Code = "OPM",
      Display = "Ophthalmic Mapping",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Modality device that measures the refractive characteristics of the eye
    /// </summary>
    public static readonly Coding OphthalmicRefraction = new Coding
    {
      Code = "OPR",
      Display = "Ophthalmic Refraction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Tomography of the eye acquired by a modality that is based on light and optical principles. Tomography based on other principles, such as ultrasound, is excluded
    /// </summary>
    public static readonly Coding OphthalmicTomography = new Coding
    {
      Code = "OPT",
      Display = "Ophthalmic Tomography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Modality device that measures visual fields and perform visual perimetry
    /// </summary>
    public static readonly Coding OphthalmicVisualField = new Coding
    {
      Code = "OPV",
      Display = "Ophthalmic Visual Field",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// An acquisition device, process or method that performs optical surface scanning
    /// </summary>
    public static readonly Coding OpticalSurvaceScanner = new Coding
    {
      Code = "OSS",
      Display = "Optical Survace Scanner",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Other Modality device
    /// </summary>
    public static readonly Coding OtherModality = new Coding
    {
      Code = "OT",
      Display = "Other Modality",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Presentation State object
    /// </summary>
    public static readonly Coding PresentationState = new Coding
    {
      Code = "PR",
      Display = "Presentation State",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Hard Copy Print Server; includes printers with embedded DICOM print server
    /// </summary>
    public static readonly Coding HardCopyPrintServer = new Coding
    {
      Code = "PRINT",
      Display = "Hard Copy Print Server",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Positron emission tomography (PET) device
    /// </summary>
    public static readonly Coding PositronEmissionTomography = new Coding
    {
      Code = "PT",
      Display = "Positron emission tomography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Panoramic X-Ray device
    /// </summary>
    public static readonly Coding PanoramicXRay = new Coding
    {
      Code = "PX",
      Display = "Panoramic X-Ray",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Registration
    /// </summary>
    public static readonly Coding Registration = new Coding
    {
      Code = "REG",
      Display = "Registration",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// 
    /// </summary>
    public static readonly Coding RESTfulOperation = new Coding
    {
      Code = "rest",
      Display = "RESTful Operation",
      System = "http://terminology.hl7.org/CodeSystem/audit-event-type"
    };
    /// <summary>
    /// Radiofluoroscopy device
    /// </summary>
    public static readonly Coding Radiofluoroscopy = new Coding
    {
      Code = "RF",
      Display = "Radiofluoroscopy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiographic imaging (conventional film/screen)
    /// </summary>
    public static readonly Coding RadiographicImaging = new Coding
    {
      Code = "RG",
      Display = "Radiographic imaging",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiation Therapy Device; includes linear accelerator, proton therapy
    /// </summary>
    public static readonly Coding RadiationTherapyDevice = new Coding
    {
      Code = "RT",
      Display = "Radiation Therapy Device",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiotherapy Dose
    /// </summary>
    public static readonly Coding RadiotherapyDose = new Coding
    {
      Code = "RTDOSE",
      Display = "Radiotherapy Dose",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiotherapy Imaging device; includes portal imaging
    /// </summary>
    public static readonly Coding RadiotherapyImage = new Coding
    {
      Code = "RTIMAGE",
      Display = "Radiotherapy Image",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiotherapy Plan
    /// </summary>
    public static readonly Coding RadiotherapyPlan = new Coding
    {
      Code = "RTPLAN",
      Display = "Radiotherapy Plan",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiotherapy Treatment Record
    /// </summary>
    public static readonly Coding RadiotherapyTreatmentRecord = new Coding
    {
      Code = "RTRECORD",
      Display = "Radiotherapy Treatment Record",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Radiotherapy Structure Set
    /// </summary>
    public static readonly Coding RadiotherapyStructureSet = new Coding
    {
      Code = "RTSTRUCT",
      Display = "Radiotherapy Structure Set",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Segmentation
    /// </summary>
    public static readonly Coding Segmentation_2 = new Coding
    {
      Code = "SEG",
      Display = "Segmentation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Slide Microscopy
    /// </summary>
    public static readonly Coding SlideMicroscopy_2 = new Coding
    {
      Code = "SM",
      Display = "Slide Microscopy",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Stereometric image pairing modality
    /// </summary>
    public static readonly Coding StereometricRelationship = new Coding
    {
      Code = "SMR",
      Display = "Stereometric Relationship",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Structured Report Document
    /// </summary>
    public static readonly Coding StructuredReportDocument = new Coding
    {
      Code = "SR",
      Display = "Structured Report Document",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Subjective Refraction device
    /// </summary>
    public static readonly Coding SubjectiveRefraction = new Coding
    {
      Code = "SRF",
      Display = "Subjective Refraction",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Thermography device
    /// </summary>
    public static readonly Coding Thermography = new Coding
    {
      Code = "TG",
      Display = "Thermography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Unknown Sex
    /// </summary>
    public static readonly Coding UnknownSex = new Coding
    {
      Code = "U",
      Display = "Unknown Sex",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Instances cannot be retrieved
    /// </summary>
    public static readonly Coding Unavailable = new Coding
    {
      Code = "UNAVAILABLE",
      Display = "Unavailable",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Ultrasound device
    /// </summary>
    public static readonly Coding Ultrasound = new Coding
    {
      Code = "US",
      Display = "Ultrasound",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Visual Acuity device
    /// </summary>
    public static readonly Coding VisualAcuity = new Coding
    {
      Code = "VA",
      Display = "Visual Acuity",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Equipment that digitizes video tape and imports it
    /// </summary>
    public static readonly Coding VideoTapeDigitizerEquipment = new Coding
    {
      Code = "VIDD",
      Display = "Video Tape Digitizer Equipment",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// Workstation
    /// </summary>
    public static readonly Coding Workstation = new Coding
    {
      Code = "WSD",
      Display = "Workstation",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// X-Ray Angiography device
    /// </summary>
    public static readonly Coding XRayAngiography = new Coding
    {
      Code = "XA",
      Display = "X-Ray Angiography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };
    /// <summary>
    /// External-camera Photography device
    /// </summary>
    public static readonly Coding ExternalCameraPhotography = new Coding
    {
      Code = "XC",
      Display = "External-camera Photography",
      System = "http://dicom.nema.org/resources/ontology/DCM"
    };

    /// <summary>
    /// Literal for code: DigitalTimecodeNOS
    /// </summary>
    public const string LiteralDigitalTimecodeNOS = "109001";

    /// <summary>
    /// Literal for code: ECGBasedGatingSignalProcessed
    /// </summary>
    public const string LiteralECGBasedGatingSignalProcessed = "109002";

    /// <summary>
    /// Literal for code: IRIGBTimecode
    /// </summary>
    public const string LiteralIRIGBTimecode = "109003";

    /// <summary>
    /// Literal for code: XRayFluoroscopyOnSignal
    /// </summary>
    public const string LiteralXRayFluoroscopyOnSignal = "109004";

    /// <summary>
    /// Literal for code: XRayOnTrigger
    /// </summary>
    public const string LiteralXRayOnTrigger = "109005";

    /// <summary>
    /// Literal for code: DifferentialSignal
    /// </summary>
    public const string LiteralDifferentialSignal = "109006";

    /// <summary>
    /// Literal for code: HisBundleElectrogram
    /// </summary>
    public const string LiteralHisBundleElectrogram = "109007";

    /// <summary>
    /// Literal for code: MonopoleSignal
    /// </summary>
    public const string LiteralMonopoleSignal = "109008";

    /// <summary>
    /// Literal for code: PacingElectricalStimulusVoltage
    /// </summary>
    public const string LiteralPacingElectricalStimulusVoltage = "109009";

    /// <summary>
    /// Literal for code: RadioFrequencyAblationPower
    /// </summary>
    public const string LiteralRadioFrequencyAblationPower = "109010";

    /// <summary>
    /// Literal for code: VoltageMeasurementByBasketCatheter
    /// </summary>
    public const string LiteralVoltageMeasurementByBasketCatheter = "109011";

    /// <summary>
    /// Literal for code: VoltageMeasurementByMappingCatheter
    /// </summary>
    public const string LiteralVoltageMeasurementByMappingCatheter = "109012";

    /// <summary>
    /// Literal for code: VoltageMeasurementNOS
    /// </summary>
    public const string LiteralVoltageMeasurementNOS = "109013";

    /// <summary>
    /// Literal for code: VAL35PercentOfThermalCO
    /// </summary>
    public const string LiteralVAL35PercentOfThermalCO = "109014";

    /// <summary>
    /// Literal for code: VAL70PercentOfThermalCO
    /// </summary>
    public const string LiteralVAL70PercentOfThermalCO = "109015";

    /// <summary>
    /// Literal for code: AWavePeakPressure
    /// </summary>
    public const string LiteralAWavePeakPressure = "109016";

    /// <summary>
    /// Literal for code: AWavePressureAverage
    /// </summary>
    public const string LiteralAWavePressureAverage = "109017";

    /// <summary>
    /// Literal for code: BeatDetectedAccepted
    /// </summary>
    public const string LiteralBeatDetectedAccepted = "109018";

    /// <summary>
    /// Literal for code: BeatDetectedRejected
    /// </summary>
    public const string LiteralBeatDetectedRejected = "109019";

    /// <summary>
    /// Literal for code: EndOfExpiration
    /// </summary>
    public const string LiteralEndOfExpiration = "109023";

    /// <summary>
    /// Literal for code: EndOfInspiration
    /// </summary>
    public const string LiteralEndOfInspiration = "109024";

    /// <summary>
    /// Literal for code: MaxDpDt
    /// </summary>
    public const string LiteralMaxDpDt = "109025";

    /// <summary>
    /// Literal for code: MaxNegDpDt
    /// </summary>
    public const string LiteralMaxNegDpDt = "109026";

    /// <summary>
    /// Literal for code: PeakOfThermalCardiacOutputBolus
    /// </summary>
    public const string LiteralPeakOfThermalCardiacOutputBolus = "109028";

    /// <summary>
    /// Literal for code: StartOfExpiration
    /// </summary>
    public const string LiteralStartOfExpiration = "109029";

    /// <summary>
    /// Literal for code: StartOfInspiration
    /// </summary>
    public const string LiteralStartOfInspiration = "109030";

    /// <summary>
    /// Literal for code: StartOfThermalCardiacOutputBolus
    /// </summary>
    public const string LiteralStartOfThermalCardiacOutputBolus = "109031";

    /// <summary>
    /// Literal for code: VWavePeakPressure
    /// </summary>
    public const string LiteralVWavePeakPressure = "109034";

    /// <summary>
    /// Literal for code: VWavePressureAverage
    /// </summary>
    public const string LiteralVWavePressureAverage = "109035";

    /// <summary>
    /// Literal for code: ValveClose
    /// </summary>
    public const string LiteralValveClose = "109036";

    /// <summary>
    /// Literal for code: ValveOpen
    /// </summary>
    public const string LiteralValveOpen = "109037";

    /// <summary>
    /// Literal for code: AblationOff
    /// </summary>
    public const string LiteralAblationOff = "109038";

    /// <summary>
    /// Literal for code: AblationOn
    /// </summary>
    public const string LiteralAblationOn = "109039";

    /// <summary>
    /// Literal for code: HISBundleWave
    /// </summary>
    public const string LiteralHISBundleWave = "109040";

    /// <summary>
    /// Literal for code: PWave
    /// </summary>
    public const string LiteralPWave = "109041";

    /// <summary>
    /// Literal for code: QWave
    /// </summary>
    public const string LiteralQWave = "109042";

    /// <summary>
    /// Literal for code: RWave
    /// </summary>
    public const string LiteralRWave = "109043";

    /// <summary>
    /// Literal for code: SWave
    /// </summary>
    public const string LiteralSWave = "109044";

    /// <summary>
    /// Literal for code: StartOfAtrialContraction
    /// </summary>
    public const string LiteralStartOfAtrialContraction = "109045";

    /// <summary>
    /// Literal for code: StartOfAtrialContractionSubsequent
    /// </summary>
    public const string LiteralStartOfAtrialContractionSubsequent = "109046";

    /// <summary>
    /// Literal for code: StimulationAtRate1Interval
    /// </summary>
    public const string LiteralStimulationAtRate1Interval = "109047";

    /// <summary>
    /// Literal for code: StimulationAtRate2Interval
    /// </summary>
    public const string LiteralStimulationAtRate2Interval = "109048";

    /// <summary>
    /// Literal for code: StimulationAtRate3Interval
    /// </summary>
    public const string LiteralStimulationAtRate3Interval = "109049";

    /// <summary>
    /// Literal for code: StimulationAtRate4Interval
    /// </summary>
    public const string LiteralStimulationAtRate4Interval = "109050";

    /// <summary>
    /// Literal for code: TWave
    /// </summary>
    public const string LiteralTWave = "109051";

    /// <summary>
    /// Literal for code: VWave
    /// </summary>
    public const string LiteralVWave = "109052";

    /// <summary>
    /// Literal for code: VWaveOfNextBeat
    /// </summary>
    public const string LiteralVWaveOfNextBeat = "109053";

    /// <summary>
    /// Literal for code: PatientState
    /// </summary>
    public const string LiteralPatientState = "109054";

    /// <summary>
    /// Literal for code: ProtocolStage
    /// </summary>
    public const string LiteralProtocolStage = "109055";

    /// <summary>
    /// Literal for code: StressProtocol
    /// </summary>
    public const string LiteralStressProtocol = "109056";

    /// <summary>
    /// Literal for code: ContrastPhase
    /// </summary>
    public const string LiteralContrastPhase = "109058";

    /// <summary>
    /// Literal for code: PhysiologicalChallenges
    /// </summary>
    public const string LiteralPhysiologicalChallenges = "109059";

    /// <summary>
    /// Literal for code: ProcedureStepNumber
    /// </summary>
    public const string LiteralProcedureStepNumber = "109060";

    /// <summary>
    /// Literal for code: EPProcedurePhase
    /// </summary>
    public const string LiteralEPProcedurePhase = "109061";

    /// <summary>
    /// Literal for code: PulseTrainDefinition
    /// </summary>
    public const string LiteralPulseTrainDefinition = "109063";

    /// <summary>
    /// Literal for code: IndicatorMeanTransitTime
    /// </summary>
    public const string LiteralIndicatorMeanTransitTime = "109071";

    /// <summary>
    /// Literal for code: Tau
    /// </summary>
    public const string LiteralTau = "109072";

    /// <summary>
    /// Literal for code: VMaxMyocardial
    /// </summary>
    public const string LiteralVMaxMyocardial = "109073";

    /// <summary>
    /// Literal for code: RealTimeAcquisition
    /// </summary>
    public const string LiteralRealTimeAcquisition = "109080";

    /// <summary>
    /// Literal for code: ProspectiveGating
    /// </summary>
    public const string LiteralProspectiveGating = "109081";

    /// <summary>
    /// Literal for code: RetrospectiveGating
    /// </summary>
    public const string LiteralRetrospectiveGating = "109082";

    /// <summary>
    /// Literal for code: Paced
    /// </summary>
    public const string LiteralPaced = "109083";

    /// <summary>
    /// Literal for code: ReinjectionState
    /// </summary>
    public const string LiteralReinjectionState = "109092";

    /// <summary>
    /// Literal for code: RedistributionState
    /// </summary>
    public const string LiteralRedistributionState = "109093";

    /// <summary>
    /// Literal for code: DelayedRedistributionState
    /// </summary>
    public const string LiteralDelayedRedistributionState = "109094";

    /// <summary>
    /// Literal for code: AcquisitionEquipment
    /// </summary>
    public const string LiteralAcquisitionEquipment = "109101";

    /// <summary>
    /// Literal for code: ProcessingEquipment
    /// </summary>
    public const string LiteralProcessingEquipment = "109102";

    /// <summary>
    /// Literal for code: ModifyingEquipment
    /// </summary>
    public const string LiteralModifyingEquipment = "109103";

    /// <summary>
    /// Literal for code: DeIdentifyingEquipment
    /// </summary>
    public const string LiteralDeIdentifyingEquipment = "109104";

    /// <summary>
    /// Literal for code: FrameExtractingEquipment
    /// </summary>
    public const string LiteralFrameExtractingEquipment = "109105";

    /// <summary>
    /// Literal for code: EnhancedMultiFrameConversionEquipment
    /// </summary>
    public const string LiteralEnhancedMultiFrameConversionEquipment = "109106";

    /// <summary>
    /// Literal for code: Voice
    /// </summary>
    public const string LiteralVoice = "109110";

    /// <summary>
    /// Literal for code: OperatorQuoteSNarrative
    /// </summary>
    public const string LiteralOperatorQuoteSNarrative = "109111";

    /// <summary>
    /// Literal for code: AmbientRoomEnvironment
    /// </summary>
    public const string LiteralAmbientRoomEnvironment = "109112";

    /// <summary>
    /// Literal for code: DopplerAudio
    /// </summary>
    public const string LiteralDopplerAudio = "109113";

    /// <summary>
    /// Literal for code: Phonocardiogram
    /// </summary>
    public const string LiteralPhonocardiogram = "109114";

    /// <summary>
    /// Literal for code: PhysiologicalAudioSignal
    /// </summary>
    public const string LiteralPhysiologicalAudioSignal = "109115";

    /// <summary>
    /// Literal for code: ArterialPulseWaveform
    /// </summary>
    public const string LiteralArterialPulseWaveform = "109116";

    /// <summary>
    /// Literal for code: RespirationWaveform
    /// </summary>
    public const string LiteralRespirationWaveform = "109117";

    /// <summary>
    /// Literal for code: OnAdmissionToUnit
    /// </summary>
    public const string LiteralOnAdmissionToUnit = "109120";

    /// <summary>
    /// Literal for code: OnDischarge
    /// </summary>
    public const string LiteralOnDischarge = "109121";

    /// <summary>
    /// Literal for code: OnDischargeFromUnit
    /// </summary>
    public const string LiteralOnDischargeFromUnit = "109122";

    /// <summary>
    /// Literal for code: PreIntervention
    /// </summary>
    public const string LiteralPreIntervention = "109123";

    /// <summary>
    /// Literal for code: PostIntervention
    /// </summary>
    public const string LiteralPostIntervention = "109124";

    /// <summary>
    /// Literal for code: AtLastAppointment
    /// </summary>
    public const string LiteralAtLastAppointment = "109125";

    /// <summary>
    /// Literal for code: JointPositionMethod
    /// </summary>
    public const string LiteralJointPositionMethod = "109132";

    /// <summary>
    /// Literal for code: PhysicalForce
    /// </summary>
    public const string LiteralPhysicalForce = "109133";

    /// <summary>
    /// Literal for code: PriorToVoiding
    /// </summary>
    public const string LiteralPriorToVoiding = "109134";

    /// <summary>
    /// Literal for code: PostVoiding
    /// </summary>
    public const string LiteralPostVoiding = "109135";

    /// <summary>
    /// Literal for code: NeutralMusculoskeletalPosition
    /// </summary>
    public const string LiteralNeutralMusculoskeletalPosition = "109136";

    /// <summary>
    /// Literal for code: AmericaKennelClub
    /// </summary>
    public const string LiteralAmericaKennelClub = "109200";

    /// <summary>
    /// Literal for code: AmericaQuoteSPetRegistryInc
    /// </summary>
    public const string LiteralAmericaQuoteSPetRegistryInc = "109201";

    /// <summary>
    /// Literal for code: AmericanCanineAssociation
    /// </summary>
    public const string LiteralAmericanCanineAssociation = "109202";

    /// <summary>
    /// Literal for code: AmericanPurebredRegistry
    /// </summary>
    public const string LiteralAmericanPurebredRegistry = "109203";

    /// <summary>
    /// Literal for code: AmericanRareBreedAssociation
    /// </summary>
    public const string LiteralAmericanRareBreedAssociation = "109204";

    /// <summary>
    /// Literal for code: AnimalRegistryUnlimited
    /// </summary>
    public const string LiteralAnimalRegistryUnlimited = "109205";

    /// <summary>
    /// Literal for code: AnimalResearchFoundation
    /// </summary>
    public const string LiteralAnimalResearchFoundation = "109206";

    /// <summary>
    /// Literal for code: CanadianBorderCollieAssociation
    /// </summary>
    public const string LiteralCanadianBorderCollieAssociation = "109207";

    /// <summary>
    /// Literal for code: CanadianKennelClub
    /// </summary>
    public const string LiteralCanadianKennelClub = "109208";

    /// <summary>
    /// Literal for code: CanadianLivestockRecordsAssociation
    /// </summary>
    public const string LiteralCanadianLivestockRecordsAssociation = "109209";

    /// <summary>
    /// Literal for code: CanineFederationOfCanada
    /// </summary>
    public const string LiteralCanineFederationOfCanada = "109210";

    /// <summary>
    /// Literal for code: ContinentalKennelClub
    /// </summary>
    public const string LiteralContinentalKennelClub = "109211";

    /// <summary>
    /// Literal for code: DogRegistryOfAmerica
    /// </summary>
    public const string LiteralDogRegistryOfAmerica = "109212";

    /// <summary>
    /// Literal for code: FederationOfInternationalCanines
    /// </summary>
    public const string LiteralFederationOfInternationalCanines = "109213";

    /// <summary>
    /// Literal for code: InternationalProgressiveDogBreedersQuoteAlliance
    /// </summary>
    public const string LiteralInternationalProgressiveDogBreedersQuoteAlliance = "109214";

    /// <summary>
    /// Literal for code: NationalKennelClub
    /// </summary>
    public const string LiteralNationalKennelClub = "109215";

    /// <summary>
    /// Literal for code: NorthAmericanPurebredDogRegistry
    /// </summary>
    public const string LiteralNorthAmericanPurebredDogRegistry = "109216";

    /// <summary>
    /// Literal for code: UnitedAllBreedRegistry
    /// </summary>
    public const string LiteralUnitedAllBreedRegistry = "109217";

    /// <summary>
    /// Literal for code: UnitedKennelClub
    /// </summary>
    public const string LiteralUnitedKennelClub = "109218";

    /// <summary>
    /// Literal for code: UniversalKennelClubInternational
    /// </summary>
    public const string LiteralUniversalKennelClubInternational = "109219";

    /// <summary>
    /// Literal for code: WorkingCanineAssociationOfCanada
    /// </summary>
    public const string LiteralWorkingCanineAssociationOfCanada = "109220";

    /// <summary>
    /// Literal for code: WorldKennelClub
    /// </summary>
    public const string LiteralWorldKennelClub = "109221";

    /// <summary>
    /// Literal for code: WorldWideKennelClub
    /// </summary>
    public const string LiteralWorldWideKennelClub = "109222";

    /// <summary>
    /// Literal for code: OverallImageQualityEvaluation
    /// </summary>
    public const string LiteralOverallImageQualityEvaluation = "109701";

    /// <summary>
    /// Literal for code: GrayscaleResolutionEvaluation
    /// </summary>
    public const string LiteralGrayscaleResolutionEvaluation = "109702";

    /// <summary>
    /// Literal for code: LuminanceResponseEvaluation
    /// </summary>
    public const string LiteralLuminanceResponseEvaluation = "109703";

    /// <summary>
    /// Literal for code: LuminanceUniformityEvaluation
    /// </summary>
    public const string LiteralLuminanceUniformityEvaluation = "109704";

    /// <summary>
    /// Literal for code: ChromaticityEvaluation
    /// </summary>
    public const string LiteralChromaticityEvaluation = "109705";

    /// <summary>
    /// Literal for code: PixelFaultsEvaluation
    /// </summary>
    public const string LiteralPixelFaultsEvaluation = "109706";

    /// <summary>
    /// Literal for code: VeilingGlareEvaluation
    /// </summary>
    public const string LiteralVeilingGlareEvaluation = "109707";

    /// <summary>
    /// Literal for code: GeometricalImageEvaluation
    /// </summary>
    public const string LiteralGeometricalImageEvaluation = "109708";

    /// <summary>
    /// Literal for code: AngularViewingEvaluation
    /// </summary>
    public const string LiteralAngularViewingEvaluation = "109709";

    /// <summary>
    /// Literal for code: ClinicalEvaluation
    /// </summary>
    public const string LiteralClinicalEvaluation = "109710";

    /// <summary>
    /// Literal for code: TG18QCPattern
    /// </summary>
    public const string LiteralTG18QCPattern = "109801";

    /// <summary>
    /// Literal for code: TG18BRPattern
    /// </summary>
    public const string LiteralTG18BRPattern = "109802";

    /// <summary>
    /// Literal for code: TG18PQCPattern
    /// </summary>
    public const string LiteralTG18PQCPattern = "109803";

    /// <summary>
    /// Literal for code: TG18CTPattern
    /// </summary>
    public const string LiteralTG18CTPattern = "109804";

    /// <summary>
    /// Literal for code: TG18LN801Pattern
    /// </summary>
    public const string LiteralTG18LN801Pattern = "109805";

    /// <summary>
    /// Literal for code: TG18LN802Pattern
    /// </summary>
    public const string LiteralTG18LN802Pattern = "109806";

    /// <summary>
    /// Literal for code: TG18LN803Pattern
    /// </summary>
    public const string LiteralTG18LN803Pattern = "109807";

    /// <summary>
    /// Literal for code: TG18LN804Pattern
    /// </summary>
    public const string LiteralTG18LN804Pattern = "109808";

    /// <summary>
    /// Literal for code: TG18LN805Pattern
    /// </summary>
    public const string LiteralTG18LN805Pattern = "109809";

    /// <summary>
    /// Literal for code: TG18LN806Pattern
    /// </summary>
    public const string LiteralTG18LN806Pattern = "109810";

    /// <summary>
    /// Literal for code: TG18LN807Pattern
    /// </summary>
    public const string LiteralTG18LN807Pattern = "109811";

    /// <summary>
    /// Literal for code: TG18LN808Pattern
    /// </summary>
    public const string LiteralTG18LN808Pattern = "109812";

    /// <summary>
    /// Literal for code: TG18LN809Pattern
    /// </summary>
    public const string LiteralTG18LN809Pattern = "109813";

    /// <summary>
    /// Literal for code: TG18LN810Pattern
    /// </summary>
    public const string LiteralTG18LN810Pattern = "109814";

    /// <summary>
    /// Literal for code: TG18LN811Pattern
    /// </summary>
    public const string LiteralTG18LN811Pattern = "109815";

    /// <summary>
    /// Literal for code: TG18LN812Pattern
    /// </summary>
    public const string LiteralTG18LN812Pattern = "109816";

    /// <summary>
    /// Literal for code: TG18LN813Pattern
    /// </summary>
    public const string LiteralTG18LN813Pattern = "109817";

    /// <summary>
    /// Literal for code: TG18LN814Pattern
    /// </summary>
    public const string LiteralTG18LN814Pattern = "109818";

    /// <summary>
    /// Literal for code: TG18LN815Pattern
    /// </summary>
    public const string LiteralTG18LN815Pattern = "109819";

    /// <summary>
    /// Literal for code: TG18LN816Pattern
    /// </summary>
    public const string LiteralTG18LN816Pattern = "109820";

    /// <summary>
    /// Literal for code: TG18LN817Pattern
    /// </summary>
    public const string LiteralTG18LN817Pattern = "109821";

    /// <summary>
    /// Literal for code: TG18LN818Pattern
    /// </summary>
    public const string LiteralTG18LN818Pattern = "109822";

    /// <summary>
    /// Literal for code: TG18LN1201Pattern
    /// </summary>
    public const string LiteralTG18LN1201Pattern = "109823";

    /// <summary>
    /// Literal for code: TG18LN1202Pattern
    /// </summary>
    public const string LiteralTG18LN1202Pattern = "109824";

    /// <summary>
    /// Literal for code: TG18LN1203Pattern
    /// </summary>
    public const string LiteralTG18LN1203Pattern = "109825";

    /// <summary>
    /// Literal for code: TG18LN1204Pattern
    /// </summary>
    public const string LiteralTG18LN1204Pattern = "109826";

    /// <summary>
    /// Literal for code: TG18LN1205Pattern
    /// </summary>
    public const string LiteralTG18LN1205Pattern = "109827";

    /// <summary>
    /// Literal for code: TG18LN1206Pattern
    /// </summary>
    public const string LiteralTG18LN1206Pattern = "109828";

    /// <summary>
    /// Literal for code: TG18LN1207Pattern
    /// </summary>
    public const string LiteralTG18LN1207Pattern = "109829";

    /// <summary>
    /// Literal for code: TG18LN1208Pattern
    /// </summary>
    public const string LiteralTG18LN1208Pattern = "109830";

    /// <summary>
    /// Literal for code: TG18LN1209Pattern
    /// </summary>
    public const string LiteralTG18LN1209Pattern = "109831";

    /// <summary>
    /// Literal for code: TG18LN1210Pattern
    /// </summary>
    public const string LiteralTG18LN1210Pattern = "109832";

    /// <summary>
    /// Literal for code: TG18LN1211Pattern
    /// </summary>
    public const string LiteralTG18LN1211Pattern = "109833";

    /// <summary>
    /// Literal for code: TG18LN1212Pattern
    /// </summary>
    public const string LiteralTG18LN1212Pattern = "109834";

    /// <summary>
    /// Literal for code: TG18LN1213Pattern
    /// </summary>
    public const string LiteralTG18LN1213Pattern = "109835";

    /// <summary>
    /// Literal for code: TG18LN1214Pattern
    /// </summary>
    public const string LiteralTG18LN1214Pattern = "109836";

    /// <summary>
    /// Literal for code: TG18LN1215Pattern
    /// </summary>
    public const string LiteralTG18LN1215Pattern = "109837";

    /// <summary>
    /// Literal for code: TG18LN1216Pattern
    /// </summary>
    public const string LiteralTG18LN1216Pattern = "109838";

    /// <summary>
    /// Literal for code: TG18LN1217Pattern
    /// </summary>
    public const string LiteralTG18LN1217Pattern = "109839";

    /// <summary>
    /// Literal for code: TG18LN1218Pattern
    /// </summary>
    public const string LiteralTG18LN1218Pattern = "109840";

    /// <summary>
    /// Literal for code: TG18UN10Pattern
    /// </summary>
    public const string LiteralTG18UN10Pattern = "109841";

    /// <summary>
    /// Literal for code: TG18UN80Pattern
    /// </summary>
    public const string LiteralTG18UN80Pattern = "109842";

    /// <summary>
    /// Literal for code: TG18UNL10Pattern
    /// </summary>
    public const string LiteralTG18UNL10Pattern = "109843";

    /// <summary>
    /// Literal for code: TG18UNL80Pattern
    /// </summary>
    public const string LiteralTG18UNL80Pattern = "109844";

    /// <summary>
    /// Literal for code: TG18ADPattern
    /// </summary>
    public const string LiteralTG18ADPattern = "109845";

    /// <summary>
    /// Literal for code: TG18MPPattern
    /// </summary>
    public const string LiteralTG18MPPattern = "109846";

    /// <summary>
    /// Literal for code: TG18RH10Pattern
    /// </summary>
    public const string LiteralTG18RH10Pattern = "109847";

    /// <summary>
    /// Literal for code: TG18RH50Pattern
    /// </summary>
    public const string LiteralTG18RH50Pattern = "109848";

    /// <summary>
    /// Literal for code: TG18RH89Pattern
    /// </summary>
    public const string LiteralTG18RH89Pattern = "109849";

    /// <summary>
    /// Literal for code: TG18RV10Pattern
    /// </summary>
    public const string LiteralTG18RV10Pattern = "109850";

    /// <summary>
    /// Literal for code: TG18RV50Pattern
    /// </summary>
    public const string LiteralTG18RV50Pattern = "109851";

    /// <summary>
    /// Literal for code: TG18RV89Pattern
    /// </summary>
    public const string LiteralTG18RV89Pattern = "109852";

    /// <summary>
    /// Literal for code: TG18PXPattern
    /// </summary>
    public const string LiteralTG18PXPattern = "109853";

    /// <summary>
    /// Literal for code: TG18CXPattern
    /// </summary>
    public const string LiteralTG18CXPattern = "109854";

    /// <summary>
    /// Literal for code: TG18LPH10Pattern
    /// </summary>
    public const string LiteralTG18LPH10Pattern = "109855";

    /// <summary>
    /// Literal for code: TG18LPH50Pattern
    /// </summary>
    public const string LiteralTG18LPH50Pattern = "109856";

    /// <summary>
    /// Literal for code: TG18LPH89Pattern
    /// </summary>
    public const string LiteralTG18LPH89Pattern = "109857";

    /// <summary>
    /// Literal for code: TG18LPV10Pattern
    /// </summary>
    public const string LiteralTG18LPV10Pattern = "109858";

    /// <summary>
    /// Literal for code: TG18LPV50Pattern
    /// </summary>
    public const string LiteralTG18LPV50Pattern = "109859";

    /// <summary>
    /// Literal for code: TG18LPV89Pattern
    /// </summary>
    public const string LiteralTG18LPV89Pattern = "109860";

    /// <summary>
    /// Literal for code: TG18AFCPattern
    /// </summary>
    public const string LiteralTG18AFCPattern = "109861";

    /// <summary>
    /// Literal for code: TG18NS10Pattern
    /// </summary>
    public const string LiteralTG18NS10Pattern = "109862";

    /// <summary>
    /// Literal for code: TG18NS50Pattern
    /// </summary>
    public const string LiteralTG18NS50Pattern = "109863";

    /// <summary>
    /// Literal for code: TG18NS89Pattern
    /// </summary>
    public const string LiteralTG18NS89Pattern = "109864";

    /// <summary>
    /// Literal for code: TG18GVPattern
    /// </summary>
    public const string LiteralTG18GVPattern = "109865";

    /// <summary>
    /// Literal for code: TG18GVNPattern
    /// </summary>
    public const string LiteralTG18GVNPattern = "109866";

    /// <summary>
    /// Literal for code: TG18GQPattern
    /// </summary>
    public const string LiteralTG18GQPattern = "109867";

    /// <summary>
    /// Literal for code: TG18GQNPattern
    /// </summary>
    public const string LiteralTG18GQNPattern = "109868";

    /// <summary>
    /// Literal for code: TG18GQBPattern
    /// </summary>
    public const string LiteralTG18GQBPattern = "109869";

    /// <summary>
    /// Literal for code: TG18GA03Pattern
    /// </summary>
    public const string LiteralTG18GA03Pattern = "109870";

    /// <summary>
    /// Literal for code: TG18GA05Pattern
    /// </summary>
    public const string LiteralTG18GA05Pattern = "109871";

    /// <summary>
    /// Literal for code: TG18GA08Pattern
    /// </summary>
    public const string LiteralTG18GA08Pattern = "109872";

    /// <summary>
    /// Literal for code: TG18GA10Pattern
    /// </summary>
    public const string LiteralTG18GA10Pattern = "109873";

    /// <summary>
    /// Literal for code: TG18GA15Pattern
    /// </summary>
    public const string LiteralTG18GA15Pattern = "109874";

    /// <summary>
    /// Literal for code: TG18GA20Pattern
    /// </summary>
    public const string LiteralTG18GA20Pattern = "109875";

    /// <summary>
    /// Literal for code: TG18GA25Pattern
    /// </summary>
    public const string LiteralTG18GA25Pattern = "109876";

    /// <summary>
    /// Literal for code: TG18GA30Pattern
    /// </summary>
    public const string LiteralTG18GA30Pattern = "109877";

    /// <summary>
    /// Literal for code: TG18CHImage
    /// </summary>
    public const string LiteralTG18CHImage = "109878";

    /// <summary>
    /// Literal for code: TG18KNImage
    /// </summary>
    public const string LiteralTG18KNImage = "109879";

    /// <summary>
    /// Literal for code: TG18MM1Image
    /// </summary>
    public const string LiteralTG18MM1Image = "109880";

    /// <summary>
    /// Literal for code: TG18MM2Image
    /// </summary>
    public const string LiteralTG18MM2Image = "109881";

    /// <summary>
    /// Literal for code: OIQPattern
    /// </summary>
    public const string LiteralOIQPattern = "109901";

    /// <summary>
    /// Literal for code: ANGPattern
    /// </summary>
    public const string LiteralANGPattern = "109902";

    /// <summary>
    /// Literal for code: GDPattern
    /// </summary>
    public const string LiteralGDPattern = "109903";

    /// <summary>
    /// Literal for code: BN01Pattern
    /// </summary>
    public const string LiteralBN01Pattern = "109904";

    /// <summary>
    /// Literal for code: BN02Pattern
    /// </summary>
    public const string LiteralBN02Pattern = "109905";

    /// <summary>
    /// Literal for code: BN03Pattern
    /// </summary>
    public const string LiteralBN03Pattern = "109906";

    /// <summary>
    /// Literal for code: BN04Pattern
    /// </summary>
    public const string LiteralBN04Pattern = "109907";

    /// <summary>
    /// Literal for code: BN05Pattern
    /// </summary>
    public const string LiteralBN05Pattern = "109908";

    /// <summary>
    /// Literal for code: BN06Pattern
    /// </summary>
    public const string LiteralBN06Pattern = "109909";

    /// <summary>
    /// Literal for code: BN07Pattern
    /// </summary>
    public const string LiteralBN07Pattern = "109910";

    /// <summary>
    /// Literal for code: BN08Pattern
    /// </summary>
    public const string LiteralBN08Pattern = "109911";

    /// <summary>
    /// Literal for code: BN09Pattern
    /// </summary>
    public const string LiteralBN09Pattern = "109912";

    /// <summary>
    /// Literal for code: BN10Pattern
    /// </summary>
    public const string LiteralBN10Pattern = "109913";

    /// <summary>
    /// Literal for code: BN11Pattern
    /// </summary>
    public const string LiteralBN11Pattern = "109914";

    /// <summary>
    /// Literal for code: BN12Pattern
    /// </summary>
    public const string LiteralBN12Pattern = "109915";

    /// <summary>
    /// Literal for code: BN13Pattern
    /// </summary>
    public const string LiteralBN13Pattern = "109916";

    /// <summary>
    /// Literal for code: BN14Pattern
    /// </summary>
    public const string LiteralBN14Pattern = "109917";

    /// <summary>
    /// Literal for code: BN15Pattern
    /// </summary>
    public const string LiteralBN15Pattern = "109918";

    /// <summary>
    /// Literal for code: BN16Pattern
    /// </summary>
    public const string LiteralBN16Pattern = "109919";

    /// <summary>
    /// Literal for code: BN17Pattern
    /// </summary>
    public const string LiteralBN17Pattern = "109920";

    /// <summary>
    /// Literal for code: BN18Pattern
    /// </summary>
    public const string LiteralBN18Pattern = "109921";

    /// <summary>
    /// Literal for code: DINGrayscalePattern
    /// </summary>
    public const string LiteralDINGrayscalePattern = "109931";

    /// <summary>
    /// Literal for code: DINGeometryPattern
    /// </summary>
    public const string LiteralDINGeometryPattern = "109932";

    /// <summary>
    /// Literal for code: DINResolutionPattern
    /// </summary>
    public const string LiteralDINResolutionPattern = "109933";

    /// <summary>
    /// Literal for code: WhitePattern
    /// </summary>
    public const string LiteralWhitePattern = "109941";

    /// <summary>
    /// Literal for code: SMPTEPattern
    /// </summary>
    public const string LiteralSMPTEPattern = "109943";

    /// <summary>
    /// Literal for code: CRTDisplay
    /// </summary>
    public const string LiteralCRTDisplay = "109991";

    /// <summary>
    /// Literal for code: LiquidCrystalDisplay
    /// </summary>
    public const string LiteralLiquidCrystalDisplay = "109992";

    /// <summary>
    /// Literal for code: PlasmaDisplay
    /// </summary>
    public const string LiteralPlasmaDisplay = "109993";

    /// <summary>
    /// Literal for code: OLED
    /// </summary>
    public const string LiteralOLED = "109994";

    /// <summary>
    /// Literal for code: DLPRearProjectionSystem
    /// </summary>
    public const string LiteralDLPRearProjectionSystem = "109995";

    /// <summary>
    /// Literal for code: DLPFrontProjectionSystem
    /// </summary>
    public const string LiteralDLPFrontProjectionSystem = "109996";

    /// <summary>
    /// Literal for code: CRTRearProjectionSystem
    /// </summary>
    public const string LiteralCRTRearProjectionSystem = "109997";

    /// <summary>
    /// Literal for code: CRTFrontProjectionSystem
    /// </summary>
    public const string LiteralCRTFrontProjectionSystem = "109998";

    /// <summary>
    /// Literal for code: OtherProjectionSystem
    /// </summary>
    public const string LiteralOtherProjectionSystem = "109999";

    /// <summary>
    /// Literal for code: ImageProcessing
    /// </summary>
    public const string LiteralImageProcessing = "110001";

    /// <summary>
    /// Literal for code: QualityControl
    /// </summary>
    public const string LiteralQualityControl = "110002";

    /// <summary>
    /// Literal for code: ComputerAidedDiagnosis
    /// </summary>
    public const string LiteralComputerAidedDiagnosis = "110003";

    /// <summary>
    /// Literal for code: ComputerAidedDetection
    /// </summary>
    public const string LiteralComputerAidedDetection = "110004";

    /// <summary>
    /// Literal for code: Interpretation
    /// </summary>
    public const string LiteralInterpretation = "110005";

    /// <summary>
    /// Literal for code: Transcription
    /// </summary>
    public const string LiteralTranscription = "110006";

    /// <summary>
    /// Literal for code: ReportVerification
    /// </summary>
    public const string LiteralReportVerification = "110007";

    /// <summary>
    /// Literal for code: Print
    /// </summary>
    public const string LiteralPrint = "110008";

    /// <summary>
    /// Literal for code: NoSubsequentWorkitems
    /// </summary>
    public const string LiteralNoSubsequentWorkitems = "110009";

    /// <summary>
    /// Literal for code: Film
    /// </summary>
    public const string LiteralFilm = "110010";

    /// <summary>
    /// Literal for code: Dictation
    /// </summary>
    public const string LiteralDictation = "110011";

    /// <summary>
    /// Literal for code: Transcription_2
    /// </summary>
    public const string LiteralTranscription_2 = "110012";

    /// <summary>
    /// Literal for code: MediaImport
    /// </summary>
    public const string LiteralMediaImport = "110013";

    /// <summary>
    /// Literal for code: SheetFilmDigitized
    /// </summary>
    public const string LiteralSheetFilmDigitized = "110020";

    /// <summary>
    /// Literal for code: CineFilmDigitized
    /// </summary>
    public const string LiteralCineFilmDigitized = "110021";

    /// <summary>
    /// Literal for code: VideoTapeDigitized
    /// </summary>
    public const string LiteralVideoTapeDigitized = "110022";

    /// <summary>
    /// Literal for code: PaperDigitized
    /// </summary>
    public const string LiteralPaperDigitized = "110023";

    /// <summary>
    /// Literal for code: CDImported
    /// </summary>
    public const string LiteralCDImported = "110024";

    /// <summary>
    /// Literal for code: DVDImported
    /// </summary>
    public const string LiteralDVDImported = "110025";

    /// <summary>
    /// Literal for code: MODImported
    /// </summary>
    public const string LiteralMODImported = "110026";

    /// <summary>
    /// Literal for code: StudiesImported
    /// </summary>
    public const string LiteralStudiesImported = "110027";

    /// <summary>
    /// Literal for code: InstancesImported
    /// </summary>
    public const string LiteralInstancesImported = "110028";

    /// <summary>
    /// Literal for code: USBDiskEmulation
    /// </summary>
    public const string LiteralUSBDiskEmulation = "110030";

    /// <summary>
    /// Literal for code: Email
    /// </summary>
    public const string LiteralEmail = "110031";

    /// <summary>
    /// Literal for code: CD
    /// </summary>
    public const string LiteralCD = "110032";

    /// <summary>
    /// Literal for code: DVD
    /// </summary>
    public const string LiteralDVD = "110033";

    /// <summary>
    /// Literal for code: CompactFlash
    /// </summary>
    public const string LiteralCompactFlash = "110034";

    /// <summary>
    /// Literal for code: MultiMediaCard
    /// </summary>
    public const string LiteralMultiMediaCard = "110035";

    /// <summary>
    /// Literal for code: SecureDigitalCard
    /// </summary>
    public const string LiteralSecureDigitalCard = "110036";

    /// <summary>
    /// Literal for code: URI
    /// </summary>
    public const string LiteralURI = "110037";

    /// <summary>
    /// Literal for code: PaperDocument
    /// </summary>
    public const string LiteralPaperDocument = "110038";

    /// <summary>
    /// Literal for code: ApplicationActivity
    /// </summary>
    public const string LiteralApplicationActivity = "110100";

    /// <summary>
    /// Literal for code: AuditLogUsed
    /// </summary>
    public const string LiteralAuditLogUsed = "110101";

    /// <summary>
    /// Literal for code: BeginTransferringDICOMInstances
    /// </summary>
    public const string LiteralBeginTransferringDICOMInstances = "110102";

    /// <summary>
    /// Literal for code: DICOMInstancesAccessed
    /// </summary>
    public const string LiteralDICOMInstancesAccessed = "110103";

    /// <summary>
    /// Literal for code: DICOMInstancesTransferred
    /// </summary>
    public const string LiteralDICOMInstancesTransferred = "110104";

    /// <summary>
    /// Literal for code: DICOMStudyDeleted
    /// </summary>
    public const string LiteralDICOMStudyDeleted = "110105";

    /// <summary>
    /// Literal for code: Export
    /// </summary>
    public const string LiteralExport = "110106";

    /// <summary>
    /// Literal for code: Import
    /// </summary>
    public const string LiteralImport = "110107";

    /// <summary>
    /// Literal for code: NetworkEntry
    /// </summary>
    public const string LiteralNetworkEntry = "110108";

    /// <summary>
    /// Literal for code: OrderRecord
    /// </summary>
    public const string LiteralOrderRecord = "110109";

    /// <summary>
    /// Literal for code: PatientRecord
    /// </summary>
    public const string LiteralPatientRecord = "110110";

    /// <summary>
    /// Literal for code: ProcedureRecord
    /// </summary>
    public const string LiteralProcedureRecord = "110111";

    /// <summary>
    /// Literal for code: Query
    /// </summary>
    public const string LiteralQuery = "110112";

    /// <summary>
    /// Literal for code: SecurityAlert
    /// </summary>
    public const string LiteralSecurityAlert = "110113";

    /// <summary>
    /// Literal for code: UserAuthentication
    /// </summary>
    public const string LiteralUserAuthentication = "110114";

    /// <summary>
    /// Literal for code: ApplicationStart
    /// </summary>
    public const string LiteralApplicationStart = "110120";

    /// <summary>
    /// Literal for code: ApplicationStop
    /// </summary>
    public const string LiteralApplicationStop = "110121";

    /// <summary>
    /// Literal for code: Login
    /// </summary>
    public const string LiteralLogin = "110122";

    /// <summary>
    /// Literal for code: Logout
    /// </summary>
    public const string LiteralLogout = "110123";

    /// <summary>
    /// Literal for code: Attach
    /// </summary>
    public const string LiteralAttach = "110124";

    /// <summary>
    /// Literal for code: Detach
    /// </summary>
    public const string LiteralDetach = "110125";

    /// <summary>
    /// Literal for code: NodeAuthentication
    /// </summary>
    public const string LiteralNodeAuthentication = "110126";

    /// <summary>
    /// Literal for code: EmergencyOverrideStarted
    /// </summary>
    public const string LiteralEmergencyOverrideStarted = "110127";

    /// <summary>
    /// Literal for code: NetworkConfiguration
    /// </summary>
    public const string LiteralNetworkConfiguration = "110128";

    /// <summary>
    /// Literal for code: SecurityConfiguration
    /// </summary>
    public const string LiteralSecurityConfiguration = "110129";

    /// <summary>
    /// Literal for code: HardwareConfiguration
    /// </summary>
    public const string LiteralHardwareConfiguration = "110130";

    /// <summary>
    /// Literal for code: SoftwareConfiguration
    /// </summary>
    public const string LiteralSoftwareConfiguration = "110131";

    /// <summary>
    /// Literal for code: UseOfRestrictedFunction
    /// </summary>
    public const string LiteralUseOfRestrictedFunction = "110132";

    /// <summary>
    /// Literal for code: AuditRecordingStopped
    /// </summary>
    public const string LiteralAuditRecordingStopped = "110133";

    /// <summary>
    /// Literal for code: AuditRecordingStarted
    /// </summary>
    public const string LiteralAuditRecordingStarted = "110134";

    /// <summary>
    /// Literal for code: ObjectSecurityAttributesChanged
    /// </summary>
    public const string LiteralObjectSecurityAttributesChanged = "110135";

    /// <summary>
    /// Literal for code: SecurityRolesChanged
    /// </summary>
    public const string LiteralSecurityRolesChanged = "110136";

    /// <summary>
    /// Literal for code: UserSecurityAttributesChanged
    /// </summary>
    public const string LiteralUserSecurityAttributesChanged = "110137";

    /// <summary>
    /// Literal for code: EmergencyOverrideStopped
    /// </summary>
    public const string LiteralEmergencyOverrideStopped = "110138";

    /// <summary>
    /// Literal for code: RemoteServiceOperationStarted
    /// </summary>
    public const string LiteralRemoteServiceOperationStarted = "110139";

    /// <summary>
    /// Literal for code: RemoteServiceOperationStopped
    /// </summary>
    public const string LiteralRemoteServiceOperationStopped = "110140";

    /// <summary>
    /// Literal for code: LocalServiceOperationStarted
    /// </summary>
    public const string LiteralLocalServiceOperationStarted = "110141";

    /// <summary>
    /// Literal for code: LocalServiceOperationStopped
    /// </summary>
    public const string LiteralLocalServiceOperationStopped = "110142";

    /// <summary>
    /// Literal for code: Application
    /// </summary>
    public const string LiteralApplication = "110150";

    /// <summary>
    /// Literal for code: ApplicationLauncher
    /// </summary>
    public const string LiteralApplicationLauncher = "110151";

    /// <summary>
    /// Literal for code: DestinationRoleID
    /// </summary>
    public const string LiteralDestinationRoleID = "110152";

    /// <summary>
    /// Literal for code: SourceRoleID
    /// </summary>
    public const string LiteralSourceRoleID = "110153";

    /// <summary>
    /// Literal for code: DestinationMedia
    /// </summary>
    public const string LiteralDestinationMedia = "110154";

    /// <summary>
    /// Literal for code: SourceMedia
    /// </summary>
    public const string LiteralSourceMedia = "110155";

    /// <summary>
    /// Literal for code: StudyInstanceUID
    /// </summary>
    public const string LiteralStudyInstanceUID = "110180";

    /// <summary>
    /// Literal for code: SOPClassUID
    /// </summary>
    public const string LiteralSOPClassUID = "110181";

    /// <summary>
    /// Literal for code: NodeID
    /// </summary>
    public const string LiteralNodeID = "110182";

    /// <summary>
    /// Literal for code: IssuerOfIdentifier
    /// </summary>
    public const string LiteralIssuerOfIdentifier = "110190";

    /// <summary>
    /// Literal for code: DoctorCanceledProcedure
    /// </summary>
    public const string LiteralDoctorCanceledProcedure = "110500";

    /// <summary>
    /// Literal for code: EquipmentFailure
    /// </summary>
    public const string LiteralEquipmentFailure = "110501";

    /// <summary>
    /// Literal for code: IncorrectProcedureOrdered
    /// </summary>
    public const string LiteralIncorrectProcedureOrdered = "110502";

    /// <summary>
    /// Literal for code: PatientAllergicToMediaContrast
    /// </summary>
    public const string LiteralPatientAllergicToMediaContrast = "110503";

    /// <summary>
    /// Literal for code: PatientDied
    /// </summary>
    public const string LiteralPatientDied = "110504";

    /// <summary>
    /// Literal for code: PatientRefusedToContinueProcedure
    /// </summary>
    public const string LiteralPatientRefusedToContinueProcedure = "110505";

    /// <summary>
    /// Literal for code: PatientTakenForTreatmentOrSurgery
    /// </summary>
    public const string LiteralPatientTakenForTreatmentOrSurgery = "110506";

    /// <summary>
    /// Literal for code: PatientDidNotArrive
    /// </summary>
    public const string LiteralPatientDidNotArrive = "110507";

    /// <summary>
    /// Literal for code: PatientPregnant
    /// </summary>
    public const string LiteralPatientPregnant = "110508";

    /// <summary>
    /// Literal for code: ChangeOfProcedureForCorrectCharging
    /// </summary>
    public const string LiteralChangeOfProcedureForCorrectCharging = "110509";

    /// <summary>
    /// Literal for code: DuplicateOrder
    /// </summary>
    public const string LiteralDuplicateOrder = "110510";

    /// <summary>
    /// Literal for code: NursingUnitCancel
    /// </summary>
    public const string LiteralNursingUnitCancel = "110511";

    /// <summary>
    /// Literal for code: IncorrectSideOrdered
    /// </summary>
    public const string LiteralIncorrectSideOrdered = "110512";

    /// <summary>
    /// Literal for code: DiscontinuedForUnspecifiedReason
    /// </summary>
    public const string LiteralDiscontinuedForUnspecifiedReason = "110513";

    /// <summary>
    /// Literal for code: IncorrectWorklistEntrySelected
    /// </summary>
    public const string LiteralIncorrectWorklistEntrySelected = "110514";

    /// <summary>
    /// Literal for code: PatientConditionPreventedContinuing
    /// </summary>
    public const string LiteralPatientConditionPreventedContinuing = "110515";

    /// <summary>
    /// Literal for code: EquipmentChange
    /// </summary>
    public const string LiteralEquipmentChange = "110516";

    /// <summary>
    /// Literal for code: PatientMovement
    /// </summary>
    public const string LiteralPatientMovement = "110518";

    /// <summary>
    /// Literal for code: OperatorError
    /// </summary>
    public const string LiteralOperatorError = "110519";

    /// <summary>
    /// Literal for code: ObjectsIncorrectlyFormatted
    /// </summary>
    public const string LiteralObjectsIncorrectlyFormatted = "110521";

    /// <summary>
    /// Literal for code: ObjectTypesNotSupported
    /// </summary>
    public const string LiteralObjectTypesNotSupported = "110522";

    /// <summary>
    /// Literal for code: ObjectSetIncomplete
    /// </summary>
    public const string LiteralObjectSetIncomplete = "110523";

    /// <summary>
    /// Literal for code: MediaFailure
    /// </summary>
    public const string LiteralMediaFailure = "110524";

    /// <summary>
    /// Literal for code: ResourcePreEmpted
    /// </summary>
    public const string LiteralResourcePreEmpted = "110526";

    /// <summary>
    /// Literal for code: ResourceInadequate
    /// </summary>
    public const string LiteralResourceInadequate = "110527";

    /// <summary>
    /// Literal for code: DiscontinuedProcedureStepRescheduled
    /// </summary>
    public const string LiteralDiscontinuedProcedureStepRescheduled = "110528";

    /// <summary>
    /// Literal for code: DiscontinuedProcedureStepReschedulingRecommended
    /// </summary>
    public const string LiteralDiscontinuedProcedureStepReschedulingRecommended = "110529";

    /// <summary>
    /// Literal for code: VentralDiencephalon
    /// </summary>
    public const string LiteralVentralDiencephalon = "110700";

    /// <summary>
    /// Literal for code: WhiteMatterT1Hypointensity
    /// </summary>
    public const string LiteralWhiteMatterT1Hypointensity = "110701";

    /// <summary>
    /// Literal for code: WhiteMatterT2Hyperintensity
    /// </summary>
    public const string LiteralWhiteMatterT2Hyperintensity = "110702";

    /// <summary>
    /// Literal for code: SuperiorLongitudinalFasciculusI
    /// </summary>
    public const string LiteralSuperiorLongitudinalFasciculusI = "110703";

    /// <summary>
    /// Literal for code: SuperiorLongitudinalFasciculusII
    /// </summary>
    public const string LiteralSuperiorLongitudinalFasciculusII = "110704";

    /// <summary>
    /// Literal for code: SuperiorLongitudinalFasciculusIII
    /// </summary>
    public const string LiteralSuperiorLongitudinalFasciculusIII = "110705";

    /// <summary>
    /// Literal for code: PerilesionalWhiteMatter
    /// </summary>
    public const string LiteralPerilesionalWhiteMatter = "110706";

    /// <summary>
    /// Literal for code: SpinTaggingPerfusionMRSignalIntensity
    /// </summary>
    public const string LiteralSpinTaggingPerfusionMRSignalIntensity = "110800";

    /// <summary>
    /// Literal for code: ContrastAgentAngioMRSignalIntensity
    /// </summary>
    public const string LiteralContrastAgentAngioMRSignalIntensity = "110801";

    /// <summary>
    /// Literal for code: TimeOfFlightAngioMRSignalIntensity
    /// </summary>
    public const string LiteralTimeOfFlightAngioMRSignalIntensity = "110802";

    /// <summary>
    /// Literal for code: ProtonDensityWeightedMRSignalIntensity
    /// </summary>
    public const string LiteralProtonDensityWeightedMRSignalIntensity = "110803";

    /// <summary>
    /// Literal for code: T1WeightedMRSignalIntensity
    /// </summary>
    public const string LiteralT1WeightedMRSignalIntensity = "110804";

    /// <summary>
    /// Literal for code: T2WeightedMRSignalIntensity
    /// </summary>
    public const string LiteralT2WeightedMRSignalIntensity = "110805";

    /// <summary>
    /// Literal for code: T2AsteriskWeightedMRSignalIntensity
    /// </summary>
    public const string LiteralT2AsteriskWeightedMRSignalIntensity = "110806";

    /// <summary>
    /// Literal for code: FieldMapMRSignalIntensity
    /// </summary>
    public const string LiteralFieldMapMRSignalIntensity = "110807";

    /// <summary>
    /// Literal for code: FractionalAnisotropy
    /// </summary>
    public const string LiteralFractionalAnisotropy = "110808";

    /// <summary>
    /// Literal for code: RelativeAnisotropy
    /// </summary>
    public const string LiteralRelativeAnisotropy = "110809";

    /// <summary>
    /// Literal for code: VolumetricDiffusionDxxComponent
    /// </summary>
    public const string LiteralVolumetricDiffusionDxxComponent = "110810";

    /// <summary>
    /// Literal for code: VolumetricDiffusionDxyComponent
    /// </summary>
    public const string LiteralVolumetricDiffusionDxyComponent = "110811";

    /// <summary>
    /// Literal for code: VolumetricDiffusionDxzComponent
    /// </summary>
    public const string LiteralVolumetricDiffusionDxzComponent = "110812";

    /// <summary>
    /// Literal for code: VolumetricDiffusionDyyComponent
    /// </summary>
    public const string LiteralVolumetricDiffusionDyyComponent = "110813";

    /// <summary>
    /// Literal for code: VolumetricDiffusionDyzComponent
    /// </summary>
    public const string LiteralVolumetricDiffusionDyzComponent = "110814";

    /// <summary>
    /// Literal for code: VolumetricDiffusionDzzComponent
    /// </summary>
    public const string LiteralVolumetricDiffusionDzzComponent = "110815";

    /// <summary>
    /// Literal for code: T1WeightedDynamicContrastEnhancedMRSignalIntensity
    /// </summary>
    public const string LiteralT1WeightedDynamicContrastEnhancedMRSignalIntensity = "110816";

    /// <summary>
    /// Literal for code: T2WeightedDynamicContrastEnhancedMRSignalIntensity
    /// </summary>
    public const string LiteralT2WeightedDynamicContrastEnhancedMRSignalIntensity = "110817";

    /// <summary>
    /// Literal for code: T2AsteriskWeightedDynamicContrastEnhancedMRSignalIntensity
    /// </summary>
    public const string LiteralT2AsteriskWeightedDynamicContrastEnhancedMRSignalIntensity = "110818";

    /// <summary>
    /// Literal for code: BloodOxygenationLevel
    /// </summary>
    public const string LiteralBloodOxygenationLevel = "110819";

    /// <summary>
    /// Literal for code: NuclearMedicineProjectionActivity
    /// </summary>
    public const string LiteralNuclearMedicineProjectionActivity = "110820";

    /// <summary>
    /// Literal for code: NuclearMedicineTomographicActivity
    /// </summary>
    public const string LiteralNuclearMedicineTomographicActivity = "110821";

    /// <summary>
    /// Literal for code: SpatialDisplacementXComponent
    /// </summary>
    public const string LiteralSpatialDisplacementXComponent = "110822";

    /// <summary>
    /// Literal for code: SpatialDisplacementYComponent
    /// </summary>
    public const string LiteralSpatialDisplacementYComponent = "110823";

    /// <summary>
    /// Literal for code: SpatialDisplacementZComponent
    /// </summary>
    public const string LiteralSpatialDisplacementZComponent = "110824";

    /// <summary>
    /// Literal for code: HemodynamicResistance
    /// </summary>
    public const string LiteralHemodynamicResistance = "110825";

    /// <summary>
    /// Literal for code: IndexedHemodynamicResistance
    /// </summary>
    public const string LiteralIndexedHemodynamicResistance = "110826";

    /// <summary>
    /// Literal for code: TissueVelocity
    /// </summary>
    public const string LiteralTissueVelocity = "110827";

    /// <summary>
    /// Literal for code: FlowVelocity
    /// </summary>
    public const string LiteralFlowVelocity = "110828";

    /// <summary>
    /// Literal for code: FlowVariance
    /// </summary>
    public const string LiteralFlowVariance = "110829";

    /// <summary>
    /// Literal for code: Elasticity
    /// </summary>
    public const string LiteralElasticity = "110830";

    /// <summary>
    /// Literal for code: Perfusion
    /// </summary>
    public const string LiteralPerfusion = "110831";

    /// <summary>
    /// Literal for code: SpeedOfSound
    /// </summary>
    public const string LiteralSpeedOfSound = "110832";

    /// <summary>
    /// Literal for code: UltrasoundAttenuation
    /// </summary>
    public const string LiteralUltrasoundAttenuation = "110833";

    /// <summary>
    /// Literal for code: RGBRComponent
    /// </summary>
    public const string LiteralRGBRComponent = "110834";

    /// <summary>
    /// Literal for code: RGBGComponent
    /// </summary>
    public const string LiteralRGBGComponent = "110835";

    /// <summary>
    /// Literal for code: RGBBComponent
    /// </summary>
    public const string LiteralRGBBComponent = "110836";

    /// <summary>
    /// Literal for code: YBRFULLYComponent
    /// </summary>
    public const string LiteralYBRFULLYComponent = "110837";

    /// <summary>
    /// Literal for code: YBRFULLCBComponent
    /// </summary>
    public const string LiteralYBRFULLCBComponent = "110838";

    /// <summary>
    /// Literal for code: YBRFULLCRComponent
    /// </summary>
    public const string LiteralYBRFULLCRComponent = "110839";

    /// <summary>
    /// Literal for code: YBRPARTIALYComponent
    /// </summary>
    public const string LiteralYBRPARTIALYComponent = "110840";

    /// <summary>
    /// Literal for code: YBRPARTIALCBComponent
    /// </summary>
    public const string LiteralYBRPARTIALCBComponent = "110841";

    /// <summary>
    /// Literal for code: YBRPARTIALCRComponent
    /// </summary>
    public const string LiteralYBRPARTIALCRComponent = "110842";

    /// <summary>
    /// Literal for code: YBRICTYComponent
    /// </summary>
    public const string LiteralYBRICTYComponent = "110843";

    /// <summary>
    /// Literal for code: YBRICTCBComponent
    /// </summary>
    public const string LiteralYBRICTCBComponent = "110844";

    /// <summary>
    /// Literal for code: YBRICTCRComponent
    /// </summary>
    public const string LiteralYBRICTCRComponent = "110845";

    /// <summary>
    /// Literal for code: YBRRCTYComponent
    /// </summary>
    public const string LiteralYBRRCTYComponent = "110846";

    /// <summary>
    /// Literal for code: YBRRCTCBComponent
    /// </summary>
    public const string LiteralYBRRCTCBComponent = "110847";

    /// <summary>
    /// Literal for code: YBRRCTCRComponent
    /// </summary>
    public const string LiteralYBRRCTCRComponent = "110848";

    /// <summary>
    /// Literal for code: Echogenicity
    /// </summary>
    public const string LiteralEchogenicity = "110849";

    /// <summary>
    /// Literal for code: XRayAttenuation
    /// </summary>
    public const string LiteralXRayAttenuation = "110850";

    /// <summary>
    /// Literal for code: MRSignalIntensity
    /// </summary>
    public const string LiteralMRSignalIntensity = "110852";

    /// <summary>
    /// Literal for code: BinarySegmentation
    /// </summary>
    public const string LiteralBinarySegmentation = "110853";

    /// <summary>
    /// Literal for code: FractionalProbabilisticSegmentation
    /// </summary>
    public const string LiteralFractionalProbabilisticSegmentation = "110854";

    /// <summary>
    /// Literal for code: FractionalOccupancySegmentation
    /// </summary>
    public const string LiteralFractionalOccupancySegmentation = "110855";

    /// <summary>
    /// Literal for code: LinearDisplacement
    /// </summary>
    public const string LiteralLinearDisplacement = "110856";

    /// <summary>
    /// Literal for code: PhotonEnergy
    /// </summary>
    public const string LiteralPhotonEnergy = "110857";

    /// <summary>
    /// Literal for code: Time
    /// </summary>
    public const string LiteralTime = "110858";

    /// <summary>
    /// Literal for code: Angle
    /// </summary>
    public const string LiteralAngle = "110859";

    /// <summary>
    /// Literal for code: LeftRightAxis
    /// </summary>
    public const string LiteralLeftRightAxis = "110860";

    /// <summary>
    /// Literal for code: HeadFootAxis
    /// </summary>
    public const string LiteralHeadFootAxis = "110861";

    /// <summary>
    /// Literal for code: AnteriorPosteriorAxis
    /// </summary>
    public const string LiteralAnteriorPosteriorAxis = "110862";

    /// <summary>
    /// Literal for code: ApexBaseAxis
    /// </summary>
    public const string LiteralApexBaseAxis = "110863";

    /// <summary>
    /// Literal for code: AnteriorInferiorAxis
    /// </summary>
    public const string LiteralAnteriorInferiorAxis = "110864";

    /// <summary>
    /// Literal for code: SeptumWallAxis
    /// </summary>
    public const string LiteralSeptumWallAxis = "110865";

    /// <summary>
    /// Literal for code: RightToLeft
    /// </summary>
    public const string LiteralRightToLeft = "110866";

    /// <summary>
    /// Literal for code: LeftToRight
    /// </summary>
    public const string LiteralLeftToRight = "110867";

    /// <summary>
    /// Literal for code: HeadToFoot
    /// </summary>
    public const string LiteralHeadToFoot = "110868";

    /// <summary>
    /// Literal for code: FootToHead
    /// </summary>
    public const string LiteralFootToHead = "110869";

    /// <summary>
    /// Literal for code: AnteriorToPosterior
    /// </summary>
    public const string LiteralAnteriorToPosterior = "110870";

    /// <summary>
    /// Literal for code: PosteriorToAnterior
    /// </summary>
    public const string LiteralPosteriorToAnterior = "110871";

    /// <summary>
    /// Literal for code: ApexToBase
    /// </summary>
    public const string LiteralApexToBase = "110872";

    /// <summary>
    /// Literal for code: BaseToApex
    /// </summary>
    public const string LiteralBaseToApex = "110873";

    /// <summary>
    /// Literal for code: AnteriorToInferior
    /// </summary>
    public const string LiteralAnteriorToInferior = "110874";

    /// <summary>
    /// Literal for code: InferiorToAnterior
    /// </summary>
    public const string LiteralInferiorToAnterior = "110875";

    /// <summary>
    /// Literal for code: SeptumToWall
    /// </summary>
    public const string LiteralSeptumToWall = "110876";

    /// <summary>
    /// Literal for code: WallToSeptum
    /// </summary>
    public const string LiteralWallToSeptum = "110877";

    /// <summary>
    /// Literal for code: ImagePositionPatientX
    /// </summary>
    public const string LiteralImagePositionPatientX = "110901";

    /// <summary>
    /// Literal for code: ImagePositionPatientY
    /// </summary>
    public const string LiteralImagePositionPatientY = "110902";

    /// <summary>
    /// Literal for code: ImagePositionPatientZ
    /// </summary>
    public const string LiteralImagePositionPatientZ = "110903";

    /// <summary>
    /// Literal for code: ImageOrientationPatientRowX
    /// </summary>
    public const string LiteralImageOrientationPatientRowX = "110904";

    /// <summary>
    /// Literal for code: ImageOrientationPatientRowY
    /// </summary>
    public const string LiteralImageOrientationPatientRowY = "110905";

    /// <summary>
    /// Literal for code: ImageOrientationPatientRowZ
    /// </summary>
    public const string LiteralImageOrientationPatientRowZ = "110906";

    /// <summary>
    /// Literal for code: ImageOrientationPatientColumnX
    /// </summary>
    public const string LiteralImageOrientationPatientColumnX = "110907";

    /// <summary>
    /// Literal for code: ImageOrientationPatientColumnY
    /// </summary>
    public const string LiteralImageOrientationPatientColumnY = "110908";

    /// <summary>
    /// Literal for code: ImageOrientationPatientColumnZ
    /// </summary>
    public const string LiteralImageOrientationPatientColumnZ = "110909";

    /// <summary>
    /// Literal for code: PixelDataRows
    /// </summary>
    public const string LiteralPixelDataRows = "110910";

    /// <summary>
    /// Literal for code: PixelDataColumns
    /// </summary>
    public const string LiteralPixelDataColumns = "110911";

    /// <summary>
    /// Literal for code: AlgorithmName
    /// </summary>
    public const string LiteralAlgorithmName = "111001";

    /// <summary>
    /// Literal for code: AlgorithmParameters
    /// </summary>
    public const string LiteralAlgorithmParameters = "111002";

    /// <summary>
    /// Literal for code: AlgorithmVersion
    /// </summary>
    public const string LiteralAlgorithmVersion = "111003";

    /// <summary>
    /// Literal for code: AnalysisPerformed
    /// </summary>
    public const string LiteralAnalysisPerformed = "111004";

    /// <summary>
    /// Literal for code: AssessmentCategory
    /// </summary>
    public const string LiteralAssessmentCategory = "111005";

    /// <summary>
    /// Literal for code: BreastOutlineIncludingPectoralMuscleTissue
    /// </summary>
    public const string LiteralBreastOutlineIncludingPectoralMuscleTissue = "111007";

    /// <summary>
    /// Literal for code: CalcificationDistribution
    /// </summary>
    public const string LiteralCalcificationDistribution = "111008";

    /// <summary>
    /// Literal for code: CalcificationType
    /// </summary>
    public const string LiteralCalcificationType = "111009";

    /// <summary>
    /// Literal for code: Center
    /// </summary>
    public const string LiteralCenter = "111010";

    /// <summary>
    /// Literal for code: CertaintyOfFeature
    /// </summary>
    public const string LiteralCertaintyOfFeature = "111011";

    /// <summary>
    /// Literal for code: CertaintyOfFinding
    /// </summary>
    public const string LiteralCertaintyOfFinding = "111012";

    /// <summary>
    /// Literal for code: CertaintyOfImpression
    /// </summary>
    public const string LiteralCertaintyOfImpression = "111013";

    /// <summary>
    /// Literal for code: ClockfaceOrRegion
    /// </summary>
    public const string LiteralClockfaceOrRegion = "111014";

    /// <summary>
    /// Literal for code: CompositeFeature
    /// </summary>
    public const string LiteralCompositeFeature = "111015";

    /// <summary>
    /// Literal for code: CompositeType
    /// </summary>
    public const string LiteralCompositeType = "111016";

    /// <summary>
    /// Literal for code: CADProcessingAndFindingsSummary
    /// </summary>
    public const string LiteralCADProcessingAndFindingsSummary = "111017";

    /// <summary>
    /// Literal for code: ContentDate
    /// </summary>
    public const string LiteralContentDate = "111018";

    /// <summary>
    /// Literal for code: ContentTime
    /// </summary>
    public const string LiteralContentTime = "111019";

    /// <summary>
    /// Literal for code: Depth
    /// </summary>
    public const string LiteralDepth = "111020";

    /// <summary>
    /// Literal for code: DescriptionOfChange
    /// </summary>
    public const string LiteralDescriptionOfChange = "111021";

    /// <summary>
    /// Literal for code: DetectionPerformed
    /// </summary>
    public const string LiteralDetectionPerformed = "111022";

    /// <summary>
    /// Literal for code: DifferentialDiagnosisImpression
    /// </summary>
    public const string LiteralDifferentialDiagnosisImpression = "111023";

    /// <summary>
    /// Literal for code: FailedAnalyses
    /// </summary>
    public const string LiteralFailedAnalyses = "111024";

    /// <summary>
    /// Literal for code: FailedDetections
    /// </summary>
    public const string LiteralFailedDetections = "111025";

    /// <summary>
    /// Literal for code: HorizontalPixelSpacing
    /// </summary>
    public const string LiteralHorizontalPixelSpacing = "111026";

    /// <summary>
    /// Literal for code: ImageLaterality
    /// </summary>
    public const string LiteralImageLaterality = "111027";

    /// <summary>
    /// Literal for code: ImageLibrary
    /// </summary>
    public const string LiteralImageLibrary = "111028";

    /// <summary>
    /// Literal for code: ImageQualityRating
    /// </summary>
    public const string LiteralImageQualityRating = "111029";

    /// <summary>
    /// Literal for code: ImageRegion
    /// </summary>
    public const string LiteralImageRegion = "111030";

    /// <summary>
    /// Literal for code: ImageView
    /// </summary>
    public const string LiteralImageView = "111031";

    /// <summary>
    /// Literal for code: ImageViewModifier
    /// </summary>
    public const string LiteralImageViewModifier = "111032";

    /// <summary>
    /// Literal for code: ImpressionDescription
    /// </summary>
    public const string LiteralImpressionDescription = "111033";

    /// <summary>
    /// Literal for code: IndividualImpressionRecommendation
    /// </summary>
    public const string LiteralIndividualImpressionRecommendation = "111034";

    /// <summary>
    /// Literal for code: LesionDensity
    /// </summary>
    public const string LiteralLesionDensity = "111035";

    /// <summary>
    /// Literal for code: MammographyCADReport
    /// </summary>
    public const string LiteralMammographyCADReport = "111036";

    /// <summary>
    /// Literal for code: Margins
    /// </summary>
    public const string LiteralMargins = "111037";

    /// <summary>
    /// Literal for code: NumberOfCalcifications
    /// </summary>
    public const string LiteralNumberOfCalcifications = "111038";

    /// <summary>
    /// Literal for code: ObjectType
    /// </summary>
    public const string LiteralObjectType = "111039";

    /// <summary>
    /// Literal for code: OriginalSource
    /// </summary>
    public const string LiteralOriginalSource = "111040";

    /// <summary>
    /// Literal for code: Outline
    /// </summary>
    public const string LiteralOutline = "111041";

    /// <summary>
    /// Literal for code: Pathology
    /// </summary>
    public const string LiteralPathology = "111042";

    /// <summary>
    /// Literal for code: PatientOrientationColumn
    /// </summary>
    public const string LiteralPatientOrientationColumn = "111043";

    /// <summary>
    /// Literal for code: PatientOrientationRow
    /// </summary>
    public const string LiteralPatientOrientationRow = "111044";

    /// <summary>
    /// Literal for code: PectoralMuscleOutline
    /// </summary>
    public const string LiteralPectoralMuscleOutline = "111045";

    /// <summary>
    /// Literal for code: PercentFibroglandularTissue
    /// </summary>
    public const string LiteralPercentFibroglandularTissue = "111046";

    /// <summary>
    /// Literal for code: ProbabilityOfCancer
    /// </summary>
    public const string LiteralProbabilityOfCancer = "111047";

    /// <summary>
    /// Literal for code: QuadrantLocation
    /// </summary>
    public const string LiteralQuadrantLocation = "111048";

    /// <summary>
    /// Literal for code: QualitativeDifference
    /// </summary>
    public const string LiteralQualitativeDifference = "111049";

    /// <summary>
    /// Literal for code: QualityAssessment
    /// </summary>
    public const string LiteralQualityAssessment = "111050";

    /// <summary>
    /// Literal for code: QualityControlStandard
    /// </summary>
    public const string LiteralQualityControlStandard = "111051";

    /// <summary>
    /// Literal for code: QualityFinding
    /// </summary>
    public const string LiteralQualityFinding = "111052";

    /// <summary>
    /// Literal for code: RecommendedFollowUp
    /// </summary>
    public const string LiteralRecommendedFollowUp = "111053";

    /// <summary>
    /// Literal for code: RecommendedFollowUpDate
    /// </summary>
    public const string LiteralRecommendedFollowUpDate = "111054";

    /// <summary>
    /// Literal for code: RecommendedFollowUpInterval
    /// </summary>
    public const string LiteralRecommendedFollowUpInterval = "111055";

    /// <summary>
    /// Literal for code: RenderingIntent
    /// </summary>
    public const string LiteralRenderingIntent = "111056";

    /// <summary>
    /// Literal for code: ScopeOfFeature
    /// </summary>
    public const string LiteralScopeOfFeature = "111057";

    /// <summary>
    /// Literal for code: SelectedRegionDescription
    /// </summary>
    public const string LiteralSelectedRegionDescription = "111058";

    /// <summary>
    /// Literal for code: SingleImageFinding
    /// </summary>
    public const string LiteralSingleImageFinding = "111059";

    /// <summary>
    /// Literal for code: StudyDate
    /// </summary>
    public const string LiteralStudyDate = "111060";

    /// <summary>
    /// Literal for code: StudyTime
    /// </summary>
    public const string LiteralStudyTime = "111061";

    /// <summary>
    /// Literal for code: SuccessfulAnalyses
    /// </summary>
    public const string LiteralSuccessfulAnalyses = "111062";

    /// <summary>
    /// Literal for code: SuccessfulDetections
    /// </summary>
    public const string LiteralSuccessfulDetections = "111063";

    /// <summary>
    /// Literal for code: SummaryOfDetections
    /// </summary>
    public const string LiteralSummaryOfDetections = "111064";

    /// <summary>
    /// Literal for code: SummaryOfAnalyses
    /// </summary>
    public const string LiteralSummaryOfAnalyses = "111065";

    /// <summary>
    /// Literal for code: VerticalPixelSpacing
    /// </summary>
    public const string LiteralVerticalPixelSpacing = "111066";

    /// <summary>
    /// Literal for code: Crosstable
    /// </summary>
    public const string LiteralCrosstable = "111069";

    /// <summary>
    /// Literal for code: CADOperatingPoint
    /// </summary>
    public const string LiteralCADOperatingPoint = "111071";

    /// <summary>
    /// Literal for code: MaximumCADOperatingPoint
    /// </summary>
    public const string LiteralMaximumCADOperatingPoint = "111072";

    /// <summary>
    /// Literal for code: CADOperatingPointDescription
    /// </summary>
    public const string LiteralCADOperatingPointDescription = "111081";

    /// <summary>
    /// Literal for code: FalseMarkersPerImage
    /// </summary>
    public const string LiteralFalseMarkersPerImage = "111086";

    /// <summary>
    /// Literal for code: FalseMarkersPerCase
    /// </summary>
    public const string LiteralFalseMarkersPerCase = "111087";

    /// <summary>
    /// Literal for code: CaseSensitivity
    /// </summary>
    public const string LiteralCaseSensitivity = "111088";

    /// <summary>
    /// Literal for code: LesionSensitivity
    /// </summary>
    public const string LiteralLesionSensitivity = "111089";

    /// <summary>
    /// Literal for code: CaseSpecificity
    /// </summary>
    public const string LiteralCaseSpecificity = "111090";

    /// <summary>
    /// Literal for code: ImageSpecificity
    /// </summary>
    public const string LiteralImageSpecificity = "111091";

    /// <summary>
    /// Literal for code: RecommendedCADOperatingPoint
    /// </summary>
    public const string LiteralRecommendedCADOperatingPoint = "111092";

    /// <summary>
    /// Literal for code: CADOperatingPointTable
    /// </summary>
    public const string LiteralCADOperatingPointTable = "111093";

    /// <summary>
    /// Literal for code: SelectedRegion
    /// </summary>
    public const string LiteralSelectedRegion = "111099";

    /// <summary>
    /// Literal for code: BreastGeometry
    /// </summary>
    public const string LiteralBreastGeometry = "111100";

    /// <summary>
    /// Literal for code: ImageQuality
    /// </summary>
    public const string LiteralImageQuality = "111101";

    /// <summary>
    /// Literal for code: NonLesion
    /// </summary>
    public const string LiteralNonLesion = "111102";

    /// <summary>
    /// Literal for code: CooperQuoteSLigamentChanges
    /// </summary>
    public const string LiteralCooperQuoteSLigamentChanges = "111111";

    /// <summary>
    /// Literal for code: MassInTheSkin
    /// </summary>
    public const string LiteralMassInTheSkin = "111112";

    /// <summary>
    /// Literal for code: MassOnTheSkin
    /// </summary>
    public const string LiteralMassOnTheSkin = "111113";

    /// <summary>
    /// Literal for code: PostProcedureMammogramsForMarkerPlacement
    /// </summary>
    public const string LiteralPostProcedureMammogramsForMarkerPlacement = "111120";

    /// <summary>
    /// Literal for code: FollowUpPostBiopsyAsDirectedByClinician
    /// </summary>
    public const string LiteralFollowUpPostBiopsyAsDirectedByClinician = "111121";

    /// <summary>
    /// Literal for code: KnownBiopsyProvenMalignancyTakeAppropriateAction
    /// </summary>
    public const string LiteralKnownBiopsyProvenMalignancyTakeAppropriateAction = "111122";

    /// <summary>
    /// Literal for code: MarkerPlacement
    /// </summary>
    public const string LiteralMarkerPlacement = "111123";

    /// <summary>
    /// Literal for code: PersonalHistoryOfBreastCancerWithMastectomy
    /// </summary>
    public const string LiteralPersonalHistoryOfBreastCancerWithMastectomy = "111124";

    /// <summary>
    /// Literal for code: KnownBiopsyProvenMalignancy
    /// </summary>
    public const string LiteralKnownBiopsyProvenMalignancy = "111125";

    /// <summary>
    /// Literal for code: ImageDetectedMass
    /// </summary>
    public const string LiteralImageDetectedMass = "111126";

    /// <summary>
    /// Literal for code: Targeted
    /// </summary>
    public const string LiteralTargeted = "111127";

    /// <summary>
    /// Literal for code: Survey
    /// </summary>
    public const string LiteralSurvey = "111128";

    /// <summary>
    /// Literal for code: ClusteredMicrocysts
    /// </summary>
    public const string LiteralClusteredMicrocysts = "111129";

    /// <summary>
    /// Literal for code: ComplicatedCyst
    /// </summary>
    public const string LiteralComplicatedCyst = "111130";

    /// <summary>
    /// Literal for code: AdditionalProjections
    /// </summary>
    public const string LiteralAdditionalProjections = "111135";

    /// <summary>
    /// Literal for code: SpotMagnificationViewS
    /// </summary>
    public const string LiteralSpotMagnificationViewS = "111136";

    /// <summary>
    /// Literal for code: OldFilmsForComparison
    /// </summary>
    public const string LiteralOldFilmsForComparison = "111138";

    /// <summary>
    /// Literal for code: NormalIntervalFollowUp
    /// </summary>
    public const string LiteralNormalIntervalFollowUp = "111140";

    /// <summary>
    /// Literal for code: AnyDecisionToBiopsyShouldBeBasedOnClinicalAssessment
    /// </summary>
    public const string LiteralAnyDecisionToBiopsyShouldBeBasedOnClinicalAssessment = "111141";

    /// <summary>
    /// Literal for code: FollowUpAtShortInterval111Months
    /// </summary>
    public const string LiteralFollowUpAtShortInterval111Months = "111142";

    /// <summary>
    /// Literal for code: BiopsyShouldBeConsidered
    /// </summary>
    public const string LiteralBiopsyShouldBeConsidered = "111143";

    /// <summary>
    /// Literal for code: NeedleLocalizationAndBiopsy
    /// </summary>
    public const string LiteralNeedleLocalizationAndBiopsy = "111144";

    /// <summary>
    /// Literal for code: HistologyUsingCoreBiopsy
    /// </summary>
    public const string LiteralHistologyUsingCoreBiopsy = "111145";

    /// <summary>
    /// Literal for code: SuggestiveOfMalignancyTakeAppropriateAction
    /// </summary>
    public const string LiteralSuggestiveOfMalignancyTakeAppropriateAction = "111146";

    /// <summary>
    /// Literal for code: CytologicAnalysis
    /// </summary>
    public const string LiteralCytologicAnalysis = "111147";

    /// <summary>
    /// Literal for code: BiopsyShouldBeStronglyConsidered
    /// </summary>
    public const string LiteralBiopsyShouldBeStronglyConsidered = "111148";

    /// <summary>
    /// Literal for code: HighlySuggestiveOfMalignancyTakeAppropriateAction
    /// </summary>
    public const string LiteralHighlySuggestiveOfMalignancyTakeAppropriateAction = "111149";

    /// <summary>
    /// Literal for code: PresentationRequiredRenderingDeviceIsExpectedToPresent
    /// </summary>
    public const string LiteralPresentationRequiredRenderingDeviceIsExpectedToPresent = "111150";

    /// <summary>
    /// Literal for code: PresentationOptionalRenderingDeviceMayPresent
    /// </summary>
    public const string LiteralPresentationOptionalRenderingDeviceMayPresent = "111151";

    /// <summary>
    /// Literal for code: NotForPresentationRenderingDeviceExpectedNotToPresent
    /// </summary>
    public const string LiteralNotForPresentationRenderingDeviceExpectedNotToPresent = "111152";

    /// <summary>
    /// Literal for code: TargetContentItemsAreRelatedTemporally
    /// </summary>
    public const string LiteralTargetContentItemsAreRelatedTemporally = "111153";

    /// <summary>
    /// Literal for code: TargetContentItemsAreRelatedSpatially
    /// </summary>
    public const string LiteralTargetContentItemsAreRelatedSpatially = "111154";

    /// <summary>
    /// Literal for code: TargetContentItemsAreRelatedContraLaterally
    /// </summary>
    public const string LiteralTargetContentItemsAreRelatedContraLaterally = "111155";

    /// <summary>
    /// Literal for code: FeatureDetectedOnTheOnlyImage
    /// </summary>
    public const string LiteralFeatureDetectedOnTheOnlyImage = "111156";

    /// <summary>
    /// Literal for code: FeatureDetectedOnOnlyOneOfTheImages
    /// </summary>
    public const string LiteralFeatureDetectedOnOnlyOneOfTheImages = "111157";

    /// <summary>
    /// Literal for code: FeatureDetectedOnMultipleImages
    /// </summary>
    public const string LiteralFeatureDetectedOnMultipleImages = "111158";

    /// <summary>
    /// Literal for code: FeatureDetectedOnImagesFromMultipleModalities
    /// </summary>
    public const string LiteralFeatureDetectedOnImagesFromMultipleModalities = "111159";

    /// <summary>
    /// Literal for code: OtherMarker
    /// </summary>
    public const string LiteralOtherMarker = "111175";

    /// <summary>
    /// Literal for code: Unspecified
    /// </summary>
    public const string LiteralUnspecified = "111176";

    /// <summary>
    /// Literal for code: ViewAndLateralityMarkerIsMissing
    /// </summary>
    public const string LiteralViewAndLateralityMarkerIsMissing = "111177";

    /// <summary>
    /// Literal for code: ViewAndLateralityMarkerDoesNotHaveBothViewAndLaterality
    /// </summary>
    public const string LiteralViewAndLateralityMarkerDoesNotHaveBothViewAndLaterality = "111178";

    /// <summary>
    /// Literal for code: ViewAndLateralityMarkerDoesNotHaveApprovedCodes
    /// </summary>
    public const string LiteralViewAndLateralityMarkerDoesNotHaveApprovedCodes = "111179";

    /// <summary>
    /// Literal for code: ViewAndLateralityMarkerIsNotNearTheAxilla
    /// </summary>
    public const string LiteralViewAndLateralityMarkerIsNotNearTheAxilla = "111180";

    /// <summary>
    /// Literal for code: ViewAndLateralityMarkerOverlapsBreastTissue
    /// </summary>
    public const string LiteralViewAndLateralityMarkerOverlapsBreastTissue = "111181";

    /// <summary>
    /// Literal for code: ViewAndLateralityMarkerIsPartiallyObscured
    /// </summary>
    public const string LiteralViewAndLateralityMarkerIsPartiallyObscured = "111182";

    /// <summary>
    /// Literal for code: ViewAndLateralityMarkerIsIncorrect
    /// </summary>
    public const string LiteralViewAndLateralityMarkerIsIncorrect = "111183";

    /// <summary>
    /// Literal for code: ViewAndLateralityMarkerIsOffImage
    /// </summary>
    public const string LiteralViewAndLateralityMarkerIsOffImage = "111184";

    /// <summary>
    /// Literal for code: FlashIsNotNearEdgeOfFilm
    /// </summary>
    public const string LiteralFlashIsNotNearEdgeOfFilm = "111185";

    /// <summary>
    /// Literal for code: FlashIsIlligibleDoesNotFitOrIsLopsided
    /// </summary>
    public const string LiteralFlashIsIlligibleDoesNotFitOrIsLopsided = "111186";

    /// <summary>
    /// Literal for code: FlashDoesnQuoteTIncludePatientNameAndAdditionalPatientId
    /// </summary>
    public const string LiteralFlashDoesnQuoteTIncludePatientNameAndAdditionalPatientId = "111187";

    /// <summary>
    /// Literal for code: FlashDoesnQuoteTIncludeDateOfExamination
    /// </summary>
    public const string LiteralFlashDoesnQuoteTIncludeDateOfExamination = "111188";

    /// <summary>
    /// Literal for code: FlashDoesnQuoteTIncludeFacilityNameAndLocation
    /// </summary>
    public const string LiteralFlashDoesnQuoteTIncludeFacilityNameAndLocation = "111189";

    /// <summary>
    /// Literal for code: FlashDoesnQuoteTIncludeTechnologistIdentification
    /// </summary>
    public const string LiteralFlashDoesnQuoteTIncludeTechnologistIdentification = "111190";

    /// <summary>
    /// Literal for code: FlashDoesnQuoteTIncludeCassetteScreenDetectorIdentification
    /// </summary>
    public const string LiteralFlashDoesnQuoteTIncludeCassetteScreenDetectorIdentification = "111191";

    /// <summary>
    /// Literal for code: FlashDoesnQuoteTIncludeMammographyUnitIdentification
    /// </summary>
    public const string LiteralFlashDoesnQuoteTIncludeMammographyUnitIdentification = "111192";

    /// <summary>
    /// Literal for code: DateStickerIsMissing
    /// </summary>
    public const string LiteralDateStickerIsMissing = "111193";

    /// <summary>
    /// Literal for code: TechnicalFactorsMissing
    /// </summary>
    public const string LiteralTechnicalFactorsMissing = "111194";

    /// <summary>
    /// Literal for code: CollimationTooCloseToBreast
    /// </summary>
    public const string LiteralCollimationTooCloseToBreast = "111195";

    /// <summary>
    /// Literal for code: InadequateCompression
    /// </summary>
    public const string LiteralInadequateCompression = "111196";

    /// <summary>
    /// Literal for code: MLOInsufficientPectoralMuscle
    /// </summary>
    public const string LiteralMLOInsufficientPectoralMuscle = "111197";

    /// <summary>
    /// Literal for code: MLONoFatIsVisualizedPosteriorToFibroglandularTissues
    /// </summary>
    public const string LiteralMLONoFatIsVisualizedPosteriorToFibroglandularTissues = "111198";

    /// <summary>
    /// Literal for code: MLOPoorSeparationOfDeepAndSuperficialBreastTissues
    /// </summary>
    public const string LiteralMLOPoorSeparationOfDeepAndSuperficialBreastTissues = "111199";

    /// <summary>
    /// Literal for code: MLOEvidenceOfMotionBlur
    /// </summary>
    public const string LiteralMLOEvidenceOfMotionBlur = "111200";

    /// <summary>
    /// Literal for code: MLOInframammaryFoldIsNotOpen
    /// </summary>
    public const string LiteralMLOInframammaryFoldIsNotOpen = "111201";

    /// <summary>
    /// Literal for code: CCNotAllMedialTissueVisualized
    /// </summary>
    public const string LiteralCCNotAllMedialTissueVisualized = "111202";

    /// <summary>
    /// Literal for code: CCNippleNotCenteredOnImage
    /// </summary>
    public const string LiteralCCNippleNotCenteredOnImage = "111203";

    /// <summary>
    /// Literal for code: CCPosteriorNippleLineDoesNotMeasureWithin1CmOfMLO
    /// </summary>
    public const string LiteralCCPosteriorNippleLineDoesNotMeasureWithin1CmOfMLO = "111204";

    /// <summary>
    /// Literal for code: NippleNotInProfile
    /// </summary>
    public const string LiteralNippleNotInProfile = "111205";

    /// <summary>
    /// Literal for code: InsufficientImplantDisplacementIncorrect
    /// </summary>
    public const string LiteralInsufficientImplantDisplacementIncorrect = "111206";

    /// <summary>
    /// Literal for code: ImageArtifactS
    /// </summary>
    public const string LiteralImageArtifactS = "111207";

    /// <summary>
    /// Literal for code: GridArtifactS
    /// </summary>
    public const string LiteralGridArtifactS = "111208";

    /// <summary>
    /// Literal for code: Positioning
    /// </summary>
    public const string LiteralPositioning = "111209";

    /// <summary>
    /// Literal for code: MotionBlur
    /// </summary>
    public const string LiteralMotionBlur = "111210";

    /// <summary>
    /// Literal for code: UnderExposed
    /// </summary>
    public const string LiteralUnderExposed = "111211";

    /// <summary>
    /// Literal for code: OverExposed
    /// </summary>
    public const string LiteralOverExposed = "111212";

    /// <summary>
    /// Literal for code: NoImage
    /// </summary>
    public const string LiteralNoImage = "111213";

    /// <summary>
    /// Literal for code: DetectorArtifactS
    /// </summary>
    public const string LiteralDetectorArtifactS = "111214";

    /// <summary>
    /// Literal for code: ArtifactSOtherThanGridOrDetectorArtifact
    /// </summary>
    public const string LiteralArtifactSOtherThanGridOrDetectorArtifact = "111215";

    /// <summary>
    /// Literal for code: MechanicalFailure
    /// </summary>
    public const string LiteralMechanicalFailure = "111216";

    /// <summary>
    /// Literal for code: ElectricalFailure
    /// </summary>
    public const string LiteralElectricalFailure = "111217";

    /// <summary>
    /// Literal for code: SoftwareFailure
    /// </summary>
    public const string LiteralSoftwareFailure = "111218";

    /// <summary>
    /// Literal for code: InappropriateImageProcessing
    /// </summary>
    public const string LiteralInappropriateImageProcessing = "111219";

    /// <summary>
    /// Literal for code: OtherFailure
    /// </summary>
    public const string LiteralOtherFailure = "111220";

    /// <summary>
    /// Literal for code: UnknownFailure
    /// </summary>
    public const string LiteralUnknownFailure = "111221";

    /// <summary>
    /// Literal for code: Succeeded
    /// </summary>
    public const string LiteralSucceeded = "111222";

    /// <summary>
    /// Literal for code: PartiallySucceeded
    /// </summary>
    public const string LiteralPartiallySucceeded = "111223";

    /// <summary>
    /// Literal for code: Failed
    /// </summary>
    public const string LiteralFailed = "111224";

    /// <summary>
    /// Literal for code: NotAttempted
    /// </summary>
    public const string LiteralNotAttempted = "111225";

    /// <summary>
    /// Literal for code: IndividualImpressionRecommendationAnalysis
    /// </summary>
    public const string LiteralIndividualImpressionRecommendationAnalysis = "111233";

    /// <summary>
    /// Literal for code: OverallImpressionRecommendationAnalysis
    /// </summary>
    public const string LiteralOverallImpressionRecommendationAnalysis = "111234";

    /// <summary>
    /// Literal for code: UnusableQualityRendersImageUnusable
    /// </summary>
    public const string LiteralUnusableQualityRendersImageUnusable = "111235";

    /// <summary>
    /// Literal for code: UsableDoesNotMeetTheQualityControlStandard
    /// </summary>
    public const string LiteralUsableDoesNotMeetTheQualityControlStandard = "111236";

    /// <summary>
    /// Literal for code: UsableMeetsTheQualityControlStandard
    /// </summary>
    public const string LiteralUsableMeetsTheQualityControlStandard = "111237";

    /// <summary>
    /// Literal for code: MammographyQualityControlManual1999ACR
    /// </summary>
    public const string LiteralMammographyQualityControlManual1999ACR = "111238";

    /// <summary>
    /// Literal for code: Title21CFRSection900SubpartB
    /// </summary>
    public const string LiteralTitle21CFRSection900SubpartB = "111239";

    /// <summary>
    /// Literal for code: InstitutionallyDefinedQualityControlStandard
    /// </summary>
    public const string LiteralInstitutionallyDefinedQualityControlStandard = "111240";

    /// <summary>
    /// Literal for code: AllAlgorithmsSucceededWithoutFindings
    /// </summary>
    public const string LiteralAllAlgorithmsSucceededWithoutFindings = "111241";

    /// <summary>
    /// Literal for code: AllAlgorithmsSucceededWithFindings
    /// </summary>
    public const string LiteralAllAlgorithmsSucceededWithFindings = "111242";

    /// <summary>
    /// Literal for code: NotAllAlgorithmsSucceededWithoutFindings
    /// </summary>
    public const string LiteralNotAllAlgorithmsSucceededWithoutFindings = "111243";

    /// <summary>
    /// Literal for code: NotAllAlgorithmsSucceededWithFindings
    /// </summary>
    public const string LiteralNotAllAlgorithmsSucceededWithFindings = "111244";

    /// <summary>
    /// Literal for code: NoAlgorithmsSucceededWithoutFindings
    /// </summary>
    public const string LiteralNoAlgorithmsSucceededWithoutFindings = "111245";

    /// <summary>
    /// Literal for code: NormalAxillaryNode
    /// </summary>
    public const string LiteralNormalAxillaryNode = "111251";

    /// <summary>
    /// Literal for code: AxillaryNodeWithCalcifications
    /// </summary>
    public const string LiteralAxillaryNodeWithCalcifications = "111252";

    /// <summary>
    /// Literal for code: AxillaryNodeHyperplasia
    /// </summary>
    public const string LiteralAxillaryNodeHyperplasia = "111253";

    /// <summary>
    /// Literal for code: BenignCystWithBlood
    /// </summary>
    public const string LiteralBenignCystWithBlood = "111255";

    /// <summary>
    /// Literal for code: BenignCalcifications
    /// </summary>
    public const string LiteralBenignCalcifications = "111256";

    /// <summary>
    /// Literal for code: DuctalAdenoma
    /// </summary>
    public const string LiteralDuctalAdenoma = "111258";

    /// <summary>
    /// Literal for code: DiabeticFibrousMastopathy
    /// </summary>
    public const string LiteralDiabeticFibrousMastopathy = "111259";

    /// <summary>
    /// Literal for code: FibroadenomatoidHyperplasia
    /// </summary>
    public const string LiteralFibroadenomatoidHyperplasia = "111263";

    /// <summary>
    /// Literal for code: Fibroadenolipoma
    /// </summary>
    public const string LiteralFibroadenolipoma = "111264";

    /// <summary>
    /// Literal for code: JuvenilePapillomatosis
    /// </summary>
    public const string LiteralJuvenilePapillomatosis = "111277";

    /// <summary>
    /// Literal for code: LactationalChange
    /// </summary>
    public const string LiteralLactationalChange = "111279";

    /// <summary>
    /// Literal for code: LargeDuctPapilloma
    /// </summary>
    public const string LiteralLargeDuctPapilloma = "111281";

    /// <summary>
    /// Literal for code: MicroglandularAdenosis
    /// </summary>
    public const string LiteralMicroglandularAdenosis = "111284";

    /// <summary>
    /// Literal for code: MultipleIntraductalPapillomas
    /// </summary>
    public const string LiteralMultipleIntraductalPapillomas = "111285";

    /// <summary>
    /// Literal for code: NoAbnormality
    /// </summary>
    public const string LiteralNoAbnormality = "111286";

    /// <summary>
    /// Literal for code: NormalBreastTissue
    /// </summary>
    public const string LiteralNormalBreastTissue = "111287";

    /// <summary>
    /// Literal for code: OilCystFatNecrosisCyst
    /// </summary>
    public const string LiteralOilCystFatNecrosisCyst = "111290";

    /// <summary>
    /// Literal for code: PostReductionMammoplasty
    /// </summary>
    public const string LiteralPostReductionMammoplasty = "111291";

    /// <summary>
    /// Literal for code: PseudoangiomatousStromalHyperplasia
    /// </summary>
    public const string LiteralPseudoangiomatousStromalHyperplasia = "111292";

    /// <summary>
    /// Literal for code: SiliconeGranuloma
    /// </summary>
    public const string LiteralSiliconeGranuloma = "111296";

    /// <summary>
    /// Literal for code: NippleCharacteristic
    /// </summary>
    public const string LiteralNippleCharacteristic = "111297";

    /// <summary>
    /// Literal for code: VirginalHyperplasia
    /// </summary>
    public const string LiteralVirginalHyperplasia = "111298";

    /// <summary>
    /// Literal for code: PeripheralDuctPapillomas
    /// </summary>
    public const string LiteralPeripheralDuctPapillomas = "111299";

    /// <summary>
    /// Literal for code: AxillaryNodeWithLymphoma
    /// </summary>
    public const string LiteralAxillaryNodeWithLymphoma = "111300";

    /// <summary>
    /// Literal for code: AxillaryNodalMetastases
    /// </summary>
    public const string LiteralAxillaryNodalMetastases = "111301";

    /// <summary>
    /// Literal for code: BloodVesselVascularInvasion
    /// </summary>
    public const string LiteralBloodVesselVascularInvasion = "111303";

    /// <summary>
    /// Literal for code: CarcinomaInChildren
    /// </summary>
    public const string LiteralCarcinomaInChildren = "111304";

    /// <summary>
    /// Literal for code: CarcinomaInEctopicBreast
    /// </summary>
    public const string LiteralCarcinomaInEctopicBreast = "111305";

    /// <summary>
    /// Literal for code: CarcinomaWithEndocrineDifferentiation
    /// </summary>
    public const string LiteralCarcinomaWithEndocrineDifferentiation = "111306";

    /// <summary>
    /// Literal for code: BasalCellCarcinomaOfNipple
    /// </summary>
    public const string LiteralBasalCellCarcinomaOfNipple = "111307";

    /// <summary>
    /// Literal for code: CartilaginousAndOsseousChange
    /// </summary>
    public const string LiteralCartilaginousAndOsseousChange = "111309";

    /// <summary>
    /// Literal for code: CarcinomaInPregnancyAndLactation
    /// </summary>
    public const string LiteralCarcinomaInPregnancyAndLactation = "111310";

    /// <summary>
    /// Literal for code: IntraductalComedocarcinomaWithNecrosis
    /// </summary>
    public const string LiteralIntraductalComedocarcinomaWithNecrosis = "111312";

    /// <summary>
    /// Literal for code: IntraductalCarcinomaLowGrade
    /// </summary>
    public const string LiteralIntraductalCarcinomaLowGrade = "111313";

    /// <summary>
    /// Literal for code: IntracysticPapillaryCarcinoma
    /// </summary>
    public const string LiteralIntracysticPapillaryCarcinoma = "111315";

    /// <summary>
    /// Literal for code: InvasiveAndInSituCarcinoma
    /// </summary>
    public const string LiteralInvasiveAndInSituCarcinoma = "111316";

    /// <summary>
    /// Literal for code: LeukemicInfiltration
    /// </summary>
    public const string LiteralLeukemicInfiltration = "111318";

    /// <summary>
    /// Literal for code: LympathicVesselInvasion
    /// </summary>
    public const string LiteralLympathicVesselInvasion = "111320";

    /// <summary>
    /// Literal for code: OccultCarcinomaPresentingWithAxillaryLymphNodeMetastases
    /// </summary>
    public const string LiteralOccultCarcinomaPresentingWithAxillaryLymphNodeMetastases = "111322";

    /// <summary>
    /// Literal for code: MetastaticCancerToTheBreast
    /// </summary>
    public const string LiteralMetastaticCancerToTheBreast = "111323";

    /// <summary>
    /// Literal for code: MetastaticCancerToTheBreastFromTheColon
    /// </summary>
    public const string LiteralMetastaticCancerToTheBreastFromTheColon = "111324";

    /// <summary>
    /// Literal for code: MetastaticCancerToTheBreastFromTheLung
    /// </summary>
    public const string LiteralMetastaticCancerToTheBreastFromTheLung = "111325";

    /// <summary>
    /// Literal for code: MetastaticMelanomaToTheBreast
    /// </summary>
    public const string LiteralMetastaticMelanomaToTheBreast = "111326";

    /// <summary>
    /// Literal for code: MetastaticCancerToTheBreastFromTheOvary
    /// </summary>
    public const string LiteralMetastaticCancerToTheBreastFromTheOvary = "111327";

    /// <summary>
    /// Literal for code: MetastaticSarcomaToTheBreast
    /// </summary>
    public const string LiteralMetastaticSarcomaToTheBreast = "111328";

    /// <summary>
    /// Literal for code: MultifocalIntraductalCarcinoma
    /// </summary>
    public const string LiteralMultifocalIntraductalCarcinoma = "111329";

    /// <summary>
    /// Literal for code: MetastaticDiseaseToAxillaryNode
    /// </summary>
    public const string LiteralMetastaticDiseaseToAxillaryNode = "111330";

    /// <summary>
    /// Literal for code: MultifocalInvasiveDuctalCarcinoma
    /// </summary>
    public const string LiteralMultifocalInvasiveDuctalCarcinoma = "111332";

    /// <summary>
    /// Literal for code: MetastasisToAnIntramammaryLymphNode
    /// </summary>
    public const string LiteralMetastasisToAnIntramammaryLymphNode = "111333";

    /// <summary>
    /// Literal for code: MalignantMelanomaOfNipple
    /// </summary>
    public const string LiteralMalignantMelanomaOfNipple = "111334";

    /// <summary>
    /// Literal for code: RecurrentMalignancy
    /// </summary>
    public const string LiteralRecurrentMalignancy = "111338";

    /// <summary>
    /// Literal for code: SquamousCellCarcinomaOfTheNipple
    /// </summary>
    public const string LiteralSquamousCellCarcinomaOfTheNipple = "111340";

    /// <summary>
    /// Literal for code: IntraductalCarcinomaHighGrade
    /// </summary>
    public const string LiteralIntraductalCarcinomaHighGrade = "111341";

    /// <summary>
    /// Literal for code: AngularMargins
    /// </summary>
    public const string LiteralAngularMargins = "111343";

    /// <summary>
    /// Literal for code: FinePleomorphicCalcification
    /// </summary>
    public const string LiteralFinePleomorphicCalcification = "111344";

    /// <summary>
    /// Literal for code: Macrocalcifications
    /// </summary>
    public const string LiteralMacrocalcifications = "111345";

    /// <summary>
    /// Literal for code: CalcificationsWithinAMass
    /// </summary>
    public const string LiteralCalcificationsWithinAMass = "111346";

    /// <summary>
    /// Literal for code: CalcificationsOutsideOfAMass
    /// </summary>
    public const string LiteralCalcificationsOutsideOfAMass = "111347";

    /// <summary>
    /// Literal for code: BreastBackgroundEchotexture
    /// </summary>
    public const string LiteralBreastBackgroundEchotexture = "111350";

    /// <summary>
    /// Literal for code: HomogeneousFatEchotexture
    /// </summary>
    public const string LiteralHomogeneousFatEchotexture = "111351";

    /// <summary>
    /// Literal for code: HomogeneousFibroglandularEchotexture
    /// </summary>
    public const string LiteralHomogeneousFibroglandularEchotexture = "111352";

    /// <summary>
    /// Literal for code: HeterogeneousEchotexture
    /// </summary>
    public const string LiteralHeterogeneousEchotexture = "111353";

    /// <summary>
    /// Literal for code: Orientation
    /// </summary>
    public const string LiteralOrientation = "111354";

    /// <summary>
    /// Literal for code: Parallel
    /// </summary>
    public const string LiteralParallel = "111355";

    /// <summary>
    /// Literal for code: NotParallel
    /// </summary>
    public const string LiteralNotParallel = "111356";

    /// <summary>
    /// Literal for code: LesionBoundary
    /// </summary>
    public const string LiteralLesionBoundary = "111357";

    /// <summary>
    /// Literal for code: AbruptInterface
    /// </summary>
    public const string LiteralAbruptInterface = "111358";

    /// <summary>
    /// Literal for code: EchogenicHalo
    /// </summary>
    public const string LiteralEchogenicHalo = "111359";

    /// <summary>
    /// Literal for code: EchoPattern
    /// </summary>
    public const string LiteralEchoPattern = "111360";

    /// <summary>
    /// Literal for code: Anechoic
    /// </summary>
    public const string LiteralAnechoic = "111361";

    /// <summary>
    /// Literal for code: Hyperechoic
    /// </summary>
    public const string LiteralHyperechoic = "111362";

    /// <summary>
    /// Literal for code: Complex
    /// </summary>
    public const string LiteralComplex = "111363";

    /// <summary>
    /// Literal for code: Hypoechoic
    /// </summary>
    public const string LiteralHypoechoic = "111364";

    /// <summary>
    /// Literal for code: Isoechoic
    /// </summary>
    public const string LiteralIsoechoic = "111365";

    /// <summary>
    /// Literal for code: PosteriorAcousticFeatures
    /// </summary>
    public const string LiteralPosteriorAcousticFeatures = "111366";

    /// <summary>
    /// Literal for code: NoPosteriorAcousticFeatures
    /// </summary>
    public const string LiteralNoPosteriorAcousticFeatures = "111367";

    /// <summary>
    /// Literal for code: PosteriorEnhancement
    /// </summary>
    public const string LiteralPosteriorEnhancement = "111368";

    /// <summary>
    /// Literal for code: PosteriorShadowing
    /// </summary>
    public const string LiteralPosteriorShadowing = "111369";

    /// <summary>
    /// Literal for code: CombinedPosteriorEnhancementAndShadowing
    /// </summary>
    public const string LiteralCombinedPosteriorEnhancementAndShadowing = "111370";

    /// <summary>
    /// Literal for code: IdentifiableEffectOnSurroundingTissues
    /// </summary>
    public const string LiteralIdentifiableEffectOnSurroundingTissues = "111371";

    /// <summary>
    /// Literal for code: Vascularity
    /// </summary>
    public const string LiteralVascularity = "111372";

    /// <summary>
    /// Literal for code: VascularityNotPresent
    /// </summary>
    public const string LiteralVascularityNotPresent = "111373";

    /// <summary>
    /// Literal for code: VascularityNotAssessed
    /// </summary>
    public const string LiteralVascularityNotAssessed = "111374";

    /// <summary>
    /// Literal for code: VascularityPresentInLesion
    /// </summary>
    public const string LiteralVascularityPresentInLesion = "111375";

    /// <summary>
    /// Literal for code: VascularityPresentImmediatelyAdjacentToLesion
    /// </summary>
    public const string LiteralVascularityPresentImmediatelyAdjacentToLesion = "111376";

    /// <summary>
    /// Literal for code: DiffuselyIncreasedVascularityInSurroundingTissue
    /// </summary>
    public const string LiteralDiffuselyIncreasedVascularityInSurroundingTissue = "111377";

    /// <summary>
    /// Literal for code: CorrelationToOtherFindings
    /// </summary>
    public const string LiteralCorrelationToOtherFindings = "111380";

    /// <summary>
    /// Literal for code: CorrelatesToPhysicalExamFindings
    /// </summary>
    public const string LiteralCorrelatesToPhysicalExamFindings = "111381";

    /// <summary>
    /// Literal for code: CorrelatesToMammographyFindings
    /// </summary>
    public const string LiteralCorrelatesToMammographyFindings = "111382";

    /// <summary>
    /// Literal for code: CorrelatesToMRIFindings
    /// </summary>
    public const string LiteralCorrelatesToMRIFindings = "111383";

    /// <summary>
    /// Literal for code: CorrelatesToUltrasoundFindings
    /// </summary>
    public const string LiteralCorrelatesToUltrasoundFindings = "111384";

    /// <summary>
    /// Literal for code: CorrelatesToOtherImagingFindings
    /// </summary>
    public const string LiteralCorrelatesToOtherImagingFindings = "111385";

    /// <summary>
    /// Literal for code: NoCorrelationToOtherImagingFindings
    /// </summary>
    public const string LiteralNoCorrelationToOtherImagingFindings = "111386";

    /// <summary>
    /// Literal for code: NoCorrelationToClinicalFindings
    /// </summary>
    public const string LiteralNoCorrelationToClinicalFindings = "111387";

    /// <summary>
    /// Literal for code: MalignancyType
    /// </summary>
    public const string LiteralMalignancyType = "111388";

    /// <summary>
    /// Literal for code: InvasiveBreastCarcinoma
    /// </summary>
    public const string LiteralInvasiveBreastCarcinoma = "111389";

    /// <summary>
    /// Literal for code: OtherMalignancyType
    /// </summary>
    public const string LiteralOtherMalignancyType = "111390";

    /// <summary>
    /// Literal for code: MenstrualCyclePhase
    /// </summary>
    public const string LiteralMenstrualCyclePhase = "111391";

    /// <summary>
    /// Literal for code: VAL1stWeek
    /// </summary>
    public const string LiteralVAL1stWeek = "111392";

    /// <summary>
    /// Literal for code: VAL2ndWeek
    /// </summary>
    public const string LiteralVAL2ndWeek = "111393";

    /// <summary>
    /// Literal for code: VAL3rdWeek
    /// </summary>
    public const string LiteralVAL3rdWeek = "111394";

    /// <summary>
    /// Literal for code: EstimatedTimeframe
    /// </summary>
    public const string LiteralEstimatedTimeframe = "111395";

    /// <summary>
    /// Literal for code: LessThan3MonthsAgo
    /// </summary>
    public const string LiteralLessThan3MonthsAgo = "111396";

    /// <summary>
    /// Literal for code: VAL4MonthsTo1YearAgo
    /// </summary>
    public const string LiteralVAL4MonthsTo1YearAgo = "111397";

    /// <summary>
    /// Literal for code: GreaterThan1YearAgo
    /// </summary>
    public const string LiteralGreaterThan1YearAgo = "111398";

    /// <summary>
    /// Literal for code: TimeframeUncertain
    /// </summary>
    public const string LiteralTimeframeUncertain = "111399";

    /// <summary>
    /// Literal for code: BreastImagingReport
    /// </summary>
    public const string LiteralBreastImagingReport = "111400";

    /// <summary>
    /// Literal for code: ReasonForProcedure
    /// </summary>
    public const string LiteralReasonForProcedure = "111401";

    /// <summary>
    /// Literal for code: ClinicalFinding
    /// </summary>
    public const string LiteralClinicalFinding = "111402";

    /// <summary>
    /// Literal for code: BaselineScreeningMammogram
    /// </summary>
    public const string LiteralBaselineScreeningMammogram = "111403";

    /// <summary>
    /// Literal for code: FirstMammogramEver
    /// </summary>
    public const string LiteralFirstMammogramEver = "111404";

    /// <summary>
    /// Literal for code: ImplantType
    /// </summary>
    public const string LiteralImplantType = "111405";

    /// <summary>
    /// Literal for code: NumberOfSimilarFindings
    /// </summary>
    public const string LiteralNumberOfSimilarFindings = "111406";

    /// <summary>
    /// Literal for code: ImplantFinding
    /// </summary>
    public const string LiteralImplantFinding = "111407";

    /// <summary>
    /// Literal for code: FilmScreenMammography
    /// </summary>
    public const string LiteralFilmScreenMammography = "111408";

    /// <summary>
    /// Literal for code: DigitalMammography
    /// </summary>
    public const string LiteralDigitalMammography = "111409";

    /// <summary>
    /// Literal for code: SurgicalConsult
    /// </summary>
    public const string LiteralSurgicalConsult = "111410";

    /// <summary>
    /// Literal for code: MammographyCAD
    /// </summary>
    public const string LiteralMammographyCAD = "111411";

    /// <summary>
    /// Literal for code: NarrativeSummary
    /// </summary>
    public const string LiteralNarrativeSummary = "111412";

    /// <summary>
    /// Literal for code: OverallAssessment
    /// </summary>
    public const string LiteralOverallAssessment = "111413";

    /// <summary>
    /// Literal for code: SupplementaryData
    /// </summary>
    public const string LiteralSupplementaryData = "111414";

    /// <summary>
    /// Literal for code: AdditionalEvaluationRequestedFromPriorStudy
    /// </summary>
    public const string LiteralAdditionalEvaluationRequestedFromPriorStudy = "111415";

    /// <summary>
    /// Literal for code: FollowUpAtShortIntervalFromPriorStudy
    /// </summary>
    public const string LiteralFollowUpAtShortIntervalFromPriorStudy = "111416";

    /// <summary>
    /// Literal for code: HistoryOfBreastAugmentationAsymptomatic
    /// </summary>
    public const string LiteralHistoryOfBreastAugmentationAsymptomatic = "111417";

    /// <summary>
    /// Literal for code: ReviewOfAnOutsideStudy
    /// </summary>
    public const string LiteralReviewOfAnOutsideStudy = "111418";

    /// <summary>
    /// Literal for code: AdditionalEvaluationRequestedFromAbnormalScreeningExam
    /// </summary>
    public const string LiteralAdditionalEvaluationRequestedFromAbnormalScreeningExam = "111419";

    /// <summary>
    /// Literal for code: HistoryOfBenignBreastBiopsy
    /// </summary>
    public const string LiteralHistoryOfBenignBreastBiopsy = "111420";

    /// <summary>
    /// Literal for code: PersonalHistoryOfBreastCancerWithBreastConservationTherapy
    /// </summary>
    public const string LiteralPersonalHistoryOfBreastCancerWithBreastConservationTherapy = "111421";

    /// <summary>
    /// Literal for code: PhysicalExaminationResults
    /// </summary>
    public const string LiteralPhysicalExaminationResults = "111423";

    /// <summary>
    /// Literal for code: ComparisonToPreviousFindings
    /// </summary>
    public const string LiteralComparisonToPreviousFindings = "111424";

    /// <summary>
    /// Literal for code: IntraluminalFillingDefect
    /// </summary>
    public const string LiteralIntraluminalFillingDefect = "111425";

    /// <summary>
    /// Literal for code: MultipleFillingDefect
    /// </summary>
    public const string LiteralMultipleFillingDefect = "111426";

    /// <summary>
    /// Literal for code: AbruptDuctTermination
    /// </summary>
    public const string LiteralAbruptDuctTermination = "111427";

    /// <summary>
    /// Literal for code: Extravasation
    /// </summary>
    public const string LiteralExtravasation = "111428";

    /// <summary>
    /// Literal for code: DuctNarrowing
    /// </summary>
    public const string LiteralDuctNarrowing = "111429";

    /// <summary>
    /// Literal for code: CystFill
    /// </summary>
    public const string LiteralCystFill = "111430";

    /// <summary>
    /// Literal for code: InstrumentApproach
    /// </summary>
    public const string LiteralInstrumentApproach = "111431";

    /// <summary>
    /// Literal for code: InferolateralToSuperomedial
    /// </summary>
    public const string LiteralInferolateralToSuperomedial = "111432";

    /// <summary>
    /// Literal for code: InferomedialToSuperolateral
    /// </summary>
    public const string LiteralInferomedialToSuperolateral = "111433";

    /// <summary>
    /// Literal for code: SuperolateralToInferomedial
    /// </summary>
    public const string LiteralSuperolateralToInferomedial = "111434";

    /// <summary>
    /// Literal for code: SuperomedialToInferolateral
    /// </summary>
    public const string LiteralSuperomedialToInferolateral = "111435";

    /// <summary>
    /// Literal for code: NumberOfPasses
    /// </summary>
    public const string LiteralNumberOfPasses = "111436";

    /// <summary>
    /// Literal for code: NumberOfSpecimens
    /// </summary>
    public const string LiteralNumberOfSpecimens = "111437";

    /// <summary>
    /// Literal for code: NeedleInTarget
    /// </summary>
    public const string LiteralNeedleInTarget = "111438";

    /// <summary>
    /// Literal for code: NumberOfNeedlesAroundTarget
    /// </summary>
    public const string LiteralNumberOfNeedlesAroundTarget = "111439";

    /// <summary>
    /// Literal for code: IncisionMade
    /// </summary>
    public const string LiteralIncisionMade = "111440";

    /// <summary>
    /// Literal for code: ConfirmationOfTarget
    /// </summary>
    public const string LiteralConfirmationOfTarget = "111442";

    /// <summary>
    /// Literal for code: TargetCompletelyContainedInTheSpecimen
    /// </summary>
    public const string LiteralTargetCompletelyContainedInTheSpecimen = "111443";

    /// <summary>
    /// Literal for code: TargetPartiallyObtainedInTheSpecimen
    /// </summary>
    public const string LiteralTargetPartiallyObtainedInTheSpecimen = "111444";

    /// <summary>
    /// Literal for code: TargetNotInTheSpecimen
    /// </summary>
    public const string LiteralTargetNotInTheSpecimen = "111445";

    /// <summary>
    /// Literal for code: CalcificationsSeenInTheCore
    /// </summary>
    public const string LiteralCalcificationsSeenInTheCore = "111446";

    /// <summary>
    /// Literal for code: LesionCompletelyRemoved
    /// </summary>
    public const string LiteralLesionCompletelyRemoved = "111447";

    /// <summary>
    /// Literal for code: LesionPartiallyRemoved
    /// </summary>
    public const string LiteralLesionPartiallyRemoved = "111448";

    /// <summary>
    /// Literal for code: FluidObtained
    /// </summary>
    public const string LiteralFluidObtained = "111449";

    /// <summary>
    /// Literal for code: LightBrownColor
    /// </summary>
    public const string LiteralLightBrownColor = "111450";

    /// <summary>
    /// Literal for code: DarkRedColor
    /// </summary>
    public const string LiteralDarkRedColor = "111451";

    /// <summary>
    /// Literal for code: DarkBrownColor
    /// </summary>
    public const string LiteralDarkBrownColor = "111452";

    /// <summary>
    /// Literal for code: BrightRedColor
    /// </summary>
    public const string LiteralBrightRedColor = "111453";

    /// <summary>
    /// Literal for code: BloodTingedColor
    /// </summary>
    public const string LiteralBloodTingedColor = "111454";

    /// <summary>
    /// Literal for code: OccultBloodTestResult
    /// </summary>
    public const string LiteralOccultBloodTestResult = "111455";

    /// <summary>
    /// Literal for code: ActionOnFluid
    /// </summary>
    public const string LiteralActionOnFluid = "111456";

    /// <summary>
    /// Literal for code: SentForAnalysis
    /// </summary>
    public const string LiteralSentForAnalysis = "111457";

    /// <summary>
    /// Literal for code: Discarded
    /// </summary>
    public const string LiteralDiscarded = "111458";

    /// <summary>
    /// Literal for code: MassWithCalcifications
    /// </summary>
    public const string LiteralMassWithCalcifications = "111459";

    /// <summary>
    /// Literal for code: ComplexCyst
    /// </summary>
    public const string LiteralComplexCyst = "111460";

    /// <summary>
    /// Literal for code: IntracysticLesion
    /// </summary>
    public const string LiteralIntracysticLesion = "111461";

    /// <summary>
    /// Literal for code: SolidMass
    /// </summary>
    public const string LiteralSolidMass = "111462";

    /// <summary>
    /// Literal for code: SupplementaryDataForIntervention
    /// </summary>
    public const string LiteralSupplementaryDataForIntervention = "111463";

    /// <summary>
    /// Literal for code: ProcedureModifier
    /// </summary>
    public const string LiteralProcedureModifier = "111464";

    /// <summary>
    /// Literal for code: NeedleGauge
    /// </summary>
    public const string LiteralNeedleGauge = "111465";

    /// <summary>
    /// Literal for code: SeverityOfComplication
    /// </summary>
    public const string LiteralSeverityOfComplication = "111466";

    /// <summary>
    /// Literal for code: NeedleLength
    /// </summary>
    public const string LiteralNeedleLength = "111467";

    /// <summary>
    /// Literal for code: PathologyResults
    /// </summary>
    public const string LiteralPathologyResults = "111468";

    /// <summary>
    /// Literal for code: SamplingDateTime
    /// </summary>
    public const string LiteralSamplingDateTime = "111469";

    /// <summary>
    /// Literal for code: Uninvolved
    /// </summary>
    public const string LiteralUninvolved = "111470";

    /// <summary>
    /// Literal for code: Involved
    /// </summary>
    public const string LiteralInvolved = "111471";

    /// <summary>
    /// Literal for code: NippleInvolved
    /// </summary>
    public const string LiteralNippleInvolved = "111472";

    /// <summary>
    /// Literal for code: NumberOfNodesRemoved
    /// </summary>
    public const string LiteralNumberOfNodesRemoved = "111473";

    /// <summary>
    /// Literal for code: NumberOfNodesPositive
    /// </summary>
    public const string LiteralNumberOfNodesPositive = "111474";

    /// <summary>
    /// Literal for code: EstrogenReceptor
    /// </summary>
    public const string LiteralEstrogenReceptor = "111475";

    /// <summary>
    /// Literal for code: ProgesteroneReceptor
    /// </summary>
    public const string LiteralProgesteroneReceptor = "111476";

    /// <summary>
    /// Literal for code: SPhase
    /// </summary>
    public const string LiteralSPhase = "111477";

    /// <summary>
    /// Literal for code: NonBloodyDischargeFromNipple
    /// </summary>
    public const string LiteralNonBloodyDischargeFromNipple = "111478";

    /// <summary>
    /// Literal for code: DifficultPhysicalClinicalExamination
    /// </summary>
    public const string LiteralDifficultPhysicalClinicalExamination = "111479";

    /// <summary>
    /// Literal for code: CancerElsewhere
    /// </summary>
    public const string LiteralCancerElsewhere = "111480";

    /// <summary>
    /// Literal for code: SalineImplant
    /// </summary>
    public const string LiteralSalineImplant = "111481";

    /// <summary>
    /// Literal for code: PolyurethaneImplant
    /// </summary>
    public const string LiteralPolyurethaneImplant = "111482";

    /// <summary>
    /// Literal for code: PercutaneousSiliconeInjection
    /// </summary>
    public const string LiteralPercutaneousSiliconeInjection = "111483";

    /// <summary>
    /// Literal for code: CombinationImplant
    /// </summary>
    public const string LiteralCombinationImplant = "111484";

    /// <summary>
    /// Literal for code: PrePectoralImplant
    /// </summary>
    public const string LiteralPrePectoralImplant = "111485";

    /// <summary>
    /// Literal for code: RetroPectoralImplant
    /// </summary>
    public const string LiteralRetroPectoralImplant = "111486";

    /// <summary>
    /// Literal for code: MammographicCrosshair
    /// </summary>
    public const string LiteralMammographicCrosshair = "111487";

    /// <summary>
    /// Literal for code: MammographicGrid
    /// </summary>
    public const string LiteralMammographicGrid = "111488";

    /// <summary>
    /// Literal for code: PalpationGuided
    /// </summary>
    public const string LiteralPalpationGuided = "111489";

    /// <summary>
    /// Literal for code: VacuumAssisted
    /// </summary>
    public const string LiteralVacuumAssisted = "111490";

    /// <summary>
    /// Literal for code: AbnormalDischarge
    /// </summary>
    public const string LiteralAbnormalDischarge = "111491";

    /// <summary>
    /// Literal for code: NoComplications
    /// </summary>
    public const string LiteralNoComplications = "111492";

    /// <summary>
    /// Literal for code: Stage0
    /// </summary>
    public const string LiteralStage0 = "111494";

    /// <summary>
    /// Literal for code: StageI
    /// </summary>
    public const string LiteralStageI = "111495";

    /// <summary>
    /// Literal for code: StageIIA
    /// </summary>
    public const string LiteralStageIIA = "111496";

    /// <summary>
    /// Literal for code: StageIIB
    /// </summary>
    public const string LiteralStageIIB = "111497";

    /// <summary>
    /// Literal for code: StageIIIA
    /// </summary>
    public const string LiteralStageIIIA = "111498";

    /// <summary>
    /// Literal for code: StageIIIB
    /// </summary>
    public const string LiteralStageIIIB = "111499";

    /// <summary>
    /// Literal for code: StageIIIC
    /// </summary>
    public const string LiteralStageIIIC = "111500";

    /// <summary>
    /// Literal for code: StageIV
    /// </summary>
    public const string LiteralStageIV = "111501";

    /// <summary>
    /// Literal for code: BloomRichardsonGrade
    /// </summary>
    public const string LiteralBloomRichardsonGrade = "111502";

    /// <summary>
    /// Literal for code: NormalImplants
    /// </summary>
    public const string LiteralNormalImplants = "111503";

    /// <summary>
    /// Literal for code: AsymmetricImplants
    /// </summary>
    public const string LiteralAsymmetricImplants = "111504";

    /// <summary>
    /// Literal for code: CalcifiedImplant
    /// </summary>
    public const string LiteralCalcifiedImplant = "111505";

    /// <summary>
    /// Literal for code: DistortedImplant
    /// </summary>
    public const string LiteralDistortedImplant = "111506";

    /// <summary>
    /// Literal for code: SiliconeLadenLymphNodes
    /// </summary>
    public const string LiteralSiliconeLadenLymphNodes = "111507";

    /// <summary>
    /// Literal for code: FreeSilicone
    /// </summary>
    public const string LiteralFreeSilicone = "111508";

    /// <summary>
    /// Literal for code: HerniatedImplant
    /// </summary>
    public const string LiteralHerniatedImplant = "111509";

    /// <summary>
    /// Literal for code: Explantation
    /// </summary>
    public const string LiteralExplantation = "111510";

    /// <summary>
    /// Literal for code: RelevantPatientInformationForBreastImaging
    /// </summary>
    public const string LiteralRelevantPatientInformationForBreastImaging = "111511";

    /// <summary>
    /// Literal for code: RelevantPreviousProcedures
    /// </summary>
    public const string LiteralRelevantPreviousProcedures = "111513";

    /// <summary>
    /// Literal for code: RelevantRiskFactors
    /// </summary>
    public const string LiteralRelevantRiskFactors = "111515";

    /// <summary>
    /// Literal for code: MedicationType
    /// </summary>
    public const string LiteralMedicationType = "111516";

    /// <summary>
    /// Literal for code: RelevantPatientInformation
    /// </summary>
    public const string LiteralRelevantPatientInformation = "111517";

    /// <summary>
    /// Literal for code: AgeWhenFirstMenstrualPeriodOccurred
    /// </summary>
    public const string LiteralAgeWhenFirstMenstrualPeriodOccurred = "111518";

    /// <summary>
    /// Literal for code: AgeAtFirstFullTermPregnancy
    /// </summary>
    public const string LiteralAgeAtFirstFullTermPregnancy = "111519";

    /// <summary>
    /// Literal for code: AgeAtMenopause
    /// </summary>
    public const string LiteralAgeAtMenopause = "111520";

    /// <summary>
    /// Literal for code: AgeWhenHysterectomyPerformed
    /// </summary>
    public const string LiteralAgeWhenHysterectomyPerformed = "111521";

    /// <summary>
    /// Literal for code: AgeWhenLeftOvaryRemoved
    /// </summary>
    public const string LiteralAgeWhenLeftOvaryRemoved = "111522";

    /// <summary>
    /// Literal for code: AgeWhenRightOvaryRemoved
    /// </summary>
    public const string LiteralAgeWhenRightOvaryRemoved = "111523";

    /// <summary>
    /// Literal for code: AgeStarted
    /// </summary>
    public const string LiteralAgeStarted = "111524";

    /// <summary>
    /// Literal for code: AgeEnded
    /// </summary>
    public const string LiteralAgeEnded = "111525";

    /// <summary>
    /// Literal for code: DateTimeStarted
    /// </summary>
    public const string LiteralDateTimeStarted = "111526";

    /// <summary>
    /// Literal for code: DateTimeEnded
    /// </summary>
    public const string LiteralDateTimeEnded = "111527";

    /// <summary>
    /// Literal for code: Ongoing
    /// </summary>
    public const string LiteralOngoing = "111528";

    /// <summary>
    /// Literal for code: BrandName
    /// </summary>
    public const string LiteralBrandName = "111529";

    /// <summary>
    /// Literal for code: RiskFactorModifier
    /// </summary>
    public const string LiteralRiskFactorModifier = "111530";

    /// <summary>
    /// Literal for code: PreviousProcedure
    /// </summary>
    public const string LiteralPreviousProcedure = "111531";

    /// <summary>
    /// Literal for code: PregnancyStatus
    /// </summary>
    public const string LiteralPregnancyStatus = "111532";

    /// <summary>
    /// Literal for code: IndicatedProblem
    /// </summary>
    public const string LiteralIndicatedProblem = "111533";

    /// <summary>
    /// Literal for code: RoleOfPersonReporting
    /// </summary>
    public const string LiteralRoleOfPersonReporting = "111534";

    /// <summary>
    /// Literal for code: DateTimeProblemObserved
    /// </summary>
    public const string LiteralDateTimeProblemObserved = "111535";

    /// <summary>
    /// Literal for code: DateTimeOfLastEvaluation
    /// </summary>
    public const string LiteralDateTimeOfLastEvaluation = "111536";

    /// <summary>
    /// Literal for code: FamilyMemberWithRiskFactor
    /// </summary>
    public const string LiteralFamilyMemberWithRiskFactor = "111537";

    /// <summary>
    /// Literal for code: AgeAtOccurrence
    /// </summary>
    public const string LiteralAgeAtOccurrence = "111538";

    /// <summary>
    /// Literal for code: MenopausalPhase
    /// </summary>
    public const string LiteralMenopausalPhase = "111539";

    /// <summary>
    /// Literal for code: SideOfFamily
    /// </summary>
    public const string LiteralSideOfFamily = "111540";

    /// <summary>
    /// Literal for code: Maternal
    /// </summary>
    public const string LiteralMaternal = "111541";

    /// <summary>
    /// Literal for code: UnspecifiedGynecologicalHormone
    /// </summary>
    public const string LiteralUnspecifiedGynecologicalHormone = "111542";

    /// <summary>
    /// Literal for code: BreastFeedingHistory
    /// </summary>
    public const string LiteralBreastFeedingHistory = "111543";

    /// <summary>
    /// Literal for code: AverageBreastFeedingPeriod
    /// </summary>
    public const string LiteralAverageBreastFeedingPeriod = "111544";

    /// <summary>
    /// Literal for code: SubstanceUseHistory
    /// </summary>
    public const string LiteralSubstanceUseHistory = "111545";

    /// <summary>
    /// Literal for code: UsedSubstanceType
    /// </summary>
    public const string LiteralUsedSubstanceType = "111546";

    /// <summary>
    /// Literal for code: EnvironmentalExposureHistory
    /// </summary>
    public const string LiteralEnvironmentalExposureHistory = "111547";

    /// <summary>
    /// Literal for code: EnvironmentalFactor
    /// </summary>
    public const string LiteralEnvironmentalFactor = "111548";

    /// <summary>
    /// Literal for code: PreviousReports
    /// </summary>
    public const string LiteralPreviousReports = "111549";

    /// <summary>
    /// Literal for code: PersonalBreastCancerHistory
    /// </summary>
    public const string LiteralPersonalBreastCancerHistory = "111550";

    /// <summary>
    /// Literal for code: HistoryOfEndometrialCancer
    /// </summary>
    public const string LiteralHistoryOfEndometrialCancer = "111551";

    /// <summary>
    /// Literal for code: HistoryOfOvarianCancer
    /// </summary>
    public const string LiteralHistoryOfOvarianCancer = "111552";

    /// <summary>
    /// Literal for code: HistoryOfHighRiskLesionOnPreviousBiopsy
    /// </summary>
    public const string LiteralHistoryOfHighRiskLesionOnPreviousBiopsy = "111553";

    /// <summary>
    /// Literal for code: PostMenopausalPatient
    /// </summary>
    public const string LiteralPostMenopausalPatient = "111554";

    /// <summary>
    /// Literal for code: LateChildBearingAfter30
    /// </summary>
    public const string LiteralLateChildBearingAfter30 = "111555";

    /// <summary>
    /// Literal for code: BRCA1BreastCancerGene
    /// </summary>
    public const string LiteralBRCA1BreastCancerGene = "111556";

    /// <summary>
    /// Literal for code: BRCA2BreastCancerGene
    /// </summary>
    public const string LiteralBRCA2BreastCancerGene = "111557";

    /// <summary>
    /// Literal for code: BRCA3BreastCancerGene
    /// </summary>
    public const string LiteralBRCA3BreastCancerGene = "111558";

    /// <summary>
    /// Literal for code: WeakFamilyHistoryOfBreastCancer
    /// </summary>
    public const string LiteralWeakFamilyHistoryOfBreastCancer = "111559";

    /// <summary>
    /// Literal for code: IntermediateFamilyHistoryOfBreastCancer
    /// </summary>
    public const string LiteralIntermediateFamilyHistoryOfBreastCancer = "111560";

    /// <summary>
    /// Literal for code: VeryStrongFamilyHistoryOfBreastCancer
    /// </summary>
    public const string LiteralVeryStrongFamilyHistoryOfBreastCancer = "111561";

    /// <summary>
    /// Literal for code: FamilyHistoryOfProstateCancer
    /// </summary>
    public const string LiteralFamilyHistoryOfProstateCancer = "111562";

    /// <summary>
    /// Literal for code: FamilyHistoryUnknown
    /// </summary>
    public const string LiteralFamilyHistoryUnknown = "111563";

    /// <summary>
    /// Literal for code: NippleDischargeCytology
    /// </summary>
    public const string LiteralNippleDischargeCytology = "111564";

    /// <summary>
    /// Literal for code: UterineMalformations
    /// </summary>
    public const string LiteralUterineMalformations = "111565";

    /// <summary>
    /// Literal for code: SpontaneousAbortion
    /// </summary>
    public const string LiteralSpontaneousAbortion = "111566";

    /// <summary>
    /// Literal for code: GynecologicCondition
    /// </summary>
    public const string LiteralGynecologicCondition = "111567";

    /// <summary>
    /// Literal for code: GynecologicSurgery
    /// </summary>
    public const string LiteralGynecologicSurgery = "111568";

    /// <summary>
    /// Literal for code: PreviousLBWOrIUGRBirth
    /// </summary>
    public const string LiteralPreviousLBWOrIUGRBirth = "111569";

    /// <summary>
    /// Literal for code: PreviousFetalMalformationSyndrome
    /// </summary>
    public const string LiteralPreviousFetalMalformationSyndrome = "111570";

    /// <summary>
    /// Literal for code: PreviousRHNegativeOrBloodDyscrasiaAtBirth
    /// </summary>
    public const string LiteralPreviousRHNegativeOrBloodDyscrasiaAtBirth = "111571";

    /// <summary>
    /// Literal for code: HistoryOfMultipleFetuses
    /// </summary>
    public const string LiteralHistoryOfMultipleFetuses = "111572";

    /// <summary>
    /// Literal for code: CurrentPregnancyKnownOrSuspectedMalformationsSyndromes
    /// </summary>
    public const string LiteralCurrentPregnancyKnownOrSuspectedMalformationsSyndromes = "111573";

    /// <summary>
    /// Literal for code: FamilyHistoryFetalMalformationSyndrome
    /// </summary>
    public const string LiteralFamilyHistoryFetalMalformationSyndrome = "111574";

    /// <summary>
    /// Literal for code: High
    /// </summary>
    public const string LiteralHigh = "111575";

    /// <summary>
    /// Literal for code: Medium
    /// </summary>
    public const string LiteralMedium = "111576";

    /// <summary>
    /// Literal for code: Low
    /// </summary>
    public const string LiteralLow = "111577";

    /// <summary>
    /// Literal for code: DoseFrequency
    /// </summary>
    public const string LiteralDoseFrequency = "111578";

    /// <summary>
    /// Literal for code: RateOfExposure
    /// </summary>
    public const string LiteralRateOfExposure = "111579";

    /// <summary>
    /// Literal for code: VolumeOfUse
    /// </summary>
    public const string LiteralVolumeOfUse = "111580";

    /// <summary>
    /// Literal for code: RelativeDoseAmount
    /// </summary>
    public const string LiteralRelativeDoseAmount = "111581";

    /// <summary>
    /// Literal for code: RelativeAmountOfExposure
    /// </summary>
    public const string LiteralRelativeAmountOfExposure = "111582";

    /// <summary>
    /// Literal for code: RelativeAmountOfUse
    /// </summary>
    public const string LiteralRelativeAmountOfUse = "111583";

    /// <summary>
    /// Literal for code: RelativeDoseFrequency
    /// </summary>
    public const string LiteralRelativeDoseFrequency = "111584";

    /// <summary>
    /// Literal for code: RelativeFrequencyOfExposure
    /// </summary>
    public const string LiteralRelativeFrequencyOfExposure = "111585";

    /// <summary>
    /// Literal for code: RelativeFrequencyOfUse
    /// </summary>
    public const string LiteralRelativeFrequencyOfUse = "111586";

    /// <summary>
    /// Literal for code: NoKnownExposure
    /// </summary>
    public const string LiteralNoKnownExposure = "111587";

    /// <summary>
    /// Literal for code: RecallForTechnicalReasons
    /// </summary>
    public const string LiteralRecallForTechnicalReasons = "111590";

    /// <summary>
    /// Literal for code: RecallForImagingFindings
    /// </summary>
    public const string LiteralRecallForImagingFindings = "111591";

    /// <summary>
    /// Literal for code: RecallForPatientSymptomsClinicalFindings
    /// </summary>
    public const string LiteralRecallForPatientSymptomsClinicalFindings = "111592";

    /// <summary>
    /// Literal for code: LBWOrIUGR
    /// </summary>
    public const string LiteralLBWOrIUGR = "111593";

    /// <summary>
    /// Literal for code: NoFilter
    /// </summary>
    public const string LiteralNoFilter = "111609";

    /// <summary>
    /// Literal for code: Field1ForJoslin3Field
    /// </summary>
    public const string LiteralField1ForJoslin3Field = "111621";

    /// <summary>
    /// Literal for code: Field2ForJoslin3Field
    /// </summary>
    public const string LiteralField2ForJoslin3Field = "111622";

    /// <summary>
    /// Literal for code: Field3ForJoslin3Field
    /// </summary>
    public const string LiteralField3ForJoslin3Field = "111623";

    /// <summary>
    /// Literal for code: DiffuseDirectIllumination
    /// </summary>
    public const string LiteralDiffuseDirectIllumination = "111625";

    /// <summary>
    /// Literal for code: ScheimpflugCamera
    /// </summary>
    public const string LiteralScheimpflugCamera = "111626";

    /// <summary>
    /// Literal for code: ScotopicLight
    /// </summary>
    public const string LiteralScotopicLight = "111627";

    /// <summary>
    /// Literal for code: MesopicLight
    /// </summary>
    public const string LiteralMesopicLight = "111628";

    /// <summary>
    /// Literal for code: PhotopicLight
    /// </summary>
    public const string LiteralPhotopicLight = "111629";

    /// <summary>
    /// Literal for code: DynamicLight
    /// </summary>
    public const string LiteralDynamicLight = "111630";

    /// <summary>
    /// Literal for code: AverageGlandularDose
    /// </summary>
    public const string LiteralAverageGlandularDose = "111631";

    /// <summary>
    /// Literal for code: AnodeTargetMaterial
    /// </summary>
    public const string LiteralAnodeTargetMaterial = "111632";

    /// <summary>
    /// Literal for code: CompressionThickness
    /// </summary>
    public const string LiteralCompressionThickness = "111633";

    /// <summary>
    /// Literal for code: HalfValueLayer
    /// </summary>
    public const string LiteralHalfValueLayer = "111634";

    /// <summary>
    /// Literal for code: XRayGrid
    /// </summary>
    public const string LiteralXRayGrid = "111635";

    /// <summary>
    /// Literal for code: EntranceExposureAtRP
    /// </summary>
    public const string LiteralEntranceExposureAtRP = "111636";

    /// <summary>
    /// Literal for code: AccumulatedAverageGlandularDose
    /// </summary>
    public const string LiteralAccumulatedAverageGlandularDose = "111637";

    /// <summary>
    /// Literal for code: PatientEquivalentThickness
    /// </summary>
    public const string LiteralPatientEquivalentThickness = "111638";

    /// <summary>
    /// Literal for code: FixedGrid
    /// </summary>
    public const string LiteralFixedGrid = "111641";

    /// <summary>
    /// Literal for code: FocusedGrid
    /// </summary>
    public const string LiteralFocusedGrid = "111642";

    /// <summary>
    /// Literal for code: ReciprocatingGrid
    /// </summary>
    public const string LiteralReciprocatingGrid = "111643";

    /// <summary>
    /// Literal for code: ParallelGrid
    /// </summary>
    public const string LiteralParallelGrid = "111644";

    /// <summary>
    /// Literal for code: CrossedGrid
    /// </summary>
    public const string LiteralCrossedGrid = "111645";

    /// <summary>
    /// Literal for code: NoGrid
    /// </summary>
    public const string LiteralNoGrid = "111646";

    /// <summary>
    /// Literal for code: SpectaclePrescriptionReport
    /// </summary>
    public const string LiteralSpectaclePrescriptionReport = "111671";

    /// <summary>
    /// Literal for code: AddNear
    /// </summary>
    public const string LiteralAddNear = "111672";

    /// <summary>
    /// Literal for code: AddIntermediate
    /// </summary>
    public const string LiteralAddIntermediate = "111673";

    /// <summary>
    /// Literal for code: AddOther
    /// </summary>
    public const string LiteralAddOther = "111674";

    /// <summary>
    /// Literal for code: HorizontalPrismPower
    /// </summary>
    public const string LiteralHorizontalPrismPower = "111675";

    /// <summary>
    /// Literal for code: HorizontalPrismBase
    /// </summary>
    public const string LiteralHorizontalPrismBase = "111676";

    /// <summary>
    /// Literal for code: VerticalPrismPower
    /// </summary>
    public const string LiteralVerticalPrismPower = "111677";

    /// <summary>
    /// Literal for code: VerticalPrismBase
    /// </summary>
    public const string LiteralVerticalPrismBase = "111678";

    /// <summary>
    /// Literal for code: DistancePupillaryDistance
    /// </summary>
    public const string LiteralDistancePupillaryDistance = "111679";

    /// <summary>
    /// Literal for code: NearPupillaryDistance
    /// </summary>
    public const string LiteralNearPupillaryDistance = "111680";

    /// <summary>
    /// Literal for code: AutorefractionVisualAcuity
    /// </summary>
    public const string LiteralAutorefractionVisualAcuity = "111685";

    /// <summary>
    /// Literal for code: HabitualVisualAcuity
    /// </summary>
    public const string LiteralHabitualVisualAcuity = "111686";

    /// <summary>
    /// Literal for code: PrescriptionVisualAcuity
    /// </summary>
    public const string LiteralPrescriptionVisualAcuity = "111687";

    /// <summary>
    /// Literal for code: RightEyeRx
    /// </summary>
    public const string LiteralRightEyeRx = "111688";

    /// <summary>
    /// Literal for code: LeftEyeRx
    /// </summary>
    public const string LiteralLeftEyeRx = "111689";

    /// <summary>
    /// Literal for code: MacularGridThicknessAndVolumeReport
    /// </summary>
    public const string LiteralMacularGridThicknessAndVolumeReport = "111690";

    /// <summary>
    /// Literal for code: NumberOfImagesUsedForMacularMeasurements
    /// </summary>
    public const string LiteralNumberOfImagesUsedForMacularMeasurements = "111691";

    /// <summary>
    /// Literal for code: NumberOfSamplesUsedPerImage
    /// </summary>
    public const string LiteralNumberOfSamplesUsedPerImage = "111692";

    /// <summary>
    /// Literal for code: AnalysisQualityRating
    /// </summary>
    public const string LiteralAnalysisQualityRating = "111693";

    /// <summary>
    /// Literal for code: ImageSetQualityRating
    /// </summary>
    public const string LiteralImageSetQualityRating = "111694";

    /// <summary>
    /// Literal for code: InterferingTearsOrDrops
    /// </summary>
    public const string LiteralInterferingTearsOrDrops = "111695";

    /// <summary>
    /// Literal for code: VisualFixationQualityDuringAcquisition
    /// </summary>
    public const string LiteralVisualFixationQualityDuringAcquisition = "111696";

    /// <summary>
    /// Literal for code: VisualFixationQualityProblem
    /// </summary>
    public const string LiteralVisualFixationQualityProblem = "111697";

    /// <summary>
    /// Literal for code: OphthalmicMacularGridProblem
    /// </summary>
    public const string LiteralOphthalmicMacularGridProblem = "111698";

    /// <summary>
    /// Literal for code: SpecimenContainerIdentifier
    /// </summary>
    public const string LiteralSpecimenContainerIdentifier = "111700";

    /// <summary>
    /// Literal for code: ProcessingType
    /// </summary>
    public const string LiteralProcessingType = "111701";

    /// <summary>
    /// Literal for code: DateTimeOfProcessing
    /// </summary>
    public const string LiteralDateTimeOfProcessing = "111702";

    /// <summary>
    /// Literal for code: ProcessingStepDescription
    /// </summary>
    public const string LiteralProcessingStepDescription = "111703";

    /// <summary>
    /// Literal for code: SamplingMethod
    /// </summary>
    public const string LiteralSamplingMethod = "111704";

    /// <summary>
    /// Literal for code: ParentSpecimenIdentifier
    /// </summary>
    public const string LiteralParentSpecimenIdentifier = "111705";

    /// <summary>
    /// Literal for code: IssuerOfParentSpecimenIdentifier
    /// </summary>
    public const string LiteralIssuerOfParentSpecimenIdentifier = "111706";

    /// <summary>
    /// Literal for code: ParentSpecimenType
    /// </summary>
    public const string LiteralParentSpecimenType = "111707";

    /// <summary>
    /// Literal for code: PositionFrameOfReference
    /// </summary>
    public const string LiteralPositionFrameOfReference = "111708";

    /// <summary>
    /// Literal for code: LocationOfSamplingSite
    /// </summary>
    public const string LiteralLocationOfSamplingSite = "111709";

    /// <summary>
    /// Literal for code: LocationOfSamplingSiteXOffset
    /// </summary>
    public const string LiteralLocationOfSamplingSiteXOffset = "111710";

    /// <summary>
    /// Literal for code: LocationOfSamplingSiteYOffset
    /// </summary>
    public const string LiteralLocationOfSamplingSiteYOffset = "111711";

    /// <summary>
    /// Literal for code: LocationOfSamplingSiteZOffset
    /// </summary>
    public const string LiteralLocationOfSamplingSiteZOffset = "111712";

    /// <summary>
    /// Literal for code: LocationOfSpecimen
    /// </summary>
    public const string LiteralLocationOfSpecimen = "111718";

    /// <summary>
    /// Literal for code: LocationOfSpecimenXOffset
    /// </summary>
    public const string LiteralLocationOfSpecimenXOffset = "111719";

    /// <summary>
    /// Literal for code: LocationOfSpecimenYOffset
    /// </summary>
    public const string LiteralLocationOfSpecimenYOffset = "111720";

    /// <summary>
    /// Literal for code: LocationOfSpecimenZOffset
    /// </summary>
    public const string LiteralLocationOfSpecimenZOffset = "111721";

    /// <summary>
    /// Literal for code: VisualMarkingOfSpecimen
    /// </summary>
    public const string LiteralVisualMarkingOfSpecimen = "111723";

    /// <summary>
    /// Literal for code: IssuerOfSpecimenIdentifier
    /// </summary>
    public const string LiteralIssuerOfSpecimenIdentifier = "111724";

    /// <summary>
    /// Literal for code: DissectionWithEntireSpecimenSubmission
    /// </summary>
    public const string LiteralDissectionWithEntireSpecimenSubmission = "111726";

    /// <summary>
    /// Literal for code: DissectionWithRepresentativeSectionsSubmission
    /// </summary>
    public const string LiteralDissectionWithRepresentativeSectionsSubmission = "111727";

    /// <summary>
    /// Literal for code: SpecimenStorage
    /// </summary>
    public const string LiteralSpecimenStorage = "111729";

    /// <summary>
    /// Literal for code: TransmissionIllumination
    /// </summary>
    public const string LiteralTransmissionIllumination = "111741";

    /// <summary>
    /// Literal for code: ReflectionIllumination
    /// </summary>
    public const string LiteralReflectionIllumination = "111742";

    /// <summary>
    /// Literal for code: EpifluorescenceIllumination
    /// </summary>
    public const string LiteralEpifluorescenceIllumination = "111743";

    /// <summary>
    /// Literal for code: BrightfieldIllumination
    /// </summary>
    public const string LiteralBrightfieldIllumination = "111744";

    /// <summary>
    /// Literal for code: DarkfieldIllumination
    /// </summary>
    public const string LiteralDarkfieldIllumination = "111745";

    /// <summary>
    /// Literal for code: ObliqueIllumination
    /// </summary>
    public const string LiteralObliqueIllumination = "111746";

    /// <summary>
    /// Literal for code: PhaseContrastIllumination
    /// </summary>
    public const string LiteralPhaseContrastIllumination = "111747";

    /// <summary>
    /// Literal for code: DifferentialInterferenceContrast
    /// </summary>
    public const string LiteralDifferentialInterferenceContrast = "111748";

    /// <summary>
    /// Literal for code: TotalInternalReflectionFluorescence
    /// </summary>
    public const string LiteralTotalInternalReflectionFluorescence = "111749";

    /// <summary>
    /// Literal for code: UltrasoundContact
    /// </summary>
    public const string LiteralUltrasoundContact = "111750";

    /// <summary>
    /// Literal for code: UltrasoundImmersion
    /// </summary>
    public const string LiteralUltrasoundImmersion = "111751";

    /// <summary>
    /// Literal for code: Optical
    /// </summary>
    public const string LiteralOptical = "111752";

    /// <summary>
    /// Literal for code: ManualKeratometry
    /// </summary>
    public const string LiteralManualKeratometry = "111753";

    /// <summary>
    /// Literal for code: AutoKeratometry
    /// </summary>
    public const string LiteralAutoKeratometry = "111754";

    /// <summary>
    /// Literal for code: SimulatedKeratometry
    /// </summary>
    public const string LiteralSimulatedKeratometry = "111755";

    /// <summary>
    /// Literal for code: EquivalentKReading
    /// </summary>
    public const string LiteralEquivalentKReading = "111756";

    /// <summary>
    /// Literal for code: Haigis
    /// </summary>
    public const string LiteralHaigis = "111760";

    /// <summary>
    /// Literal for code: HaigisL
    /// </summary>
    public const string LiteralHaigisL = "111761";

    /// <summary>
    /// Literal for code: Holladay1
    /// </summary>
    public const string LiteralHolladay1 = "111762";

    /// <summary>
    /// Literal for code: Holladay2
    /// </summary>
    public const string LiteralHolladay2 = "111763";

    /// <summary>
    /// Literal for code: HofferQ
    /// </summary>
    public const string LiteralHofferQ = "111764";

    /// <summary>
    /// Literal for code: Olsen
    /// </summary>
    public const string LiteralOlsen = "111765";

    /// <summary>
    /// Literal for code: SRKII
    /// </summary>
    public const string LiteralSRKII = "111766";

    /// <summary>
    /// Literal for code: SRKT
    /// </summary>
    public const string LiteralSRKT = "111767";

    /// <summary>
    /// Literal for code: ACDConstant
    /// </summary>
    public const string LiteralACDConstant = "111768";

    /// <summary>
    /// Literal for code: HaigisA0
    /// </summary>
    public const string LiteralHaigisA0 = "111769";

    /// <summary>
    /// Literal for code: HaigisA1
    /// </summary>
    public const string LiteralHaigisA1 = "111770";

    /// <summary>
    /// Literal for code: HaigisA2
    /// </summary>
    public const string LiteralHaigisA2 = "111771";

    /// <summary>
    /// Literal for code: HofferPACDConstant
    /// </summary>
    public const string LiteralHofferPACDConstant = "111772";

    /// <summary>
    /// Literal for code: SurgeonFactor
    /// </summary>
    public const string LiteralSurgeonFactor = "111773";

    /// <summary>
    /// Literal for code: FrontOfCorneaToFrontOfLens
    /// </summary>
    public const string LiteralFrontOfCorneaToFrontOfLens = "111776";

    /// <summary>
    /// Literal for code: BackOfCorneaToFrontOfLens
    /// </summary>
    public const string LiteralBackOfCorneaToFrontOfLens = "111777";

    /// <summary>
    /// Literal for code: SingleOrAnteriorLens
    /// </summary>
    public const string LiteralSingleOrAnteriorLens = "111778";

    /// <summary>
    /// Literal for code: PosteriorLens
    /// </summary>
    public const string LiteralPosteriorLens = "111779";

    /// <summary>
    /// Literal for code: MeasurementFromThisDevice
    /// </summary>
    public const string LiteralMeasurementFromThisDevice = "111780";

    /// <summary>
    /// Literal for code: ExternalDataSource
    /// </summary>
    public const string LiteralExternalDataSource = "111781";

    /// <summary>
    /// Literal for code: AxialMeasurementsSOPInstance
    /// </summary>
    public const string LiteralAxialMeasurementsSOPInstance = "111782";

    /// <summary>
    /// Literal for code: RefractiveMeasurementsSOPInstance
    /// </summary>
    public const string LiteralRefractiveMeasurementsSOPInstance = "111783";

    /// <summary>
    /// Literal for code: StandardDeviationOfMeasurementsUsed
    /// </summary>
    public const string LiteralStandardDeviationOfMeasurementsUsed = "111786";

    /// <summary>
    /// Literal for code: SignalToNoiseRatio
    /// </summary>
    public const string LiteralSignalToNoiseRatio = "111787";

    /// <summary>
    /// Literal for code: SphericalProjection
    /// </summary>
    public const string LiteralSphericalProjection = "111791";

    /// <summary>
    /// Literal for code: SurfaceContourMapping
    /// </summary>
    public const string LiteralSurfaceContourMapping = "111792";

    /// <summary>
    /// Literal for code: VisualField242TestPattern
    /// </summary>
    public const string LiteralVisualField242TestPattern = "111800";

    /// <summary>
    /// Literal for code: VisualField102TestPattern
    /// </summary>
    public const string LiteralVisualField102TestPattern = "111801";

    /// <summary>
    /// Literal for code: VisualField302TestPattern
    /// </summary>
    public const string LiteralVisualField302TestPattern = "111802";

    /// <summary>
    /// Literal for code: VisualField604TestPattern
    /// </summary>
    public const string LiteralVisualField604TestPattern = "111803";

    /// <summary>
    /// Literal for code: VisualFieldMaculaTestPattern
    /// </summary>
    public const string LiteralVisualFieldMaculaTestPattern = "111804";

    /// <summary>
    /// Literal for code: VisualFieldCentral40PointTestPattern
    /// </summary>
    public const string LiteralVisualFieldCentral40PointTestPattern = "111805";

    /// <summary>
    /// Literal for code: VisualFieldCentral76PointTestPattern
    /// </summary>
    public const string LiteralVisualFieldCentral76PointTestPattern = "111806";

    /// <summary>
    /// Literal for code: VisualFieldPeripheral60PointTestPattern
    /// </summary>
    public const string LiteralVisualFieldPeripheral60PointTestPattern = "111807";

    /// <summary>
    /// Literal for code: VisualFieldFullField81PointTestPattern
    /// </summary>
    public const string LiteralVisualFieldFullField81PointTestPattern = "111808";

    /// <summary>
    /// Literal for code: VisualFieldFullField120PointTestPattern
    /// </summary>
    public const string LiteralVisualFieldFullField120PointTestPattern = "111809";

    /// <summary>
    /// Literal for code: VisualFieldGTestPattern
    /// </summary>
    public const string LiteralVisualFieldGTestPattern = "111810";

    /// <summary>
    /// Literal for code: VisualFieldMTestPattern
    /// </summary>
    public const string LiteralVisualFieldMTestPattern = "111811";

    /// <summary>
    /// Literal for code: VisualField07TestPattern
    /// </summary>
    public const string LiteralVisualField07TestPattern = "111812";

    /// <summary>
    /// Literal for code: VisualFieldLVCTestPattern
    /// </summary>
    public const string LiteralVisualFieldLVCTestPattern = "111813";

    /// <summary>
    /// Literal for code: VisualFieldCentralTestPattern
    /// </summary>
    public const string LiteralVisualFieldCentralTestPattern = "111814";

    /// <summary>
    /// Literal for code: VisualFieldSITAStandardTestStrategy
    /// </summary>
    public const string LiteralVisualFieldSITAStandardTestStrategy = "111815";

    /// <summary>
    /// Literal for code: VisualFieldSITASWAPTestStrategy
    /// </summary>
    public const string LiteralVisualFieldSITASWAPTestStrategy = "111816";

    /// <summary>
    /// Literal for code: VisualFieldSITAFastTestStrategy
    /// </summary>
    public const string LiteralVisualFieldSITAFastTestStrategy = "111817";

    /// <summary>
    /// Literal for code: VisualFieldFullThresholdTestStrategy
    /// </summary>
    public const string LiteralVisualFieldFullThresholdTestStrategy = "111818";

    /// <summary>
    /// Literal for code: VisualFieldFastPacTestStrategy
    /// </summary>
    public const string LiteralVisualFieldFastPacTestStrategy = "111819";

    /// <summary>
    /// Literal for code: VisualFieldFullFromPriorTestStrategy
    /// </summary>
    public const string LiteralVisualFieldFullFromPriorTestStrategy = "111820";

    /// <summary>
    /// Literal for code: VisualFieldOptimaTestStrategy
    /// </summary>
    public const string LiteralVisualFieldOptimaTestStrategy = "111821";

    /// <summary>
    /// Literal for code: VisualFieldTwoZoneTestStrategy
    /// </summary>
    public const string LiteralVisualFieldTwoZoneTestStrategy = "111822";

    /// <summary>
    /// Literal for code: VisualFieldThreeZoneTestStrategy
    /// </summary>
    public const string LiteralVisualFieldThreeZoneTestStrategy = "111823";

    /// <summary>
    /// Literal for code: VisualFieldQuantifyDefectsTestStrategy
    /// </summary>
    public const string LiteralVisualFieldQuantifyDefectsTestStrategy = "111824";

    /// <summary>
    /// Literal for code: VisualFieldTOPTestStrategy
    /// </summary>
    public const string LiteralVisualFieldTOPTestStrategy = "111825";

    /// <summary>
    /// Literal for code: VisualFieldDynamicTestStrategy
    /// </summary>
    public const string LiteralVisualFieldDynamicTestStrategy = "111826";

    /// <summary>
    /// Literal for code: VisualFieldNormalTestStrategy
    /// </summary>
    public const string LiteralVisualFieldNormalTestStrategy = "111827";

    /// <summary>
    /// Literal for code: VisualField1LTTestStrategy
    /// </summary>
    public const string LiteralVisualField1LTTestStrategy = "111828";

    /// <summary>
    /// Literal for code: VisualField2LTTestStrategy
    /// </summary>
    public const string LiteralVisualField2LTTestStrategy = "111829";

    /// <summary>
    /// Literal for code: VisualFieldLVSTestStrategy
    /// </summary>
    public const string LiteralVisualFieldLVSTestStrategy = "111830";

    /// <summary>
    /// Literal for code: VisualFieldGATETestStrategy
    /// </summary>
    public const string LiteralVisualFieldGATETestStrategy = "111831";

    /// <summary>
    /// Literal for code: VisualFieldGATEiTestStrategy
    /// </summary>
    public const string LiteralVisualFieldGATEiTestStrategy = "111832";

    /// <summary>
    /// Literal for code: VisualField2LTDynamicTestStrategy
    /// </summary>
    public const string LiteralVisualField2LTDynamicTestStrategy = "111833";

    /// <summary>
    /// Literal for code: VisualField2LTNormalTestStrategy
    /// </summary>
    public const string LiteralVisualField2LTNormalTestStrategy = "111834";

    /// <summary>
    /// Literal for code: VisualFieldFastThresholdTestStrategy
    /// </summary>
    public const string LiteralVisualFieldFastThresholdTestStrategy = "111835";

    /// <summary>
    /// Literal for code: VisualFieldCLIPTestStrategy
    /// </summary>
    public const string LiteralVisualFieldCLIPTestStrategy = "111836";

    /// <summary>
    /// Literal for code: VisualFieldCLASSStrategy
    /// </summary>
    public const string LiteralVisualFieldCLASSStrategy = "111837";

    /// <summary>
    /// Literal for code: AgeCorrected
    /// </summary>
    public const string LiteralAgeCorrected = "111838";

    /// <summary>
    /// Literal for code: ThresholdRelated
    /// </summary>
    public const string LiteralThresholdRelated = "111839";

    /// <summary>
    /// Literal for code: SingleLuminance
    /// </summary>
    public const string LiteralSingleLuminance = "111840";

    /// <summary>
    /// Literal for code: FovealSensitivityRelated
    /// </summary>
    public const string LiteralFovealSensitivityRelated = "111841";

    /// <summary>
    /// Literal for code: RelatedToNonMacularSensitivity
    /// </summary>
    public const string LiteralRelatedToNonMacularSensitivity = "111842";

    /// <summary>
    /// Literal for code: AutomatedOptical
    /// </summary>
    public const string LiteralAutomatedOptical = "111843";

    /// <summary>
    /// Literal for code: BlindSpotMonitoring
    /// </summary>
    public const string LiteralBlindSpotMonitoring = "111844";

    /// <summary>
    /// Literal for code: MacularFixationTesting
    /// </summary>
    public const string LiteralMacularFixationTesting = "111845";

    /// <summary>
    /// Literal for code: ObservationByExaminer
    /// </summary>
    public const string LiteralObservationByExaminer = "111846";

    /// <summary>
    /// Literal for code: OutsideNormalLimits
    /// </summary>
    public const string LiteralOutsideNormalLimits = "111847";

    /// <summary>
    /// Literal for code: Borderline
    /// </summary>
    public const string LiteralBorderline = "111848";

    /// <summary>
    /// Literal for code: AbnormallyHighSensitivity
    /// </summary>
    public const string LiteralAbnormallyHighSensitivity = "111849";

    /// <summary>
    /// Literal for code: GeneralReductionInSensitivity
    /// </summary>
    public const string LiteralGeneralReductionInSensitivity = "111850";

    /// <summary>
    /// Literal for code: BorderlineAndGeneralReductionInSensitivity
    /// </summary>
    public const string LiteralBorderlineAndGeneralReductionInSensitivity = "111851";

    /// <summary>
    /// Literal for code: VisualFieldIndex
    /// </summary>
    public const string LiteralVisualFieldIndex = "111852";

    /// <summary>
    /// Literal for code: VisualFieldLossDueToDiffuseDefect
    /// </summary>
    public const string LiteralVisualFieldLossDueToDiffuseDefect = "111853";

    /// <summary>
    /// Literal for code: VisualFieldLossDueToLocalDefect
    /// </summary>
    public const string LiteralVisualFieldLossDueToLocalDefect = "111854";

    /// <summary>
    /// Literal for code: GlaucomaHemifieldTestAnalysis
    /// </summary>
    public const string LiteralGlaucomaHemifieldTestAnalysis = "111855";

    /// <summary>
    /// Literal for code: OpticalFixationMeasurements
    /// </summary>
    public const string LiteralOpticalFixationMeasurements = "111856";

    /// <summary>
    /// Literal for code: MaculaCentered
    /// </summary>
    public const string LiteralMaculaCentered = "111900";

    /// <summary>
    /// Literal for code: DiscCentered
    /// </summary>
    public const string LiteralDiscCentered = "111901";

    /// <summary>
    /// Literal for code: LesionCentered
    /// </summary>
    public const string LiteralLesionCentered = "111902";

    /// <summary>
    /// Literal for code: DiscMaculaCentered
    /// </summary>
    public const string LiteralDiscMaculaCentered = "111903";

    /// <summary>
    /// Literal for code: MidPeripheralSuperior
    /// </summary>
    public const string LiteralMidPeripheralSuperior = "111904";

    /// <summary>
    /// Literal for code: MidPeripheralSuperiorTemporal
    /// </summary>
    public const string LiteralMidPeripheralSuperiorTemporal = "111905";

    /// <summary>
    /// Literal for code: MidPeripheralTemporal
    /// </summary>
    public const string LiteralMidPeripheralTemporal = "111906";

    /// <summary>
    /// Literal for code: MidPeripheralInferiorTemporal
    /// </summary>
    public const string LiteralMidPeripheralInferiorTemporal = "111907";

    /// <summary>
    /// Literal for code: MidPeripheralInferior
    /// </summary>
    public const string LiteralMidPeripheralInferior = "111908";

    /// <summary>
    /// Literal for code: MidPeripheralInferiorNasal
    /// </summary>
    public const string LiteralMidPeripheralInferiorNasal = "111909";

    /// <summary>
    /// Literal for code: MidPeripheralNasal
    /// </summary>
    public const string LiteralMidPeripheralNasal = "111910";

    /// <summary>
    /// Literal for code: MidPeripheralSuperiorNasal
    /// </summary>
    public const string LiteralMidPeripheralSuperiorNasal = "111911";

    /// <summary>
    /// Literal for code: PeripheralSuperior
    /// </summary>
    public const string LiteralPeripheralSuperior = "111912";

    /// <summary>
    /// Literal for code: PeripheralSuperiorTemporal
    /// </summary>
    public const string LiteralPeripheralSuperiorTemporal = "111913";

    /// <summary>
    /// Literal for code: PeripheralTemporal
    /// </summary>
    public const string LiteralPeripheralTemporal = "111914";

    /// <summary>
    /// Literal for code: PeripheralInferiorTemporal
    /// </summary>
    public const string LiteralPeripheralInferiorTemporal = "111915";

    /// <summary>
    /// Literal for code: PeripheralInferior
    /// </summary>
    public const string LiteralPeripheralInferior = "111916";

    /// <summary>
    /// Literal for code: PeripheralInferiorNasal
    /// </summary>
    public const string LiteralPeripheralInferiorNasal = "111917";

    /// <summary>
    /// Literal for code: PeripheralNasal
    /// </summary>
    public const string LiteralPeripheralNasal = "111918";

    /// <summary>
    /// Literal for code: PeripheralSuperiorNasal
    /// </summary>
    public const string LiteralPeripheralSuperiorNasal = "111919";

    /// <summary>
    /// Literal for code: TimeDomain
    /// </summary>
    public const string LiteralTimeDomain = "111920";

    /// <summary>
    /// Literal for code: SpectralDomain
    /// </summary>
    public const string LiteralSpectralDomain = "111921";

    /// <summary>
    /// Literal for code: NoCornealCompensation
    /// </summary>
    public const string LiteralNoCornealCompensation = "111922";

    /// <summary>
    /// Literal for code: CornealBirefringenceCompensation
    /// </summary>
    public const string LiteralCornealBirefringenceCompensation = "111923";

    /// <summary>
    /// Literal for code: RetinalTopography
    /// </summary>
    public const string LiteralRetinalTopography = "111924";

    /// <summary>
    /// Literal for code: RetinalNerveFiberLayerThickness
    /// </summary>
    public const string LiteralRetinalNerveFiberLayerThickness = "111925";

    /// <summary>
    /// Literal for code: GanglionCellComplexThickness
    /// </summary>
    public const string LiteralGanglionCellComplexThickness = "111926";

    /// <summary>
    /// Literal for code: TotalRetinalThicknessILMToISOS
    /// </summary>
    public const string LiteralTotalRetinalThicknessILMToISOS = "111927";

    /// <summary>
    /// Literal for code: TotalRetinalThicknessILMToRPE
    /// </summary>
    public const string LiteralTotalRetinalThicknessILMToRPE = "111928";

    /// <summary>
    /// Literal for code: TotalRetinalThicknessILMToBM
    /// </summary>
    public const string LiteralTotalRetinalThicknessILMToBM = "111929";

    /// <summary>
    /// Literal for code: AbsoluteOphthalmicThickness
    /// </summary>
    public const string LiteralAbsoluteOphthalmicThickness = "111930";

    /// <summary>
    /// Literal for code: ThicknessDeviationCategoryFromNormativeData
    /// </summary>
    public const string LiteralThicknessDeviationCategoryFromNormativeData = "111931";

    /// <summary>
    /// Literal for code: ThicknessDeviationFromNormativeData
    /// </summary>
    public const string LiteralThicknessDeviationFromNormativeData = "111932";

    /// <summary>
    /// Literal for code: RelatedOphthalmicThicknessMap
    /// </summary>
    public const string LiteralRelatedOphthalmicThicknessMap = "111933";

    /// <summary>
    /// Literal for code: DiscFovea
    /// </summary>
    public const string LiteralDiscFovea = "111934";

    /// <summary>
    /// Literal for code: PGreaterThan5Percent
    /// </summary>
    public const string LiteralPGreaterThan5Percent = "111935";

    /// <summary>
    /// Literal for code: PLessThan5Percent
    /// </summary>
    public const string LiteralPLessThan5Percent = "111936";

    /// <summary>
    /// Literal for code: PLessThan2Percent
    /// </summary>
    public const string LiteralPLessThan2Percent = "111937";

    /// <summary>
    /// Literal for code: PLessThan1Percent
    /// </summary>
    public const string LiteralPLessThan1Percent = "111938";

    /// <summary>
    /// Literal for code: PLessThan05Percent
    /// </summary>
    public const string LiteralPLessThan05Percent = "111939";

    /// <summary>
    /// Literal for code: CornealAxialPowerMap
    /// </summary>
    public const string LiteralCornealAxialPowerMap = "111940";

    /// <summary>
    /// Literal for code: CornealInstantaneousPowerMap
    /// </summary>
    public const string LiteralCornealInstantaneousPowerMap = "111941";

    /// <summary>
    /// Literal for code: CornealRefractivePowerMap
    /// </summary>
    public const string LiteralCornealRefractivePowerMap = "111942";

    /// <summary>
    /// Literal for code: CornealElevationMap
    /// </summary>
    public const string LiteralCornealElevationMap = "111943";

    /// <summary>
    /// Literal for code: CornealWavefrontMap
    /// </summary>
    public const string LiteralCornealWavefrontMap = "111944";

    /// <summary>
    /// Literal for code: ElevationBasedCornealTomographer
    /// </summary>
    public const string LiteralElevationBasedCornealTomographer = "111945";

    /// <summary>
    /// Literal for code: ReflectionBasedCornealTopographer
    /// </summary>
    public const string LiteralReflectionBasedCornealTopographer = "111946";

    /// <summary>
    /// Literal for code: InterferometryBasedCornealTomographer
    /// </summary>
    public const string LiteralInterferometryBasedCornealTomographer = "111947";

    /// <summary>
    /// Literal for code: ChestCADReport
    /// </summary>
    public const string LiteralChestCADReport = "112000";

    /// <summary>
    /// Literal for code: Opacity
    /// </summary>
    public const string LiteralOpacity = "112001";

    /// <summary>
    /// Literal for code: SeriesInstanceUID
    /// </summary>
    public const string LiteralSeriesInstanceUID = "112002";

    /// <summary>
    /// Literal for code: AssociatedChestComponent
    /// </summary>
    public const string LiteralAssociatedChestComponent = "112003";

    /// <summary>
    /// Literal for code: AbnormalInterstitialPattern
    /// </summary>
    public const string LiteralAbnormalInterstitialPattern = "112004";

    /// <summary>
    /// Literal for code: RadiographicAnatomy
    /// </summary>
    public const string LiteralRadiographicAnatomy = "112005";

    /// <summary>
    /// Literal for code: DistributionDescriptor
    /// </summary>
    public const string LiteralDistributionDescriptor = "112006";

    /// <summary>
    /// Literal for code: BorderDefinition
    /// </summary>
    public const string LiteralBorderDefinition = "112007";

    /// <summary>
    /// Literal for code: SiteInvolvement
    /// </summary>
    public const string LiteralSiteInvolvement = "112008";

    /// <summary>
    /// Literal for code: TypeOfContent
    /// </summary>
    public const string LiteralTypeOfContent = "112009";

    /// <summary>
    /// Literal for code: TextureDescriptor
    /// </summary>
    public const string LiteralTextureDescriptor = "112010";

    /// <summary>
    /// Literal for code: PositionerPrimaryAngle
    /// </summary>
    public const string LiteralPositionerPrimaryAngle = "112011";

    /// <summary>
    /// Literal for code: PositionerSecondaryAngle
    /// </summary>
    public const string LiteralPositionerSecondaryAngle = "112012";

    /// <summary>
    /// Literal for code: LocationInChest
    /// </summary>
    public const string LiteralLocationInChest = "112013";

    /// <summary>
    /// Literal for code: OrientationDescriptor
    /// </summary>
    public const string LiteralOrientationDescriptor = "112014";

    /// <summary>
    /// Literal for code: BorderShape
    /// </summary>
    public const string LiteralBorderShape = "112015";

    /// <summary>
    /// Literal for code: BaselineCategory
    /// </summary>
    public const string LiteralBaselineCategory = "112016";

    /// <summary>
    /// Literal for code: CavityExtentAsPercentOfVolume
    /// </summary>
    public const string LiteralCavityExtentAsPercentOfVolume = "112017";

    /// <summary>
    /// Literal for code: CalcificationExtentAsPercentOfSurface
    /// </summary>
    public const string LiteralCalcificationExtentAsPercentOfSurface = "112018";

    /// <summary>
    /// Literal for code: CalcificationExtentAsPercentOfVolume
    /// </summary>
    public const string LiteralCalcificationExtentAsPercentOfVolume = "112019";

    /// <summary>
    /// Literal for code: ResponseEvaluation
    /// </summary>
    public const string LiteralResponseEvaluation = "112020";

    /// <summary>
    /// Literal for code: ResponseEvaluationMethod
    /// </summary>
    public const string LiteralResponseEvaluationMethod = "112021";

    /// <summary>
    /// Literal for code: RECIST
    /// </summary>
    public const string LiteralRECIST = "112022";

    /// <summary>
    /// Literal for code: CompositeFeatureModifier
    /// </summary>
    public const string LiteralCompositeFeatureModifier = "112023";

    /// <summary>
    /// Literal for code: SingleImageFindingModifier
    /// </summary>
    public const string LiteralSingleImageFindingModifier = "112024";

    /// <summary>
    /// Literal for code: SizeDescriptor
    /// </summary>
    public const string LiteralSizeDescriptor = "112025";

    /// <summary>
    /// Literal for code: WidthDescriptor
    /// </summary>
    public const string LiteralWidthDescriptor = "112026";

    /// <summary>
    /// Literal for code: OpacityDescriptor
    /// </summary>
    public const string LiteralOpacityDescriptor = "112027";

    /// <summary>
    /// Literal for code: AbnormalDistributionOfAnatomicStructure
    /// </summary>
    public const string LiteralAbnormalDistributionOfAnatomicStructure = "112028";

    /// <summary>
    /// Literal for code: WHO
    /// </summary>
    public const string LiteralWHO = "112029";

    /// <summary>
    /// Literal for code: CalcificationDescriptor
    /// </summary>
    public const string LiteralCalcificationDescriptor = "112030";

    /// <summary>
    /// Literal for code: AttenuationCoefficient
    /// </summary>
    public const string LiteralAttenuationCoefficient = "112031";

    /// <summary>
    /// Literal for code: ThresholdAttenuationCoefficient
    /// </summary>
    public const string LiteralThresholdAttenuationCoefficient = "112032";

    /// <summary>
    /// Literal for code: AbnormalOpacity
    /// </summary>
    public const string LiteralAbnormalOpacity = "112033";

    /// <summary>
    /// Literal for code: CalculationDescription
    /// </summary>
    public const string LiteralCalculationDescription = "112034";

    /// <summary>
    /// Literal for code: PerformanceOfPediatricAndAdultChestRadiographyACR
    /// </summary>
    public const string LiteralPerformanceOfPediatricAndAdultChestRadiographyACR = "112035";

    /// <summary>
    /// Literal for code: ACRPositionStatement
    /// </summary>
    public const string LiteralACRPositionStatement = "112036";

    /// <summary>
    /// Literal for code: NonLesionModifier
    /// </summary>
    public const string LiteralNonLesionModifier = "112037";

    /// <summary>
    /// Literal for code: OsseousModifier
    /// </summary>
    public const string LiteralOsseousModifier = "112038";

    /// <summary>
    /// Literal for code: TrackingIdentifier
    /// </summary>
    public const string LiteralTrackingIdentifier = "112039";

    /// <summary>
    /// Literal for code: TrackingUniqueIdentifier
    /// </summary>
    public const string LiteralTrackingUniqueIdentifier = "112040";

    /// <summary>
    /// Literal for code: TargetLesionCompleteResponse
    /// </summary>
    public const string LiteralTargetLesionCompleteResponse = "112041";

    /// <summary>
    /// Literal for code: TargetLesionPartialResponse
    /// </summary>
    public const string LiteralTargetLesionPartialResponse = "112042";

    /// <summary>
    /// Literal for code: TargetLesionProgressiveDisease
    /// </summary>
    public const string LiteralTargetLesionProgressiveDisease = "112043";

    /// <summary>
    /// Literal for code: TargetLesionStableDisease
    /// </summary>
    public const string LiteralTargetLesionStableDisease = "112044";

    /// <summary>
    /// Literal for code: NonTargetLesionCompleteResponse
    /// </summary>
    public const string LiteralNonTargetLesionCompleteResponse = "112045";

    /// <summary>
    /// Literal for code: NonTargetLesionIncompleteResponseOrStableDisease
    /// </summary>
    public const string LiteralNonTargetLesionIncompleteResponseOrStableDisease = "112046";

    /// <summary>
    /// Literal for code: NonTargetLesionProgressiveDisease
    /// </summary>
    public const string LiteralNonTargetLesionProgressiveDisease = "112047";

    /// <summary>
    /// Literal for code: CurrentResponse
    /// </summary>
    public const string LiteralCurrentResponse = "112048";

    /// <summary>
    /// Literal for code: BestOverallResponse
    /// </summary>
    public const string LiteralBestOverallResponse = "112049";

    /// <summary>
    /// Literal for code: AnatomicIdentifier
    /// </summary>
    public const string LiteralAnatomicIdentifier = "112050";

    /// <summary>
    /// Literal for code: MeasurementOfResponse
    /// </summary>
    public const string LiteralMeasurementOfResponse = "112051";

    /// <summary>
    /// Literal for code: Bronchovascular
    /// </summary>
    public const string LiteralBronchovascular = "112052";

    /// <summary>
    /// Literal for code: Osseous
    /// </summary>
    public const string LiteralOsseous = "112053";

    /// <summary>
    /// Literal for code: SecondaryPulmonaryLobule
    /// </summary>
    public const string LiteralSecondaryPulmonaryLobule = "112054";

    /// <summary>
    /// Literal for code: AgatstonScoringMethod
    /// </summary>
    public const string LiteralAgatstonScoringMethod = "112055";

    /// <summary>
    /// Literal for code: VolumeScoringMethod
    /// </summary>
    public const string LiteralVolumeScoringMethod = "112056";

    /// <summary>
    /// Literal for code: MassScoringMethod
    /// </summary>
    public const string LiteralMassScoringMethod = "112057";

    /// <summary>
    /// Literal for code: CalciumScore
    /// </summary>
    public const string LiteralCalciumScore = "112058";

    /// <summary>
    /// Literal for code: PrimaryComplex
    /// </summary>
    public const string LiteralPrimaryComplex = "112059";

    /// <summary>
    /// Literal for code: Oligemia
    /// </summary>
    public const string LiteralOligemia = "112060";

    /// <summary>
    /// Literal for code: AbnormalLines1D
    /// </summary>
    public const string LiteralAbnormalLines1D = "112061";

    /// <summary>
    /// Literal for code: AbnormalLucency
    /// </summary>
    public const string LiteralAbnormalLucency = "112062";

    /// <summary>
    /// Literal for code: AbnormalCalcifications
    /// </summary>
    public const string LiteralAbnormalCalcifications = "112063";

    /// <summary>
    /// Literal for code: AbnormalTexture
    /// </summary>
    public const string LiteralAbnormalTexture = "112064";

    /// <summary>
    /// Literal for code: ReticulonodularPattern
    /// </summary>
    public const string LiteralReticulonodularPattern = "112065";

    /// <summary>
    /// Literal for code: BeadedSeptumSign
    /// </summary>
    public const string LiteralBeadedSeptumSign = "112066";

    /// <summary>
    /// Literal for code: NodularPattern
    /// </summary>
    public const string LiteralNodularPattern = "112067";

    /// <summary>
    /// Literal for code: Pseudoplaque
    /// </summary>
    public const string LiteralPseudoplaque = "112068";

    /// <summary>
    /// Literal for code: SignetRingSign
    /// </summary>
    public const string LiteralSignetRingSign = "112069";

    /// <summary>
    /// Literal for code: AirBronchiologram
    /// </summary>
    public const string LiteralAirBronchiologram = "112070";

    /// <summary>
    /// Literal for code: AirBronchogram
    /// </summary>
    public const string LiteralAirBronchogram = "112071";

    /// <summary>
    /// Literal for code: AirCrescent
    /// </summary>
    public const string LiteralAirCrescent = "112072";

    /// <summary>
    /// Literal for code: HaloSign
    /// </summary>
    public const string LiteralHaloSign = "112073";

    /// <summary>
    /// Literal for code: TargetLesionAtBaseline
    /// </summary>
    public const string LiteralTargetLesionAtBaseline = "112074";

    /// <summary>
    /// Literal for code: NonTargetLesionAtBaseline
    /// </summary>
    public const string LiteralNonTargetLesionAtBaseline = "112075";

    /// <summary>
    /// Literal for code: NonLesionAtBaseline
    /// </summary>
    public const string LiteralNonLesionAtBaseline = "112076";

    /// <summary>
    /// Literal for code: Vasoconstriction
    /// </summary>
    public const string LiteralVasoconstriction = "112077";

    /// <summary>
    /// Literal for code: Vasodilation
    /// </summary>
    public const string LiteralVasodilation = "112078";

    /// <summary>
    /// Literal for code: ArchitecturalDistortion
    /// </summary>
    public const string LiteralArchitecturalDistortion = "112079";

    /// <summary>
    /// Literal for code: MosaicPerfusion
    /// </summary>
    public const string LiteralMosaicPerfusion = "112080";

    /// <summary>
    /// Literal for code: Pleonemia
    /// </summary>
    public const string LiteralPleonemia = "112081";

    /// <summary>
    /// Literal for code: Interface
    /// </summary>
    public const string LiteralInterface = "112082";

    /// <summary>
    /// Literal for code: Line
    /// </summary>
    public const string LiteralLine = "112083";

    /// <summary>
    /// Literal for code: Lucency
    /// </summary>
    public const string LiteralLucency = "112084";

    /// <summary>
    /// Literal for code: MidlungWindow
    /// </summary>
    public const string LiteralMidlungWindow = "112085";

    /// <summary>
    /// Literal for code: CarinaAngle
    /// </summary>
    public const string LiteralCarinaAngle = "112086";

    /// <summary>
    /// Literal for code: CentrilobularStructures
    /// </summary>
    public const string LiteralCentrilobularStructures = "112087";

    /// <summary>
    /// Literal for code: AnteriorJunctionLine
    /// </summary>
    public const string LiteralAnteriorJunctionLine = "112088";

    /// <summary>
    /// Literal for code: PosteriorJunctionLine
    /// </summary>
    public const string LiteralPosteriorJunctionLine = "112089";

    /// <summary>
    /// Literal for code: AzygoesophagealRecessInterface
    /// </summary>
    public const string LiteralAzygoesophagealRecessInterface = "112090";

    /// <summary>
    /// Literal for code: ParaspinalLine
    /// </summary>
    public const string LiteralParaspinalLine = "112091";

    /// <summary>
    /// Literal for code: PosteriorTrachealStripe
    /// </summary>
    public const string LiteralPosteriorTrachealStripe = "112092";

    /// <summary>
    /// Literal for code: RightTrachealStripe
    /// </summary>
    public const string LiteralRightTrachealStripe = "112093";

    /// <summary>
    /// Literal for code: Stripe
    /// </summary>
    public const string LiteralStripe = "112094";

    /// <summary>
    /// Literal for code: Hiatus
    /// </summary>
    public const string LiteralHiatus = "112095";

    /// <summary>
    /// Literal for code: RibScaleneTubercle
    /// </summary>
    public const string LiteralRibScaleneTubercle = "112096";

    /// <summary>
    /// Literal for code: VertebralIntervertebralNotch
    /// </summary>
    public const string LiteralVertebralIntervertebralNotch = "112097";

    /// <summary>
    /// Literal for code: SubscapularFossa
    /// </summary>
    public const string LiteralSubscapularFossa = "112098";

    /// <summary>
    /// Literal for code: ScapularSpine
    /// </summary>
    public const string LiteralScapularSpine = "112099";

    /// <summary>
    /// Literal for code: ScapularSupraspinatusFossa
    /// </summary>
    public const string LiteralScapularSupraspinatusFossa = "112100";

    /// <summary>
    /// Literal for code: ScapularInfraspinatusFossa
    /// </summary>
    public const string LiteralScapularInfraspinatusFossa = "112101";

    /// <summary>
    /// Literal for code: AorticKnob
    /// </summary>
    public const string LiteralAorticKnob = "112102";

    /// <summary>
    /// Literal for code: ArchOfTheAzygosVein
    /// </summary>
    public const string LiteralArchOfTheAzygosVein = "112103";

    /// <summary>
    /// Literal for code: AirFluidLevel
    /// </summary>
    public const string LiteralAirFluidLevel = "112104";

    /// <summary>
    /// Literal for code: CoronaRadiata
    /// </summary>
    public const string LiteralCoronaRadiata = "112105";

    /// <summary>
    /// Literal for code: HoneycombPattern
    /// </summary>
    public const string LiteralHoneycombPattern = "112106";

    /// <summary>
    /// Literal for code: FleischnerQuoteSLineS
    /// </summary>
    public const string LiteralFleischnerQuoteSLineS = "112107";

    /// <summary>
    /// Literal for code: IntralobularLines
    /// </summary>
    public const string LiteralIntralobularLines = "112108";

    /// <summary>
    /// Literal for code: KerleyALine
    /// </summary>
    public const string LiteralKerleyALine = "112109";

    /// <summary>
    /// Literal for code: KerleyBLine
    /// </summary>
    public const string LiteralKerleyBLine = "112110";

    /// <summary>
    /// Literal for code: KerleyCLines
    /// </summary>
    public const string LiteralKerleyCLines = "112111";

    /// <summary>
    /// Literal for code: ParenchymalBand
    /// </summary>
    public const string LiteralParenchymalBand = "112112";

    /// <summary>
    /// Literal for code: ReticularPattern
    /// </summary>
    public const string LiteralReticularPattern = "112113";

    /// <summary>
    /// Literal for code: SeptalLineS
    /// </summary>
    public const string LiteralSeptalLineS = "112114";

    /// <summary>
    /// Literal for code: SubpleuralLine
    /// </summary>
    public const string LiteralSubpleuralLine = "112115";

    /// <summary>
    /// Literal for code: TramlineShadow
    /// </summary>
    public const string LiteralTramlineShadow = "112116";

    /// <summary>
    /// Literal for code: TubularShadow
    /// </summary>
    public const string LiteralTubularShadow = "112117";

    /// <summary>
    /// Literal for code: Density
    /// </summary>
    public const string LiteralDensity = "112118";

    /// <summary>
    /// Literal for code: DependentOpacity
    /// </summary>
    public const string LiteralDependentOpacity = "112119";

    /// <summary>
    /// Literal for code: GroundGlassOpacity
    /// </summary>
    public const string LiteralGroundGlassOpacity = "112120";

    /// <summary>
    /// Literal for code: Infiltrate
    /// </summary>
    public const string LiteralInfiltrate = "112121";

    /// <summary>
    /// Literal for code: Micronodule
    /// </summary>
    public const string LiteralMicronodule = "112122";

    /// <summary>
    /// Literal for code: PhantomTumorPseudotumor
    /// </summary>
    public const string LiteralPhantomTumorPseudotumor = "112123";

    /// <summary>
    /// Literal for code: Shadow
    /// </summary>
    public const string LiteralShadow = "112124";

    /// <summary>
    /// Literal for code: SmallIrregularOpacities
    /// </summary>
    public const string LiteralSmallIrregularOpacities = "112125";

    /// <summary>
    /// Literal for code: SmallRoundedOpacities
    /// </summary>
    public const string LiteralSmallRoundedOpacities = "112126";

    /// <summary>
    /// Literal for code: TreeInBudSign
    /// </summary>
    public const string LiteralTreeInBudSign = "112127";

    /// <summary>
    /// Literal for code: GranularPattern
    /// </summary>
    public const string LiteralGranularPattern = "112128";

    /// <summary>
    /// Literal for code: MiliaryPattern
    /// </summary>
    public const string LiteralMiliaryPattern = "112129";

    /// <summary>
    /// Literal for code: MosaicPattern
    /// </summary>
    public const string LiteralMosaicPattern = "112130";

    /// <summary>
    /// Literal for code: ExtremelySmall
    /// </summary>
    public const string LiteralExtremelySmall = "112131";

    /// <summary>
    /// Literal for code: VerySmall
    /// </summary>
    public const string LiteralVerySmall = "112132";

    /// <summary>
    /// Literal for code: TooSmall
    /// </summary>
    public const string LiteralTooSmall = "112133";

    /// <summary>
    /// Literal for code: Elliptic
    /// </summary>
    public const string LiteralElliptic = "112134";

    /// <summary>
    /// Literal for code: Lobulated
    /// </summary>
    public const string LiteralLobulated = "112135";

    /// <summary>
    /// Literal for code: Spiculated
    /// </summary>
    public const string LiteralSpiculated = "112136";

    /// <summary>
    /// Literal for code: SharplyDefined
    /// </summary>
    public const string LiteralSharplyDefined = "112137";

    /// <summary>
    /// Literal for code: DistinctlyDefined
    /// </summary>
    public const string LiteralDistinctlyDefined = "112138";

    /// <summary>
    /// Literal for code: WellDemarcated
    /// </summary>
    public const string LiteralWellDemarcated = "112139";

    /// <summary>
    /// Literal for code: SharplyDemarcated
    /// </summary>
    public const string LiteralSharplyDemarcated = "112140";

    /// <summary>
    /// Literal for code: PoorlyDemarcated
    /// </summary>
    public const string LiteralPoorlyDemarcated = "112141";

    /// <summary>
    /// Literal for code: Circumscribed
    /// </summary>
    public const string LiteralCircumscribed = "112142";

    /// <summary>
    /// Literal for code: Air
    /// </summary>
    public const string LiteralAir = "112143";

    /// <summary>
    /// Literal for code: SoftTissue
    /// </summary>
    public const string LiteralSoftTissue = "112144";

    /// <summary>
    /// Literal for code: Calcium
    /// </summary>
    public const string LiteralCalcium = "112145";

    /// <summary>
    /// Literal for code: Acinar
    /// </summary>
    public const string LiteralAcinar = "112146";

    /// <summary>
    /// Literal for code: AirSpace
    /// </summary>
    public const string LiteralAirSpace = "112147";

    /// <summary>
    /// Literal for code: Fibronodular
    /// </summary>
    public const string LiteralFibronodular = "112148";

    /// <summary>
    /// Literal for code: Fluffy
    /// </summary>
    public const string LiteralFluffy = "112149";

    /// <summary>
    /// Literal for code: Linear
    /// </summary>
    public const string LiteralLinear = "112150";

    /// <summary>
    /// Literal for code: Profusion
    /// </summary>
    public const string LiteralProfusion = "112151";

    /// <summary>
    /// Literal for code: SilhouetteSign
    /// </summary>
    public const string LiteralSilhouetteSign = "112152";

    /// <summary>
    /// Literal for code: Subpleural
    /// </summary>
    public const string LiteralSubpleural = "112153";

    /// <summary>
    /// Literal for code: BatQuoteSWingDistribution
    /// </summary>
    public const string LiteralBatQuoteSWingDistribution = "112154";

    /// <summary>
    /// Literal for code: ButterflyDistribution
    /// </summary>
    public const string LiteralButterflyDistribution = "112155";

    /// <summary>
    /// Literal for code: Centrilobular
    /// </summary>
    public const string LiteralCentrilobular = "112156";

    /// <summary>
    /// Literal for code: Coalescent
    /// </summary>
    public const string LiteralCoalescent = "112157";

    /// <summary>
    /// Literal for code: Lobar
    /// </summary>
    public const string LiteralLobar = "112158";

    /// <summary>
    /// Literal for code: HyperAcute
    /// </summary>
    public const string LiteralHyperAcute = "112159";

    /// <summary>
    /// Literal for code: HomogeneousUniformOpacity
    /// </summary>
    public const string LiteralHomogeneousUniformOpacity = "112160";

    /// <summary>
    /// Literal for code: Inhomogeneous
    /// </summary>
    public const string LiteralInhomogeneous = "112161";

    /// <summary>
    /// Literal for code: Target
    /// </summary>
    public const string LiteralTarget = "112162";

    /// <summary>
    /// Literal for code: Fibrocalcific
    /// </summary>
    public const string LiteralFibrocalcific = "112163";

    /// <summary>
    /// Literal for code: Flocculent
    /// </summary>
    public const string LiteralFlocculent = "112164";

    /// <summary>
    /// Literal for code: FiducialMark
    /// </summary>
    public const string LiteralFiducialMark = "112171";

    /// <summary>
    /// Literal for code: Portacath
    /// </summary>
    public const string LiteralPortacath = "112172";

    /// <summary>
    /// Literal for code: ChestTube
    /// </summary>
    public const string LiteralChestTube = "112173";

    /// <summary>
    /// Literal for code: CentralLine
    /// </summary>
    public const string LiteralCentralLine = "112174";

    /// <summary>
    /// Literal for code: KidneyStent
    /// </summary>
    public const string LiteralKidneyStent = "112175";

    /// <summary>
    /// Literal for code: PancreaticStent
    /// </summary>
    public const string LiteralPancreaticStent = "112176";

    /// <summary>
    /// Literal for code: NippleRing
    /// </summary>
    public const string LiteralNippleRing = "112177";

    /// <summary>
    /// Literal for code: Coin
    /// </summary>
    public const string LiteralCoin = "112178";

    /// <summary>
    /// Literal for code: MinimumAttenuationCoefficient
    /// </summary>
    public const string LiteralMinimumAttenuationCoefficient = "112179";

    /// <summary>
    /// Literal for code: MaximumAttenuationCoefficient
    /// </summary>
    public const string LiteralMaximumAttenuationCoefficient = "112180";

    /// <summary>
    /// Literal for code: MeanAttenuationCoefficient
    /// </summary>
    public const string LiteralMeanAttenuationCoefficient = "112181";

    /// <summary>
    /// Literal for code: MedianAttenuationCoefficient
    /// </summary>
    public const string LiteralMedianAttenuationCoefficient = "112182";

    /// <summary>
    /// Literal for code: StandardDeviationOfAttenuationCoefficient
    /// </summary>
    public const string LiteralStandardDeviationOfAttenuationCoefficient = "112183";

    /// <summary>
    /// Literal for code: PerformanceOfPediatricAndAdultThoracicCT
    /// </summary>
    public const string LiteralPerformanceOfPediatricAndAdultThoracicCT = "112184";

    /// <summary>
    /// Literal for code: PerformanceOfCTForDetectionOfPulmonaryEmbolismInAdults
    /// </summary>
    public const string LiteralPerformanceOfCTForDetectionOfPulmonaryEmbolismInAdults = "112185";

    /// <summary>
    /// Literal for code: PerformanceOfHighResolutionCTOfTheLungsInAdults
    /// </summary>
    public const string LiteralPerformanceOfHighResolutionCTOfTheLungsInAdults = "112186";

    /// <summary>
    /// Literal for code: UnspecifiedMethodOfCalculation
    /// </summary>
    public const string LiteralUnspecifiedMethodOfCalculation = "112187";

    /// <summary>
    /// Literal for code: TwoDimensionalMethod
    /// </summary>
    public const string LiteralTwoDimensionalMethod = "112188";

    /// <summary>
    /// Literal for code: ThreeDimensionalMethod
    /// </summary>
    public const string LiteralThreeDimensionalMethod = "112189";

    /// <summary>
    /// Literal for code: BreastTissueDensity
    /// </summary>
    public const string LiteralBreastTissueDensity = "112191";

    /// <summary>
    /// Literal for code: VolumeOfParenchymalTissue
    /// </summary>
    public const string LiteralVolumeOfParenchymalTissue = "112192";

    /// <summary>
    /// Literal for code: VolumeOfBreast
    /// </summary>
    public const string LiteralVolumeOfBreast = "112193";

    /// <summary>
    /// Literal for code: MassOfParenchymalTissue
    /// </summary>
    public const string LiteralMassOfParenchymalTissue = "112194";

    /// <summary>
    /// Literal for code: MassOfBreast
    /// </summary>
    public const string LiteralMassOfBreast = "112195";

    /// <summary>
    /// Literal for code: AreaOfVascularCalcification
    /// </summary>
    public const string LiteralAreaOfVascularCalcification = "112196";

    /// <summary>
    /// Literal for code: VolumeOfVascularCalcification
    /// </summary>
    public const string LiteralVolumeOfVascularCalcification = "112197";

    /// <summary>
    /// Literal for code: PercentageOfVascularCalcification
    /// </summary>
    public const string LiteralPercentageOfVascularCalcification = "112198";

    /// <summary>
    /// Literal for code: MassOfVascularCalcification
    /// </summary>
    public const string LiteralMassOfVascularCalcification = "112199";

    /// <summary>
    /// Literal for code: AverageCalcificationDistanceInACalcificationCluster
    /// </summary>
    public const string LiteralAverageCalcificationDistanceInACalcificationCluster = "112200";

    /// <summary>
    /// Literal for code: StandardDeviationDistanceOfCalcificationsInACluster
    /// </summary>
    public const string LiteralStandardDeviationDistanceOfCalcificationsInACluster = "112201";

    /// <summary>
    /// Literal for code: ColonCADReport
    /// </summary>
    public const string LiteralColonCADReport = "112220";

    /// <summary>
    /// Literal for code: ColonOverallAssessment
    /// </summary>
    public const string LiteralColonOverallAssessment = "112222";

    /// <summary>
    /// Literal for code: ImageSetProperties
    /// </summary>
    public const string LiteralImageSetProperties = "112224";

    /// <summary>
    /// Literal for code: SliceThickness
    /// </summary>
    public const string LiteralSliceThickness = "112225";

    /// <summary>
    /// Literal for code: SpacingBetweenSlices
    /// </summary>
    public const string LiteralSpacingBetweenSlices = "112226";

    /// <summary>
    /// Literal for code: FrameOfReferenceUID
    /// </summary>
    public const string LiteralFrameOfReferenceUID = "112227";

    /// <summary>
    /// Literal for code: RecumbentPatientPositionWithRespectToGravity
    /// </summary>
    public const string LiteralRecumbentPatientPositionWithRespectToGravity = "112228";

    /// <summary>
    /// Literal for code: IdentifyingSegment
    /// </summary>
    public const string LiteralIdentifyingSegment = "112229";

    /// <summary>
    /// Literal for code: PolypStalkWidth
    /// </summary>
    public const string LiteralPolypStalkWidth = "112232";

    /// <summary>
    /// Literal for code: DistanceFromAnus
    /// </summary>
    public const string LiteralDistanceFromAnus = "112233";

    /// <summary>
    /// Literal for code: AnatomicNonColon
    /// </summary>
    public const string LiteralAnatomicNonColon = "112238";

    /// <summary>
    /// Literal for code: C0InadequateStudyAwaitingPriorComparisons
    /// </summary>
    public const string LiteralC0InadequateStudyAwaitingPriorComparisons = "112240";

    /// <summary>
    /// Literal for code: C1NormalColonOrBenignLesion
    /// </summary>
    public const string LiteralC1NormalColonOrBenignLesion = "112241";

    /// <summary>
    /// Literal for code: C2IntermediatePolypOrIndeterminateFinding
    /// </summary>
    public const string LiteralC2IntermediatePolypOrIndeterminateFinding = "112242";

    /// <summary>
    /// Literal for code: C3PolypPossiblyAdvancedAdenoma
    /// </summary>
    public const string LiteralC3PolypPossiblyAdvancedAdenoma = "112243";

    /// <summary>
    /// Literal for code: C4ColonicMassLikelyMalignant
    /// </summary>
    public const string LiteralC4ColonicMassLikelyMalignant = "112244";

    /// <summary>
    /// Literal for code: ACRGuidelinePerformanceOfAdultCTColonography
    /// </summary>
    public const string LiteralACRGuidelinePerformanceOfAdultCTColonography = "112248";

    /// <summary>
    /// Literal for code: ACRStandardCTMedicalPhysicsPerformanceMonitoring
    /// </summary>
    public const string LiteralACRStandardCTMedicalPhysicsPerformanceMonitoring = "112249";

    /// <summary>
    /// Literal for code: APPlus45
    /// </summary>
    public const string LiteralAPPlus45 = "112300";

    /// <summary>
    /// Literal for code: AP45
    /// </summary>
    public const string LiteralAP45 = "112301";

    /// <summary>
    /// Literal for code: AnatomicalAxisOfFemur
    /// </summary>
    public const string LiteralAnatomicalAxisOfFemur = "112302";

    /// <summary>
    /// Literal for code: AcetabularCenterOfRotation
    /// </summary>
    public const string LiteralAcetabularCenterOfRotation = "112303";

    /// <summary>
    /// Literal for code: FemurHeadCenterOfRotation
    /// </summary>
    public const string LiteralFemurHeadCenterOfRotation = "112304";

    /// <summary>
    /// Literal for code: AcetabularCupShell
    /// </summary>
    public const string LiteralAcetabularCupShell = "112305";

    /// <summary>
    /// Literal for code: AcetabularCupInsert
    /// </summary>
    public const string LiteralAcetabularCupInsert = "112306";

    /// <summary>
    /// Literal for code: AcetabularCupMonoblock
    /// </summary>
    public const string LiteralAcetabularCupMonoblock = "112307";

    /// <summary>
    /// Literal for code: FemoralHeadBallComponent
    /// </summary>
    public const string LiteralFemoralHeadBallComponent = "112308";

    /// <summary>
    /// Literal for code: FemoralHeadConeTaperComponent
    /// </summary>
    public const string LiteralFemoralHeadConeTaperComponent = "112309";

    /// <summary>
    /// Literal for code: FemoralStem
    /// </summary>
    public const string LiteralFemoralStem = "112310";

    /// <summary>
    /// Literal for code: FemoralStemDistalComponent
    /// </summary>
    public const string LiteralFemoralStemDistalComponent = "112311";

    /// <summary>
    /// Literal for code: FemoralStemProximalComponent
    /// </summary>
    public const string LiteralFemoralStemProximalComponent = "112312";

    /// <summary>
    /// Literal for code: FemoralStemComponent
    /// </summary>
    public const string LiteralFemoralStemComponent = "112313";

    /// <summary>
    /// Literal for code: NeckComponent
    /// </summary>
    public const string LiteralNeckComponent = "112314";

    /// <summary>
    /// Literal for code: MonoblockStem
    /// </summary>
    public const string LiteralMonoblockStem = "112315";

    /// <summary>
    /// Literal for code: ProstheticShaftAugment
    /// </summary>
    public const string LiteralProstheticShaftAugment = "112316";

    /// <summary>
    /// Literal for code: FemoralHeadResurfacingComponent
    /// </summary>
    public const string LiteralFemoralHeadResurfacingComponent = "112317";

    /// <summary>
    /// Literal for code: Pinning
    /// </summary>
    public const string LiteralPinning = "112318";

    /// <summary>
    /// Literal for code: Sewing
    /// </summary>
    public const string LiteralSewing = "112319";

    /// <summary>
    /// Literal for code: Bolting
    /// </summary>
    public const string LiteralBolting = "112320";

    /// <summary>
    /// Literal for code: Wedging
    /// </summary>
    public const string LiteralWedging = "112321";

    /// <summary>
    /// Literal for code: DistalCentralizer
    /// </summary>
    public const string LiteralDistalCentralizer = "112325";

    /// <summary>
    /// Literal for code: Generic2DPlanning
    /// </summary>
    public const string LiteralGeneric2DPlanning = "112340";

    /// <summary>
    /// Literal for code: Generic3DPlanning
    /// </summary>
    public const string LiteralGeneric3DPlanning = "112341";

    /// <summary>
    /// Literal for code: GenericPlanningForHipReplacement
    /// </summary>
    public const string LiteralGenericPlanningForHipReplacement = "112342";

    /// <summary>
    /// Literal for code: GenericPlanningForKneeReplacement
    /// </summary>
    public const string LiteralGenericPlanningForKneeReplacement = "112343";

    /// <summary>
    /// Literal for code: MllerMethodPlanningForHipReplacement
    /// </summary>
    public const string LiteralMllerMethodPlanningForHipReplacement = "112344";

    /// <summary>
    /// Literal for code: ImplantationPlan
    /// </summary>
    public const string LiteralImplantationPlan = "112345";

    /// <summary>
    /// Literal for code: SelectedImplantComponent
    /// </summary>
    public const string LiteralSelectedImplantComponent = "112346";

    /// <summary>
    /// Literal for code: ComponentID
    /// </summary>
    public const string LiteralComponentID = "112347";

    /// <summary>
    /// Literal for code: ImplantTemplate
    /// </summary>
    public const string LiteralImplantTemplate = "112348";

    /// <summary>
    /// Literal for code: ComponentConnection
    /// </summary>
    public const string LiteralComponentConnection = "112350";

    /// <summary>
    /// Literal for code: MatingFeatureSetID
    /// </summary>
    public const string LiteralMatingFeatureSetID = "112351";

    /// <summary>
    /// Literal for code: MatingFeatureID
    /// </summary>
    public const string LiteralMatingFeatureID = "112352";

    /// <summary>
    /// Literal for code: SpatialRegistration
    /// </summary>
    public const string LiteralSpatialRegistration = "112353";

    /// <summary>
    /// Literal for code: PatientImage
    /// </summary>
    public const string LiteralPatientImage = "112354";

    /// <summary>
    /// Literal for code: Assembly
    /// </summary>
    public const string LiteralAssembly = "112355";

    /// <summary>
    /// Literal for code: UserSelectedFiducial
    /// </summary>
    public const string LiteralUserSelectedFiducial = "112356";

    /// <summary>
    /// Literal for code: DerivedFiducial
    /// </summary>
    public const string LiteralDerivedFiducial = "112357";

    /// <summary>
    /// Literal for code: InformationUsedForPlanning
    /// </summary>
    public const string LiteralInformationUsedForPlanning = "112358";

    /// <summary>
    /// Literal for code: SupportingInformation
    /// </summary>
    public const string LiteralSupportingInformation = "112359";

    /// <summary>
    /// Literal for code: ImplantComponentList
    /// </summary>
    public const string LiteralImplantComponentList = "112360";

    /// <summary>
    /// Literal for code: PatientDataUsedDuringPlanning
    /// </summary>
    public const string LiteralPatientDataUsedDuringPlanning = "112361";

    /// <summary>
    /// Literal for code: DegreesOfFreedomSpecification
    /// </summary>
    public const string LiteralDegreesOfFreedomSpecification = "112362";

    /// <summary>
    /// Literal for code: DegreeOfFreedomID
    /// </summary>
    public const string LiteralDegreeOfFreedomID = "112363";

    /// <summary>
    /// Literal for code: RelatedPatientDataNotUsedDuringPlanning
    /// </summary>
    public const string LiteralRelatedPatientDataNotUsedDuringPlanning = "112364";

    /// <summary>
    /// Literal for code: RelatedImplantationReports
    /// </summary>
    public const string LiteralRelatedImplantationReports = "112365";

    /// <summary>
    /// Literal for code: ImplantAssemblyTemplate
    /// </summary>
    public const string LiteralImplantAssemblyTemplate = "112366";

    /// <summary>
    /// Literal for code: PlanningInformationForIntraoperativeUsage
    /// </summary>
    public const string LiteralPlanningInformationForIntraoperativeUsage = "112367";

    /// <summary>
    /// Literal for code: ImplantationPatientPositioning
    /// </summary>
    public const string LiteralImplantationPatientPositioning = "112368";

    /// <summary>
    /// Literal for code: FiducialIntent
    /// </summary>
    public const string LiteralFiducialIntent = "112369";

    /// <summary>
    /// Literal for code: ComponentType
    /// </summary>
    public const string LiteralComponentType = "112370";

    /// <summary>
    /// Literal for code: ManufacturerImplantTemplate
    /// </summary>
    public const string LiteralManufacturerImplantTemplate = "112371";

    /// <summary>
    /// Literal for code: DerivedPlanningImages
    /// </summary>
    public const string LiteralDerivedPlanningImages = "112372";

    /// <summary>
    /// Literal for code: OtherDerivedPlanningData
    /// </summary>
    public const string LiteralOtherDerivedPlanningData = "112373";

    /// <summary>
    /// Literal for code: ConnectedImplantationPlanComponent
    /// </summary>
    public const string LiteralConnectedImplantationPlanComponent = "112374";

    /// <summary>
    /// Literal for code: PlanningMethod
    /// </summary>
    public const string LiteralPlanningMethod = "112375";

    /// <summary>
    /// Literal for code: DegreeOfFreedomExactTranslationalValue
    /// </summary>
    public const string LiteralDegreeOfFreedomExactTranslationalValue = "112376";

    /// <summary>
    /// Literal for code: DegreeOfFreedomMinimumTranslationalValue
    /// </summary>
    public const string LiteralDegreeOfFreedomMinimumTranslationalValue = "112377";

    /// <summary>
    /// Literal for code: DegreeOfFreedomMaximumTranslationalValue
    /// </summary>
    public const string LiteralDegreeOfFreedomMaximumTranslationalValue = "112378";

    /// <summary>
    /// Literal for code: DegreeOfFreedomExactRotationalTranslationValue
    /// </summary>
    public const string LiteralDegreeOfFreedomExactRotationalTranslationValue = "112379";

    /// <summary>
    /// Literal for code: DegreeOfFreedomMinimumRotationalValue
    /// </summary>
    public const string LiteralDegreeOfFreedomMinimumRotationalValue = "112380";

    /// <summary>
    /// Literal for code: DegreeOfFreedomMaximumRotationalValue
    /// </summary>
    public const string LiteralDegreeOfFreedomMaximumRotationalValue = "112381";

    /// <summary>
    /// Literal for code: PeriOperativePhotographicImaging
    /// </summary>
    public const string LiteralPeriOperativePhotographicImaging = "112700";

    /// <summary>
    /// Literal for code: GrossSpecimenImaging
    /// </summary>
    public const string LiteralGrossSpecimenImaging = "112701";

    /// <summary>
    /// Literal for code: SlideMicroscopy
    /// </summary>
    public const string LiteralSlideMicroscopy = "112702";

    /// <summary>
    /// Literal for code: WholeSlideImaging
    /// </summary>
    public const string LiteralWholeSlideImaging = "112703";

    /// <summary>
    /// Literal for code: WSI20XRGB
    /// </summary>
    public const string LiteralWSI20XRGB = "112704";

    /// <summary>
    /// Literal for code: WSI40XRGB
    /// </summary>
    public const string LiteralWSI40XRGB = "112705";

    /// <summary>
    /// Literal for code: IlluminationMethod
    /// </summary>
    public const string LiteralIlluminationMethod = "112706";

    /// <summary>
    /// Literal for code: NumberOfFocalPlanes
    /// </summary>
    public const string LiteralNumberOfFocalPlanes = "112707";

    /// <summary>
    /// Literal for code: FocalPlaneZOffset
    /// </summary>
    public const string LiteralFocalPlaneZOffset = "112708";

    /// <summary>
    /// Literal for code: MagnificationSelection
    /// </summary>
    public const string LiteralMagnificationSelection = "112709";

    /// <summary>
    /// Literal for code: IlluminationWavelength
    /// </summary>
    public const string LiteralIlluminationWavelength = "112710";

    /// <summary>
    /// Literal for code: IlluminationSpectralBand
    /// </summary>
    public const string LiteralIlluminationSpectralBand = "112711";

    /// <summary>
    /// Literal for code: OpticalFilterType
    /// </summary>
    public const string LiteralOpticalFilterType = "112712";

    /// <summary>
    /// Literal for code: TissueSelectionMethod
    /// </summary>
    public const string LiteralTissueSelectionMethod = "112713";

    /// <summary>
    /// Literal for code: MultiplePlanes
    /// </summary>
    public const string LiteralMultiplePlanes = "112714";

    /// <summary>
    /// Literal for code: VAL5X
    /// </summary>
    public const string LiteralVAL5X = "112715";

    /// <summary>
    /// Literal for code: VAL10X
    /// </summary>
    public const string LiteralVAL10X = "112716";

    /// <summary>
    /// Literal for code: VAL20X
    /// </summary>
    public const string LiteralVAL20X = "112717";

    /// <summary>
    /// Literal for code: VAL40X
    /// </summary>
    public const string LiteralVAL40X = "112718";

    /// <summary>
    /// Literal for code: NominalEmptyTileSuppression
    /// </summary>
    public const string LiteralNominalEmptyTileSuppression = "112719";

    /// <summary>
    /// Literal for code: HighThresholdEmptyTileSuppression
    /// </summary>
    public const string LiteralHighThresholdEmptyTileSuppression = "112720";

    /// <summary>
    /// Literal for code: NoEmptyTileSuppression
    /// </summary>
    public const string LiteralNoEmptyTileSuppression = "112721";

    /// <summary>
    /// Literal for code: OfInterest
    /// </summary>
    public const string LiteralOfInterest = "113000";

    /// <summary>
    /// Literal for code: RejectedForQualityReasons
    /// </summary>
    public const string LiteralRejectedForQualityReasons = "113001";

    /// <summary>
    /// Literal for code: ForReferringProvider
    /// </summary>
    public const string LiteralForReferringProvider = "113002";

    /// <summary>
    /// Literal for code: ForSurgery
    /// </summary>
    public const string LiteralForSurgery = "113003";

    /// <summary>
    /// Literal for code: ForTeaching
    /// </summary>
    public const string LiteralForTeaching = "113004";

    /// <summary>
    /// Literal for code: ForConference
    /// </summary>
    public const string LiteralForConference = "113005";

    /// <summary>
    /// Literal for code: ForTherapy
    /// </summary>
    public const string LiteralForTherapy = "113006";

    /// <summary>
    /// Literal for code: ForPatient
    /// </summary>
    public const string LiteralForPatient = "113007";

    /// <summary>
    /// Literal for code: ForPeerReview
    /// </summary>
    public const string LiteralForPeerReview = "113008";

    /// <summary>
    /// Literal for code: ForResearch
    /// </summary>
    public const string LiteralForResearch = "113009";

    /// <summary>
    /// Literal for code: QualityIssue
    /// </summary>
    public const string LiteralQualityIssue = "113010";

    /// <summary>
    /// Literal for code: DocumentTitleModifier
    /// </summary>
    public const string LiteralDocumentTitleModifier = "113011";

    /// <summary>
    /// Literal for code: KeyObjectDescription
    /// </summary>
    public const string LiteralKeyObjectDescription = "113012";

    /// <summary>
    /// Literal for code: BestInSet
    /// </summary>
    public const string LiteralBestInSet = "113013";

    /// <summary>
    /// Literal for code: Study
    /// </summary>
    public const string LiteralStudy = "113014";

    /// <summary>
    /// Literal for code: Series
    /// </summary>
    public const string LiteralSeries = "113015";

    /// <summary>
    /// Literal for code: PerformedProcedureStep
    /// </summary>
    public const string LiteralPerformedProcedureStep = "113016";

    /// <summary>
    /// Literal for code: StageView
    /// </summary>
    public const string LiteralStageView = "113017";

    /// <summary>
    /// Literal for code: ForPrinting
    /// </summary>
    public const string LiteralForPrinting = "113018";

    /// <summary>
    /// Literal for code: ForReportAttachment
    /// </summary>
    public const string LiteralForReportAttachment = "113020";

    /// <summary>
    /// Literal for code: ForLitigation
    /// </summary>
    public const string LiteralForLitigation = "113021";

    /// <summary>
    /// Literal for code: DoubleExposure
    /// </summary>
    public const string LiteralDoubleExposure = "113026";

    /// <summary>
    /// Literal for code: Manifest
    /// </summary>
    public const string LiteralManifest = "113030";

    /// <summary>
    /// Literal for code: SignedManifest
    /// </summary>
    public const string LiteralSignedManifest = "113031";

    /// <summary>
    /// Literal for code: CompleteStudyContent
    /// </summary>
    public const string LiteralCompleteStudyContent = "113032";

    /// <summary>
    /// Literal for code: SignedCompleteStudyContent
    /// </summary>
    public const string LiteralSignedCompleteStudyContent = "113033";

    /// <summary>
    /// Literal for code: CompleteAcquisitionContent
    /// </summary>
    public const string LiteralCompleteAcquisitionContent = "113034";

    /// <summary>
    /// Literal for code: SignedCompleteAcquisitionContent
    /// </summary>
    public const string LiteralSignedCompleteAcquisitionContent = "113035";

    /// <summary>
    /// Literal for code: GroupOfFramesForDisplay
    /// </summary>
    public const string LiteralGroupOfFramesForDisplay = "113036";

    /// <summary>
    /// Literal for code: RejectedForPatientSafetyReasons
    /// </summary>
    public const string LiteralRejectedForPatientSafetyReasons = "113037";

    /// <summary>
    /// Literal for code: IncorrectModalityWorklistEntry
    /// </summary>
    public const string LiteralIncorrectModalityWorklistEntry = "113038";

    /// <summary>
    /// Literal for code: DataRetentionPolicyExpired
    /// </summary>
    public const string LiteralDataRetentionPolicyExpired = "113039";

    /// <summary>
    /// Literal for code: LossyCompression
    /// </summary>
    public const string LiteralLossyCompression = "113040";

    /// <summary>
    /// Literal for code: ApparentDiffusionCoefficient
    /// </summary>
    public const string LiteralApparentDiffusionCoefficient = "113041";

    /// <summary>
    /// Literal for code: PixelByPixelAddition
    /// </summary>
    public const string LiteralPixelByPixelAddition = "113042";

    /// <summary>
    /// Literal for code: DiffusionWeighted
    /// </summary>
    public const string LiteralDiffusionWeighted = "113043";

    /// <summary>
    /// Literal for code: DiffusionAnisotropy
    /// </summary>
    public const string LiteralDiffusionAnisotropy = "113044";

    /// <summary>
    /// Literal for code: DiffusionAttenuated
    /// </summary>
    public const string LiteralDiffusionAttenuated = "113045";

    /// <summary>
    /// Literal for code: PixelByPixelDivision
    /// </summary>
    public const string LiteralPixelByPixelDivision = "113046";

    /// <summary>
    /// Literal for code: PixelByPixelMask
    /// </summary>
    public const string LiteralPixelByPixelMask = "113047";

    /// <summary>
    /// Literal for code: PixelByPixelMaximum
    /// </summary>
    public const string LiteralPixelByPixelMaximum = "113048";

    /// <summary>
    /// Literal for code: PixelByPixelMean
    /// </summary>
    public const string LiteralPixelByPixelMean = "113049";

    /// <summary>
    /// Literal for code: MetaboliteMapsFromSpectroscopyData
    /// </summary>
    public const string LiteralMetaboliteMapsFromSpectroscopyData = "113050";

    /// <summary>
    /// Literal for code: PixelByPixelMinimum
    /// </summary>
    public const string LiteralPixelByPixelMinimum = "113051";

    /// <summary>
    /// Literal for code: MeanTransitTime
    /// </summary>
    public const string LiteralMeanTransitTime = "113052";

    /// <summary>
    /// Literal for code: PixelByPixelMultiplication
    /// </summary>
    public const string LiteralPixelByPixelMultiplication = "113053";

    /// <summary>
    /// Literal for code: NegativeEnhancementIntegral
    /// </summary>
    public const string LiteralNegativeEnhancementIntegral = "113054";

    /// <summary>
    /// Literal for code: RegionalCerebralBloodFlow
    /// </summary>
    public const string LiteralRegionalCerebralBloodFlow = "113055";

    /// <summary>
    /// Literal for code: RegionalCerebralBloodVolume
    /// </summary>
    public const string LiteralRegionalCerebralBloodVolume = "113056";

    /// <summary>
    /// Literal for code: RCoefficient
    /// </summary>
    public const string LiteralRCoefficient = "113057";

    /// <summary>
    /// Literal for code: ProtonDensity
    /// </summary>
    public const string LiteralProtonDensity = "113058";

    /// <summary>
    /// Literal for code: SignalChange
    /// </summary>
    public const string LiteralSignalChange = "113059";

    /// <summary>
    /// Literal for code: SignalToNoise
    /// </summary>
    public const string LiteralSignalToNoise = "113060";

    /// <summary>
    /// Literal for code: StandardDeviation
    /// </summary>
    public const string LiteralStandardDeviation = "113061";

    /// <summary>
    /// Literal for code: PixelByPixelSubtraction
    /// </summary>
    public const string LiteralPixelByPixelSubtraction = "113062";

    /// <summary>
    /// Literal for code: T1
    /// </summary>
    public const string LiteralT1 = "113063";

    /// <summary>
    /// Literal for code: T2Asterisk
    /// </summary>
    public const string LiteralT2Asterisk = "113064";

    /// <summary>
    /// Literal for code: T2
    /// </summary>
    public const string LiteralT2 = "113065";

    /// <summary>
    /// Literal for code: TimeCourseOfSignal
    /// </summary>
    public const string LiteralTimeCourseOfSignal = "113066";

    /// <summary>
    /// Literal for code: TemperatureEncoded
    /// </summary>
    public const string LiteralTemperatureEncoded = "113067";

    /// <summary>
    /// Literal for code: StudentQuoteSTTest
    /// </summary>
    public const string LiteralStudentQuoteSTTest = "113068";

    /// <summary>
    /// Literal for code: TimeToPeak
    /// </summary>
    public const string LiteralTimeToPeak = "113069";

    /// <summary>
    /// Literal for code: VelocityEncoded
    /// </summary>
    public const string LiteralVelocityEncoded = "113070";

    /// <summary>
    /// Literal for code: ZScore
    /// </summary>
    public const string LiteralZScore = "113071";

    /// <summary>
    /// Literal for code: MultiplanarReformatting
    /// </summary>
    public const string LiteralMultiplanarReformatting = "113072";

    /// <summary>
    /// Literal for code: CurvedMultiplanarReformatting
    /// </summary>
    public const string LiteralCurvedMultiplanarReformatting = "113073";

    /// <summary>
    /// Literal for code: VolumeRendering
    /// </summary>
    public const string LiteralVolumeRendering = "113074";

    /// <summary>
    /// Literal for code: SurfaceRendering
    /// </summary>
    public const string LiteralSurfaceRendering = "113075";

    /// <summary>
    /// Literal for code: Segmentation
    /// </summary>
    public const string LiteralSegmentation = "113076";

    /// <summary>
    /// Literal for code: VolumeEditing
    /// </summary>
    public const string LiteralVolumeEditing = "113077";

    /// <summary>
    /// Literal for code: MaximumIntensityProjection
    /// </summary>
    public const string LiteralMaximumIntensityProjection = "113078";

    /// <summary>
    /// Literal for code: MinimumIntensityProjection
    /// </summary>
    public const string LiteralMinimumIntensityProjection = "113079";

    /// <summary>
    /// Literal for code: GlutamateAndGlutamine
    /// </summary>
    public const string LiteralGlutamateAndGlutamine = "113080";

    /// <summary>
    /// Literal for code: CholineCreatineRatio
    /// </summary>
    public const string LiteralCholineCreatineRatio = "113081";

    /// <summary>
    /// Literal for code: NAcetylaspartateCreatineRatio
    /// </summary>
    public const string LiteralNAcetylaspartateCreatineRatio = "113082";

    /// <summary>
    /// Literal for code: NAcetylaspartateCholineRatio
    /// </summary>
    public const string LiteralNAcetylaspartateCholineRatio = "113083";

    /// <summary>
    /// Literal for code: SpatialResampling
    /// </summary>
    public const string LiteralSpatialResampling = "113085";

    /// <summary>
    /// Literal for code: EdgeEnhancement
    /// </summary>
    public const string LiteralEdgeEnhancement = "113086";

    /// <summary>
    /// Literal for code: Smoothing
    /// </summary>
    public const string LiteralSmoothing = "113087";

    /// <summary>
    /// Literal for code: GaussianBlur
    /// </summary>
    public const string LiteralGaussianBlur = "113088";

    /// <summary>
    /// Literal for code: UnsharpMask
    /// </summary>
    public const string LiteralUnsharpMask = "113089";

    /// <summary>
    /// Literal for code: ImageStitching
    /// </summary>
    public const string LiteralImageStitching = "113090";

    /// <summary>
    /// Literal for code: SpatiallyRelatedFramesExtractedFromTheVolume
    /// </summary>
    public const string LiteralSpatiallyRelatedFramesExtractedFromTheVolume = "113091";

    /// <summary>
    /// Literal for code: TemporallyRelatedFramesExtractedFromTheSetOfVolumes
    /// </summary>
    public const string LiteralTemporallyRelatedFramesExtractedFromTheSetOfVolumes = "113092";

    /// <summary>
    /// Literal for code: PolarToRectangularScanConversion
    /// </summary>
    public const string LiteralPolarToRectangularScanConversion = "113093";

    /// <summary>
    /// Literal for code: CreatineAndCholine
    /// </summary>
    public const string LiteralCreatineAndCholine = "113094";

    /// <summary>
    /// Literal for code: LipidAndLactate
    /// </summary>
    public const string LiteralLipidAndLactate = "113095";

    /// <summary>
    /// Literal for code: CreatinePlusCholineCitrateRatio
    /// </summary>
    public const string LiteralCreatinePlusCholineCitrateRatio = "113096";

    /// <summary>
    /// Literal for code: MultiEnergyProportionalWeighting
    /// </summary>
    public const string LiteralMultiEnergyProportionalWeighting = "113097";

    /// <summary>
    /// Literal for code: BasicApplicationConfidentialityProfile
    /// </summary>
    public const string LiteralBasicApplicationConfidentialityProfile = "113100";

    /// <summary>
    /// Literal for code: CleanPixelDataOption
    /// </summary>
    public const string LiteralCleanPixelDataOption = "113101";

    /// <summary>
    /// Literal for code: CleanRecognizableVisualFeaturesOption
    /// </summary>
    public const string LiteralCleanRecognizableVisualFeaturesOption = "113102";

    /// <summary>
    /// Literal for code: CleanGraphicsOption
    /// </summary>
    public const string LiteralCleanGraphicsOption = "113103";

    /// <summary>
    /// Literal for code: CleanStructuredContentOption
    /// </summary>
    public const string LiteralCleanStructuredContentOption = "113104";

    /// <summary>
    /// Literal for code: CleanDescriptorsOption
    /// </summary>
    public const string LiteralCleanDescriptorsOption = "113105";

    /// <summary>
    /// Literal for code: RetainLongitudinalTemporalInformationFullDatesOption
    /// </summary>
    public const string LiteralRetainLongitudinalTemporalInformationFullDatesOption = "113106";

    /// <summary>
    /// Literal for code: RetainLongitudinalTemporalInformationModifiedDatesOption
    /// </summary>
    public const string LiteralRetainLongitudinalTemporalInformationModifiedDatesOption = "113107";

    /// <summary>
    /// Literal for code: RetainPatientCharacteristicsOption
    /// </summary>
    public const string LiteralRetainPatientCharacteristicsOption = "113108";

    /// <summary>
    /// Literal for code: RetainDeviceIdentityOption
    /// </summary>
    public const string LiteralRetainDeviceIdentityOption = "113109";

    /// <summary>
    /// Literal for code: RetainUIDsOption
    /// </summary>
    public const string LiteralRetainUIDsOption = "113110";

    /// <summary>
    /// Literal for code: RetainSafePrivateOption
    /// </summary>
    public const string LiteralRetainSafePrivateOption = "113111";

    /// <summary>
    /// Literal for code: RadiopharmaceuticalRadiationDoseReport
    /// </summary>
    public const string LiteralRadiopharmaceuticalRadiationDoseReport = "113500";

    /// <summary>
    /// Literal for code: RadiopharmaceuticalAdministration
    /// </summary>
    public const string LiteralRadiopharmaceuticalAdministration = "113502";

    /// <summary>
    /// Literal for code: RadiopharmaceuticalAdministrationEventUID
    /// </summary>
    public const string LiteralRadiopharmaceuticalAdministrationEventUID = "113503";

    /// <summary>
    /// Literal for code: IntravenousExtravasationSymptoms
    /// </summary>
    public const string LiteralIntravenousExtravasationSymptoms = "113505";

    /// <summary>
    /// Literal for code: EstimatedExtravasationActivity
    /// </summary>
    public const string LiteralEstimatedExtravasationActivity = "113506";

    /// <summary>
    /// Literal for code: AdministeredActivity
    /// </summary>
    public const string LiteralAdministeredActivity = "113507";

    /// <summary>
    /// Literal for code: PreAdministrationMeasuredActivity
    /// </summary>
    public const string LiteralPreAdministrationMeasuredActivity = "113508";

    /// <summary>
    /// Literal for code: PostAdministrationMeasuredActivity
    /// </summary>
    public const string LiteralPostAdministrationMeasuredActivity = "113509";

    /// <summary>
    /// Literal for code: DrugProductIdentifier
    /// </summary>
    public const string LiteralDrugProductIdentifier = "113510";

    /// <summary>
    /// Literal for code: RadiopharmaceuticalDispenseUnitIdentifier
    /// </summary>
    public const string LiteralRadiopharmaceuticalDispenseUnitIdentifier = "113511";

    /// <summary>
    /// Literal for code: RadiopharmaceuticalLotIdentifier
    /// </summary>
    public const string LiteralRadiopharmaceuticalLotIdentifier = "113512";

    /// <summary>
    /// Literal for code: ReagentVialIdentifier
    /// </summary>
    public const string LiteralReagentVialIdentifier = "113513";

    /// <summary>
    /// Literal for code: RadionuclideVialIdentifier
    /// </summary>
    public const string LiteralRadionuclideVialIdentifier = "113514";

    /// <summary>
    /// Literal for code: PrescriptionIdentifier
    /// </summary>
    public const string LiteralPrescriptionIdentifier = "113516";

    /// <summary>
    /// Literal for code: OrganDoseInformation
    /// </summary>
    public const string LiteralOrganDoseInformation = "113517";

    /// <summary>
    /// Literal for code: OrganDose
    /// </summary>
    public const string LiteralOrganDose = "113518";

    /// <summary>
    /// Literal for code: MIRDPamphlet1
    /// </summary>
    public const string LiteralMIRDPamphlet1 = "113520";

    /// <summary>
    /// Literal for code: ICRPPublication53
    /// </summary>
    public const string LiteralICRPPublication53 = "113521";

    /// <summary>
    /// Literal for code: ICRPPublication80
    /// </summary>
    public const string LiteralICRPPublication80 = "113522";

    /// <summary>
    /// Literal for code: ICRPPublication106
    /// </summary>
    public const string LiteralICRPPublication106 = "113523";

    /// <summary>
    /// Literal for code: MIRDOSE
    /// </summary>
    public const string LiteralMIRDOSE = "113526";

    /// <summary>
    /// Literal for code: OLINDAEXM
    /// </summary>
    public const string LiteralOLINDAEXM = "113527";

    /// <summary>
    /// Literal for code: PackageInsert
    /// </summary>
    public const string LiteralPackageInsert = "113528";

    /// <summary>
    /// Literal for code: InstitutionallyApprovedEstimates
    /// </summary>
    public const string LiteralInstitutionallyApprovedEstimates = "113529";

    /// <summary>
    /// Literal for code: InvestigationalNewDrug
    /// </summary>
    public const string LiteralInvestigationalNewDrug = "113530";

    /// <summary>
    /// Literal for code: ActivityMeasurementDevice
    /// </summary>
    public const string LiteralActivityMeasurementDevice = "113540";

    /// <summary>
    /// Literal for code: DoseCalibrator
    /// </summary>
    public const string LiteralDoseCalibrator = "113541";

    /// <summary>
    /// Literal for code: InfusionSystem
    /// </summary>
    public const string LiteralInfusionSystem = "113542";

    /// <summary>
    /// Literal for code: Generator
    /// </summary>
    public const string LiteralGenerator = "113543";

    /// <summary>
    /// Literal for code: FastingDuration
    /// </summary>
    public const string LiteralFastingDuration = "113550";

    /// <summary>
    /// Literal for code: HydrationVolume
    /// </summary>
    public const string LiteralHydrationVolume = "113551";

    /// <summary>
    /// Literal for code: RecentPhysicalActivity
    /// </summary>
    public const string LiteralRecentPhysicalActivity = "113552";

    /// <summary>
    /// Literal for code: AcuteUnilateralRenalBlockage
    /// </summary>
    public const string LiteralAcuteUnilateralRenalBlockage = "113560";

    /// <summary>
    /// Literal for code: LowThyroidUptake
    /// </summary>
    public const string LiteralLowThyroidUptake = "113561";

    /// <summary>
    /// Literal for code: HighThyroidUptake
    /// </summary>
    public const string LiteralHighThyroidUptake = "113562";

    /// <summary>
    /// Literal for code: SeverelyJaundiced
    /// </summary>
    public const string LiteralSeverelyJaundiced = "113563";

    /// <summary>
    /// Literal for code: ExtravasationVisibleInImage
    /// </summary>
    public const string LiteralExtravasationVisibleInImage = "113568";

    /// <summary>
    /// Literal for code: CockroftGaultFormulaEstimationOfGFR
    /// </summary>
    public const string LiteralCockroftGaultFormulaEstimationOfGFR = "113570";

    /// <summary>
    /// Literal for code: CKDEPIFormulaEstimationOfGFR
    /// </summary>
    public const string LiteralCKDEPIFormulaEstimationOfGFR = "113571";

    /// <summary>
    /// Literal for code: GlomerularFiltrationRateMDRD
    /// </summary>
    public const string LiteralGlomerularFiltrationRateMDRD = "113572";

    /// <summary>
    /// Literal for code: GlomerularFiltrationRateNonBlackMDRD
    /// </summary>
    public const string LiteralGlomerularFiltrationRateNonBlackMDRD = "113573";

    /// <summary>
    /// Literal for code: GlomerularFiltrationRateBlackMDRD
    /// </summary>
    public const string LiteralGlomerularFiltrationRateBlackMDRD = "113574";

    /// <summary>
    /// Literal for code: GlomerularFiltrationRateFemaleMDRD
    /// </summary>
    public const string LiteralGlomerularFiltrationRateFemaleMDRD = "113575";

    /// <summary>
    /// Literal for code: GlomerularFiltrationRateCystatinBasedFormula
    /// </summary>
    public const string LiteralGlomerularFiltrationRateCystatinBasedFormula = "113576";

    /// <summary>
    /// Literal for code: GlomerularFiltrationRateCreatinineBasedFormulaSchwartz
    /// </summary>
    public const string LiteralGlomerularFiltrationRateCreatinineBasedFormulaSchwartz = "113577";

    /// <summary>
    /// Literal for code: SmallLessThan320CmLateralThickness
    /// </summary>
    public const string LiteralSmallLessThan320CmLateralThickness = "113601";

    /// <summary>
    /// Literal for code: Medium320380CmLateralThickness
    /// </summary>
    public const string LiteralMedium320380CmLateralThickness = "113602";

    /// <summary>
    /// Literal for code: LargeGreaterThan380CmLateralThickness
    /// </summary>
    public const string LiteralLargeGreaterThan380CmLateralThickness = "113603";

    /// <summary>
    /// Literal for code: IrradiationEventLabel
    /// </summary>
    public const string LiteralIrradiationEventLabel = "113605";

    /// <summary>
    /// Literal for code: LabelType
    /// </summary>
    public const string LiteralLabelType = "113606";

    /// <summary>
    /// Literal for code: SeriesNumber
    /// </summary>
    public const string LiteralSeriesNumber = "113607";

    /// <summary>
    /// Literal for code: AcquisitionNumber
    /// </summary>
    public const string LiteralAcquisitionNumber = "113608";

    /// <summary>
    /// Literal for code: InstanceNumber
    /// </summary>
    public const string LiteralInstanceNumber = "113609";

    /// <summary>
    /// Literal for code: StationaryAcquisition
    /// </summary>
    public const string LiteralStationaryAcquisition = "113611";

    /// <summary>
    /// Literal for code: SteppingAcquisition
    /// </summary>
    public const string LiteralSteppingAcquisition = "113612";

    /// <summary>
    /// Literal for code: RotationalAcquisition
    /// </summary>
    public const string LiteralRotationalAcquisition = "113613";

    /// <summary>
    /// Literal for code: PlaneA
    /// </summary>
    public const string LiteralPlaneA = "113620";

    /// <summary>
    /// Literal for code: PlaneB
    /// </summary>
    public const string LiteralPlaneB = "113621";

    /// <summary>
    /// Literal for code: SinglePlane
    /// </summary>
    public const string LiteralSinglePlane = "113622";

    /// <summary>
    /// Literal for code: Continuous
    /// </summary>
    public const string LiteralContinuous = "113630";

    /// <summary>
    /// Literal for code: Pulsed
    /// </summary>
    public const string LiteralPulsed = "113631";

    /// <summary>
    /// Literal for code: StripFilter
    /// </summary>
    public const string LiteralStripFilter = "113650";

    /// <summary>
    /// Literal for code: WedgeFilter
    /// </summary>
    public const string LiteralWedgeFilter = "113651";

    /// <summary>
    /// Literal for code: ButterflyFilter
    /// </summary>
    public const string LiteralButterflyFilter = "113652";

    /// <summary>
    /// Literal for code: FlatFilter
    /// </summary>
    public const string LiteralFlatFilter = "113653";

    /// <summary>
    /// Literal for code: OutlineOfLobulations
    /// </summary>
    public const string LiteralOutlineOfLobulations = "113661";

    /// <summary>
    /// Literal for code: InnerLimitsOfFuzzyMargin
    /// </summary>
    public const string LiteralInnerLimitsOfFuzzyMargin = "113662";

    /// <summary>
    /// Literal for code: OuterLimitsOfFuzzyMargin
    /// </summary>
    public const string LiteralOuterLimitsOfFuzzyMargin = "113663";

    /// <summary>
    /// Literal for code: OutlineOfSpiculations
    /// </summary>
    public const string LiteralOutlineOfSpiculations = "113664";

    /// <summary>
    /// Literal for code: LinearSpiculation
    /// </summary>
    public const string LiteralLinearSpiculation = "113665";

    /// <summary>
    /// Literal for code: PixelatedSpiculations
    /// </summary>
    public const string LiteralPixelatedSpiculations = "113666";

    /// <summary>
    /// Literal for code: OrthogonalLocationArc
    /// </summary>
    public const string LiteralOrthogonalLocationArc = "113669";

    /// <summary>
    /// Literal for code: OrthogonalLocationArcInnerMargin
    /// </summary>
    public const string LiteralOrthogonalLocationArcInnerMargin = "113670";

    /// <summary>
    /// Literal for code: OrthogonalLocationArcOuterMargin
    /// </summary>
    public const string LiteralOrthogonalLocationArcOuterMargin = "113671";

    /// <summary>
    /// Literal for code: QualityControlIntent
    /// </summary>
    public const string LiteralQualityControlIntent = "113680";

    /// <summary>
    /// Literal for code: Phantom
    /// </summary>
    public const string LiteralPhantom = "113681";

    /// <summary>
    /// Literal for code: ACRAccreditationPhantomCT
    /// </summary>
    public const string LiteralACRAccreditationPhantomCT = "113682";

    /// <summary>
    /// Literal for code: ACRAccreditationPhantomMR
    /// </summary>
    public const string LiteralACRAccreditationPhantomMR = "113683";

    /// <summary>
    /// Literal for code: ACRAccreditationPhantomMammography
    /// </summary>
    public const string LiteralACRAccreditationPhantomMammography = "113684";

    /// <summary>
    /// Literal for code: ACRAccreditationPhantomStereotacticBreastBiopsy
    /// </summary>
    public const string LiteralACRAccreditationPhantomStereotacticBreastBiopsy = "113685";

    /// <summary>
    /// Literal for code: ACRAccreditationPhantomECT
    /// </summary>
    public const string LiteralACRAccreditationPhantomECT = "113686";

    /// <summary>
    /// Literal for code: ACRAccreditationPhantomPET
    /// </summary>
    public const string LiteralACRAccreditationPhantomPET = "113687";

    /// <summary>
    /// Literal for code: ACRAccreditationPhantomECTPET
    /// </summary>
    public const string LiteralACRAccreditationPhantomECTPET = "113688";

    /// <summary>
    /// Literal for code: ACRAccreditationPhantomPETFaceplate
    /// </summary>
    public const string LiteralACRAccreditationPhantomPETFaceplate = "113689";

    /// <summary>
    /// Literal for code: IECHeadDosimetryPhantom
    /// </summary>
    public const string LiteralIECHeadDosimetryPhantom = "113690";

    /// <summary>
    /// Literal for code: IECBodyDosimetryPhantom
    /// </summary>
    public const string LiteralIECBodyDosimetryPhantom = "113691";

    /// <summary>
    /// Literal for code: NEMAXR212000Phantom
    /// </summary>
    public const string LiteralNEMAXR212000Phantom = "113692";

    /// <summary>
    /// Literal for code: XRayRadiationDoseReport
    /// </summary>
    public const string LiteralXRayRadiationDoseReport = "113701";

    /// <summary>
    /// Literal for code: AccumulatedXRayDoseData
    /// </summary>
    public const string LiteralAccumulatedXRayDoseData = "113702";

    /// <summary>
    /// Literal for code: ProjectionXRay
    /// </summary>
    public const string LiteralProjectionXRay = "113704";

    /// <summary>
    /// Literal for code: ScopeOfAccumulation
    /// </summary>
    public const string LiteralScopeOfAccumulation = "113705";

    /// <summary>
    /// Literal for code: IrradiationEventXRayData
    /// </summary>
    public const string LiteralIrradiationEventXRayData = "113706";

    /// <summary>
    /// Literal for code: CalibrationProtocol
    /// </summary>
    public const string LiteralCalibrationProtocol = "113720";

    /// <summary>
    /// Literal for code: IrradiationEventType
    /// </summary>
    public const string LiteralIrradiationEventType = "113721";

    /// <summary>
    /// Literal for code: DoseAreaProductTotal
    /// </summary>
    public const string LiteralDoseAreaProductTotal = "113722";

    /// <summary>
    /// Literal for code: CalibrationDate
    /// </summary>
    public const string LiteralCalibrationDate = "113723";

    /// <summary>
    /// Literal for code: CalibrationResponsibleParty
    /// </summary>
    public const string LiteralCalibrationResponsibleParty = "113724";

    /// <summary>
    /// Literal for code: DoseRPTotal
    /// </summary>
    public const string LiteralDoseRPTotal = "113725";

    /// <summary>
    /// Literal for code: FluoroDoseAreaProductTotal
    /// </summary>
    public const string LiteralFluoroDoseAreaProductTotal = "113726";

    /// <summary>
    /// Literal for code: AcquisitionDoseAreaProductTotal
    /// </summary>
    public const string LiteralAcquisitionDoseAreaProductTotal = "113727";

    /// <summary>
    /// Literal for code: FluoroDoseRPTotal
    /// </summary>
    public const string LiteralFluoroDoseRPTotal = "113728";

    /// <summary>
    /// Literal for code: AcquisitionDoseRPTotal
    /// </summary>
    public const string LiteralAcquisitionDoseRPTotal = "113729";

    /// <summary>
    /// Literal for code: TotalFluoroTime
    /// </summary>
    public const string LiteralTotalFluoroTime = "113730";

    /// <summary>
    /// Literal for code: TotalNumberOfRadiographicFrames
    /// </summary>
    public const string LiteralTotalNumberOfRadiographicFrames = "113731";

    /// <summary>
    /// Literal for code: FluoroMode
    /// </summary>
    public const string LiteralFluoroMode = "113732";

    /// <summary>
    /// Literal for code: KVP
    /// </summary>
    public const string LiteralKVP = "113733";

    /// <summary>
    /// Literal for code: XRayTubeCurrent
    /// </summary>
    public const string LiteralXRayTubeCurrent = "113734";

    /// <summary>
    /// Literal for code: Exposure
    /// </summary>
    public const string LiteralExposure = "113736";

    /// <summary>
    /// Literal for code: DistanceSourceToReferencePoint
    /// </summary>
    public const string LiteralDistanceSourceToReferencePoint = "113737";

    /// <summary>
    /// Literal for code: DoseRP
    /// </summary>
    public const string LiteralDoseRP = "113738";

    /// <summary>
    /// Literal for code: PositionerPrimaryEndAngle
    /// </summary>
    public const string LiteralPositionerPrimaryEndAngle = "113739";

    /// <summary>
    /// Literal for code: PositionerSecondaryEndAngle
    /// </summary>
    public const string LiteralPositionerSecondaryEndAngle = "113740";

    /// <summary>
    /// Literal for code: IrradiationDuration
    /// </summary>
    public const string LiteralIrradiationDuration = "113742";

    /// <summary>
    /// Literal for code: PatientOrientation
    /// </summary>
    public const string LiteralPatientOrientation = "113743";

    /// <summary>
    /// Literal for code: PatientOrientationModifier
    /// </summary>
    public const string LiteralPatientOrientationModifier = "113744";

    /// <summary>
    /// Literal for code: PatientTableRelationship
    /// </summary>
    public const string LiteralPatientTableRelationship = "113745";

    /// <summary>
    /// Literal for code: DistanceSourceToIsocenter
    /// </summary>
    public const string LiteralDistanceSourceToIsocenter = "113748";

    /// <summary>
    /// Literal for code: DistanceSourceToDetector
    /// </summary>
    public const string LiteralDistanceSourceToDetector = "113750";

    /// <summary>
    /// Literal for code: TableLongitudinalPosition
    /// </summary>
    public const string LiteralTableLongitudinalPosition = "113751";

    /// <summary>
    /// Literal for code: TableLateralPosition
    /// </summary>
    public const string LiteralTableLateralPosition = "113752";

    /// <summary>
    /// Literal for code: TableHeightPosition
    /// </summary>
    public const string LiteralTableHeightPosition = "113753";

    /// <summary>
    /// Literal for code: TableHeadTiltAngle
    /// </summary>
    public const string LiteralTableHeadTiltAngle = "113754";

    /// <summary>
    /// Literal for code: TableHorizontalRotationAngle
    /// </summary>
    public const string LiteralTableHorizontalRotationAngle = "113755";

    /// <summary>
    /// Literal for code: TableCradleTiltAngle
    /// </summary>
    public const string LiteralTableCradleTiltAngle = "113756";

    /// <summary>
    /// Literal for code: XRayFilterMaterial
    /// </summary>
    public const string LiteralXRayFilterMaterial = "113757";

    /// <summary>
    /// Literal for code: XRayFilterThicknessMinimum
    /// </summary>
    public const string LiteralXRayFilterThicknessMinimum = "113758";

    /// <summary>
    /// Literal for code: TableLongitudinalEndPosition
    /// </summary>
    public const string LiteralTableLongitudinalEndPosition = "113759";

    /// <summary>
    /// Literal for code: TableLateralEndPosition
    /// </summary>
    public const string LiteralTableLateralEndPosition = "113760";

    /// <summary>
    /// Literal for code: TableHeightEndPosition
    /// </summary>
    public const string LiteralTableHeightEndPosition = "113761";

    /// <summary>
    /// Literal for code: CalibrationUncertainty
    /// </summary>
    public const string LiteralCalibrationUncertainty = "113763";

    /// <summary>
    /// Literal for code: AcquisitionPlane
    /// </summary>
    public const string LiteralAcquisitionPlane = "113764";

    /// <summary>
    /// Literal for code: FocalSpotSize
    /// </summary>
    public const string LiteralFocalSpotSize = "113766";

    /// <summary>
    /// Literal for code: AverageXRayTubeCurrent
    /// </summary>
    public const string LiteralAverageXRayTubeCurrent = "113767";

    /// <summary>
    /// Literal for code: NumberOfPulses
    /// </summary>
    public const string LiteralNumberOfPulses = "113768";

    /// <summary>
    /// Literal for code: IrradiationEventUID
    /// </summary>
    public const string LiteralIrradiationEventUID = "113769";

    /// <summary>
    /// Literal for code: ColumnAngulation
    /// </summary>
    public const string LiteralColumnAngulation = "113770";

    /// <summary>
    /// Literal for code: XRayFilters
    /// </summary>
    public const string LiteralXRayFilters = "113771";

    /// <summary>
    /// Literal for code: XRayFilterType
    /// </summary>
    public const string LiteralXRayFilterType = "113772";

    /// <summary>
    /// Literal for code: XRayFilterThicknessMaximum
    /// </summary>
    public const string LiteralXRayFilterThicknessMaximum = "113773";

    /// <summary>
    /// Literal for code: ReferencePointDefinition
    /// </summary>
    public const string LiteralReferencePointDefinition = "113780";

    /// <summary>
    /// Literal for code: CollimatedFieldHeight
    /// </summary>
    public const string LiteralCollimatedFieldHeight = "113788";

    /// <summary>
    /// Literal for code: CollimatedFieldWidth
    /// </summary>
    public const string LiteralCollimatedFieldWidth = "113789";

    /// <summary>
    /// Literal for code: CollimatedFieldArea
    /// </summary>
    public const string LiteralCollimatedFieldArea = "113790";

    /// <summary>
    /// Literal for code: PulseRate
    /// </summary>
    public const string LiteralPulseRate = "113791";

    /// <summary>
    /// Literal for code: DistanceSourceToTablePlane
    /// </summary>
    public const string LiteralDistanceSourceToTablePlane = "113792";

    /// <summary>
    /// Literal for code: PulseWidth
    /// </summary>
    public const string LiteralPulseWidth = "113793";

    /// <summary>
    /// Literal for code: DoseMeasurementDevice
    /// </summary>
    public const string LiteralDoseMeasurementDevice = "113794";

    /// <summary>
    /// Literal for code: AcquiredImage
    /// </summary>
    public const string LiteralAcquiredImage = "113795";

    /// <summary>
    /// Literal for code: DLPToEConversionViaMCComputation
    /// </summary>
    public const string LiteralDLPToEConversionViaMCComputation = "113800";

    /// <summary>
    /// Literal for code: CTDIfreeairToEConversionViaMCComputation
    /// </summary>
    public const string LiteralCTDIfreeairToEConversionViaMCComputation = "113801";

    /// <summary>
    /// Literal for code: DLPToEConversionViaMeasurement
    /// </summary>
    public const string LiteralDLPToEConversionViaMeasurement = "113802";

    /// <summary>
    /// Literal for code: CTDIfreeairToEConversionViaMeasurement
    /// </summary>
    public const string LiteralCTDIfreeairToEConversionViaMeasurement = "113803";

    /// <summary>
    /// Literal for code: SequencedAcquisition
    /// </summary>
    public const string LiteralSequencedAcquisition = "113804";

    /// <summary>
    /// Literal for code: ConstantAngleAcquisition
    /// </summary>
    public const string LiteralConstantAngleAcquisition = "113805";

    /// <summary>
    /// Literal for code: StationaryAcquisition_2
    /// </summary>
    public const string LiteralStationaryAcquisition_2 = "113806";

    /// <summary>
    /// Literal for code: FreeAcquisition
    /// </summary>
    public const string LiteralFreeAcquisition = "113807";

    /// <summary>
    /// Literal for code: ICRPPub60
    /// </summary>
    public const string LiteralICRPPub60 = "113808";

    /// <summary>
    /// Literal for code: StartOfXRayIrradiation
    /// </summary>
    public const string LiteralStartOfXRayIrradiation = "113809";

    /// <summary>
    /// Literal for code: EndOfXRayIrradiation
    /// </summary>
    public const string LiteralEndOfXRayIrradiation = "113810";

    /// <summary>
    /// Literal for code: CTAccumulatedDoseData
    /// </summary>
    public const string LiteralCTAccumulatedDoseData = "113811";

    /// <summary>
    /// Literal for code: TotalNumberOfIrradiationEvents
    /// </summary>
    public const string LiteralTotalNumberOfIrradiationEvents = "113812";

    /// <summary>
    /// Literal for code: CTDoseLengthProductTotal
    /// </summary>
    public const string LiteralCTDoseLengthProductTotal = "113813";

    /// <summary>
    /// Literal for code: CTEffectiveDoseTotal
    /// </summary>
    public const string LiteralCTEffectiveDoseTotal = "113814";

    /// <summary>
    /// Literal for code: PatientModel
    /// </summary>
    public const string LiteralPatientModel = "113815";

    /// <summary>
    /// Literal for code: ConditionEffectiveDoseMeasured
    /// </summary>
    public const string LiteralConditionEffectiveDoseMeasured = "113816";

    /// <summary>
    /// Literal for code: EffectiveDosePhantomType
    /// </summary>
    public const string LiteralEffectiveDosePhantomType = "113817";

    /// <summary>
    /// Literal for code: DosimeterType
    /// </summary>
    public const string LiteralDosimeterType = "113818";

    /// <summary>
    /// Literal for code: CTAcquisition
    /// </summary>
    public const string LiteralCTAcquisition = "113819";

    /// <summary>
    /// Literal for code: CTAcquisitionType
    /// </summary>
    public const string LiteralCTAcquisitionType = "113820";

    /// <summary>
    /// Literal for code: XRayFilterAluminumEquivalent
    /// </summary>
    public const string LiteralXRayFilterAluminumEquivalent = "113821";

    /// <summary>
    /// Literal for code: CTAcquisitionParameters
    /// </summary>
    public const string LiteralCTAcquisitionParameters = "113822";

    /// <summary>
    /// Literal for code: NumberOfXRaySources
    /// </summary>
    public const string LiteralNumberOfXRaySources = "113823";

    /// <summary>
    /// Literal for code: ExposureTime
    /// </summary>
    public const string LiteralExposureTime = "113824";

    /// <summary>
    /// Literal for code: ScanningLength
    /// </summary>
    public const string LiteralScanningLength = "113825";

    /// <summary>
    /// Literal for code: NominalSingleCollimationWidth
    /// </summary>
    public const string LiteralNominalSingleCollimationWidth = "113826";

    /// <summary>
    /// Literal for code: NominalTotalCollimationWidth
    /// </summary>
    public const string LiteralNominalTotalCollimationWidth = "113827";

    /// <summary>
    /// Literal for code: PitchFactor
    /// </summary>
    public const string LiteralPitchFactor = "113828";

    /// <summary>
    /// Literal for code: CTDose
    /// </summary>
    public const string LiteralCTDose = "113829";

    /// <summary>
    /// Literal for code: MeanCTDIvol
    /// </summary>
    public const string LiteralMeanCTDIvol = "113830";

    /// <summary>
    /// Literal for code: CTXRaySourceParameters
    /// </summary>
    public const string LiteralCTXRaySourceParameters = "113831";

    /// <summary>
    /// Literal for code: IdentificationOfTheXRaySource
    /// </summary>
    public const string LiteralIdentificationOfTheXRaySource = "113832";

    /// <summary>
    /// Literal for code: MaximumXRayTubeCurrent
    /// </summary>
    public const string LiteralMaximumXRayTubeCurrent = "113833";

    /// <summary>
    /// Literal for code: ExposureTimePerRotation
    /// </summary>
    public const string LiteralExposureTimePerRotation = "113834";

    /// <summary>
    /// Literal for code: CTDIwPhantomType
    /// </summary>
    public const string LiteralCTDIwPhantomType = "113835";

    /// <summary>
    /// Literal for code: CTDIfreeairCalculationFactor
    /// </summary>
    public const string LiteralCTDIfreeairCalculationFactor = "113836";

    /// <summary>
    /// Literal for code: MeanCTDIfreeair
    /// </summary>
    public const string LiteralMeanCTDIfreeair = "113837";

    /// <summary>
    /// Literal for code: DLP
    /// </summary>
    public const string LiteralDLP = "113838";

    /// <summary>
    /// Literal for code: EffectiveDose
    /// </summary>
    public const string LiteralEffectiveDose = "113839";

    /// <summary>
    /// Literal for code: EffectiveDoseConversionFactor
    /// </summary>
    public const string LiteralEffectiveDoseConversionFactor = "113840";

    /// <summary>
    /// Literal for code: ICRPPub103
    /// </summary>
    public const string LiteralICRPPub103 = "113841";

    /// <summary>
    /// Literal for code: XRayModulationType
    /// </summary>
    public const string LiteralXRayModulationType = "113842";

    /// <summary>
    /// Literal for code: ExposureIndex
    /// </summary>
    public const string LiteralExposureIndex = "113845";

    /// <summary>
    /// Literal for code: TargetExposureIndex
    /// </summary>
    public const string LiteralTargetExposureIndex = "113846";

    /// <summary>
    /// Literal for code: DeviationIndex
    /// </summary>
    public const string LiteralDeviationIndex = "113847";

    /// <summary>
    /// Literal for code: IrradiationAuthorizing
    /// </summary>
    public const string LiteralIrradiationAuthorizing = "113850";

    /// <summary>
    /// Literal for code: IrradiationAdministering
    /// </summary>
    public const string LiteralIrradiationAdministering = "113851";

    /// <summary>
    /// Literal for code: IrradiationEvent
    /// </summary>
    public const string LiteralIrradiationEvent = "113852";

    /// <summary>
    /// Literal for code: IrradiationEventUID_2
    /// </summary>
    public const string LiteralIrradiationEventUID_2 = "113853";

    /// <summary>
    /// Literal for code: SourceOfDoseInformation
    /// </summary>
    public const string LiteralSourceOfDoseInformation = "113854";

    /// <summary>
    /// Literal for code: TotalAcquisitionTime
    /// </summary>
    public const string LiteralTotalAcquisitionTime = "113855";

    /// <summary>
    /// Literal for code: AutomatedDataCollection
    /// </summary>
    public const string LiteralAutomatedDataCollection = "113856";

    /// <summary>
    /// Literal for code: ManualEntry
    /// </summary>
    public const string LiteralManualEntry = "113857";

    /// <summary>
    /// Literal for code: MPPSContent
    /// </summary>
    public const string LiteralMPPSContent = "113858";

    /// <summary>
    /// Literal for code: IrradiatingDevice
    /// </summary>
    public const string LiteralIrradiatingDevice = "113859";

    /// <summary>
    /// Literal for code: VAL15cmFromIsocenterTowardSource
    /// </summary>
    public const string LiteralVAL15cmFromIsocenterTowardSource = "113860";

    /// <summary>
    /// Literal for code: VAL30cmInFrontOfImageInputSurface
    /// </summary>
    public const string LiteralVAL30cmInFrontOfImageInputSurface = "113861";

    /// <summary>
    /// Literal for code: VAL1cmAboveTabletop
    /// </summary>
    public const string LiteralVAL1cmAboveTabletop = "113862";

    /// <summary>
    /// Literal for code: VAL30cmAboveTabletop
    /// </summary>
    public const string LiteralVAL30cmAboveTabletop = "113863";

    /// <summary>
    /// Literal for code: VAL15cmFromTableCenterline
    /// </summary>
    public const string LiteralVAL15cmFromTableCenterline = "113864";

    /// <summary>
    /// Literal for code: EntranceExposureToA42CmBreastThickness
    /// </summary>
    public const string LiteralEntranceExposureToA42CmBreastThickness = "113865";

    /// <summary>
    /// Literal for code: CopiedFromImageAttributes
    /// </summary>
    public const string LiteralCopiedFromImageAttributes = "113866";

    /// <summary>
    /// Literal for code: ComputedFromImageAttributes
    /// </summary>
    public const string LiteralComputedFromImageAttributes = "113867";

    /// <summary>
    /// Literal for code: DerivedFromHumanReadableReports
    /// </summary>
    public const string LiteralDerivedFromHumanReadableReports = "113868";

    /// <summary>
    /// Literal for code: PersonName
    /// </summary>
    public const string LiteralPersonName = "113870";

    /// <summary>
    /// Literal for code: PersonID
    /// </summary>
    public const string LiteralPersonID = "113871";

    /// <summary>
    /// Literal for code: PersonIDIssuer
    /// </summary>
    public const string LiteralPersonIDIssuer = "113872";

    /// <summary>
    /// Literal for code: OrganizationName
    /// </summary>
    public const string LiteralOrganizationName = "113873";

    /// <summary>
    /// Literal for code: PersonRoleInOrganization
    /// </summary>
    public const string LiteralPersonRoleInOrganization = "113874";

    /// <summary>
    /// Literal for code: PersonRoleInProcedure
    /// </summary>
    public const string LiteralPersonRoleInProcedure = "113875";

    /// <summary>
    /// Literal for code: DeviceRoleInProcedure
    /// </summary>
    public const string LiteralDeviceRoleInProcedure = "113876";

    /// <summary>
    /// Literal for code: DeviceName
    /// </summary>
    public const string LiteralDeviceName = "113877";

    /// <summary>
    /// Literal for code: DeviceManufacturer
    /// </summary>
    public const string LiteralDeviceManufacturer = "113878";

    /// <summary>
    /// Literal for code: DeviceModelName
    /// </summary>
    public const string LiteralDeviceModelName = "113879";

    /// <summary>
    /// Literal for code: DeviceSerialNumber
    /// </summary>
    public const string LiteralDeviceSerialNumber = "113880";

    /// <summary>
    /// Literal for code: AllPlanes
    /// </summary>
    public const string LiteralAllPlanes = "113890";

    /// <summary>
    /// Literal for code: LengthOfReconstructableVolume
    /// </summary>
    public const string LiteralLengthOfReconstructableVolume = "113893";

    /// <summary>
    /// Literal for code: TopZLocationOfReconstructableVolume
    /// </summary>
    public const string LiteralTopZLocationOfReconstructableVolume = "113895";

    /// <summary>
    /// Literal for code: BottomZLocationOfReconstructableVolume
    /// </summary>
    public const string LiteralBottomZLocationOfReconstructableVolume = "113896";

    /// <summary>
    /// Literal for code: TopZLocationOfScanningLength
    /// </summary>
    public const string LiteralTopZLocationOfScanningLength = "113897";

    /// <summary>
    /// Literal for code: BottomZLocationOfScanningLength
    /// </summary>
    public const string LiteralBottomZLocationOfScanningLength = "113898";

    /// <summary>
    /// Literal for code: ExposedRange
    /// </summary>
    public const string LiteralExposedRange = "113899";

    /// <summary>
    /// Literal for code: DoseCheckAlertDetails
    /// </summary>
    public const string LiteralDoseCheckAlertDetails = "113900";

    /// <summary>
    /// Literal for code: DLPAlertValueConfigured
    /// </summary>
    public const string LiteralDLPAlertValueConfigured = "113901";

    /// <summary>
    /// Literal for code: CTDIvolAlertValueConfigured
    /// </summary>
    public const string LiteralCTDIvolAlertValueConfigured = "113902";

    /// <summary>
    /// Literal for code: DLPAlertValue
    /// </summary>
    public const string LiteralDLPAlertValue = "113903";

    /// <summary>
    /// Literal for code: CTDIvolAlertValue
    /// </summary>
    public const string LiteralCTDIvolAlertValue = "113904";

    /// <summary>
    /// Literal for code: AccumulatedDLPForwardEstimate
    /// </summary>
    public const string LiteralAccumulatedDLPForwardEstimate = "113905";

    /// <summary>
    /// Literal for code: AccumulatedCTDIvolForwardEstimate
    /// </summary>
    public const string LiteralAccumulatedCTDIvolForwardEstimate = "113906";

    /// <summary>
    /// Literal for code: ReasonForProceeding
    /// </summary>
    public const string LiteralReasonForProceeding = "113907";

    /// <summary>
    /// Literal for code: DoseCheckNotificationDetails
    /// </summary>
    public const string LiteralDoseCheckNotificationDetails = "113908";

    /// <summary>
    /// Literal for code: DLPNotificationValueConfigured
    /// </summary>
    public const string LiteralDLPNotificationValueConfigured = "113909";

    /// <summary>
    /// Literal for code: CTDIvolNotificationValueConfigured
    /// </summary>
    public const string LiteralCTDIvolNotificationValueConfigured = "113910";

    /// <summary>
    /// Literal for code: DLPNotificationValue
    /// </summary>
    public const string LiteralDLPNotificationValue = "113911";

    /// <summary>
    /// Literal for code: CTDIvolNotificationValue
    /// </summary>
    public const string LiteralCTDIvolNotificationValue = "113912";

    /// <summary>
    /// Literal for code: DLPForwardEstimate
    /// </summary>
    public const string LiteralDLPForwardEstimate = "113913";

    /// <summary>
    /// Literal for code: CTDIvolForwardEstimate
    /// </summary>
    public const string LiteralCTDIvolForwardEstimate = "113914";

    /// <summary>
    /// Literal for code: RadiationExposure
    /// </summary>
    public const string LiteralRadiationExposure = "113921";

    /// <summary>
    /// Literal for code: RadioactiveSubstanceAdministered
    /// </summary>
    public const string LiteralRadioactiveSubstanceAdministered = "113922";

    /// <summary>
    /// Literal for code: SizeSpecificDoseEstimation
    /// </summary>
    public const string LiteralSizeSpecificDoseEstimation = "113930";

    /// <summary>
    /// Literal for code: MeasuredLateralDimension
    /// </summary>
    public const string LiteralMeasuredLateralDimension = "113931";

    /// <summary>
    /// Literal for code: MeasuredAPDimension
    /// </summary>
    public const string LiteralMeasuredAPDimension = "113932";

    /// <summary>
    /// Literal for code: DerivedEffectiveDiameter
    /// </summary>
    public const string LiteralDerivedEffectiveDiameter = "113933";

    /// <summary>
    /// Literal for code: AAPM204LateralDimension
    /// </summary>
    public const string LiteralAAPM204LateralDimension = "113934";

    /// <summary>
    /// Literal for code: AAPM204APDimension
    /// </summary>
    public const string LiteralAAPM204APDimension = "113935";

    /// <summary>
    /// Literal for code: AAPM204SumOfLateralAndAPDimension
    /// </summary>
    public const string LiteralAAPM204SumOfLateralAndAPDimension = "113936";

    /// <summary>
    /// Literal for code: AAPM204EffectiveDiameterEstimatedFromPatientAge
    /// </summary>
    public const string LiteralAAPM204EffectiveDiameterEstimatedFromPatientAge = "113937";

    /// <summary>
    /// Literal for code: SystemCalculated
    /// </summary>
    public const string LiteralSystemCalculated = "113940";

    /// <summary>
    /// Literal for code: InDetectorPlane
    /// </summary>
    public const string LiteralInDetectorPlane = "113941";

    /// <summary>
    /// Literal for code: XRayReadingDevice
    /// </summary>
    public const string LiteralXRayReadingDevice = "113942";

    /// <summary>
    /// Literal for code: XRaySourceDataAvailable
    /// </summary>
    public const string LiteralXRaySourceDataAvailable = "113943";

    /// <summary>
    /// Literal for code: XRayMechanicalDataAvailable
    /// </summary>
    public const string LiteralXRayMechanicalDataAvailable = "113944";

    /// <summary>
    /// Literal for code: XRayDetectorDataAvailable
    /// </summary>
    public const string LiteralXRayDetectorDataAvailable = "113945";

    /// <summary>
    /// Literal for code: ProjectionEponymousName
    /// </summary>
    public const string LiteralProjectionEponymousName = "113946";

    /// <summary>
    /// Literal for code: DetectorType
    /// </summary>
    public const string LiteralDetectorType = "113947";

    /// <summary>
    /// Literal for code: DirectDetector
    /// </summary>
    public const string LiteralDirectDetector = "113948";

    /// <summary>
    /// Literal for code: IndirectDetector
    /// </summary>
    public const string LiteralIndirectDetector = "113949";

    /// <summary>
    /// Literal for code: StorageDetector
    /// </summary>
    public const string LiteralStorageDetector = "113950";

    /// <summary>
    /// Literal for code: Film_2
    /// </summary>
    public const string LiteralFilm_2 = "113951";

    /// <summary>
    /// Literal for code: TableMount
    /// </summary>
    public const string LiteralTableMount = "113952";

    /// <summary>
    /// Literal for code: UnmountedDetector
    /// </summary>
    public const string LiteralUnmountedDetector = "113953";

    /// <summary>
    /// Literal for code: UprightStandMount
    /// </summary>
    public const string LiteralUprightStandMount = "113954";

    /// <summary>
    /// Literal for code: CArmMount
    /// </summary>
    public const string LiteralCArmMount = "113955";

    /// <summary>
    /// Literal for code: CRDRMechanicalConfiguration
    /// </summary>
    public const string LiteralCRDRMechanicalConfiguration = "113956";

    /// <summary>
    /// Literal for code: FluoroscopyGuidedProjectionRadiographySystem
    /// </summary>
    public const string LiteralFluoroscopyGuidedProjectionRadiographySystem = "113957";

    /// <summary>
    /// Literal for code: IntegratedProjectionRadiographySystem
    /// </summary>
    public const string LiteralIntegratedProjectionRadiographySystem = "113958";

    /// <summary>
    /// Literal for code: CassetteBasedProjectionRadiographySystem
    /// </summary>
    public const string LiteralCassetteBasedProjectionRadiographySystem = "113959";

    /// <summary>
    /// Literal for code: ReconstructionAlgorithm
    /// </summary>
    public const string LiteralReconstructionAlgorithm = "113961";

    /// <summary>
    /// Literal for code: FilteredBackProjection
    /// </summary>
    public const string LiteralFilteredBackProjection = "113962";

    /// <summary>
    /// Literal for code: IterativeReconstruction
    /// </summary>
    public const string LiteralIterativeReconstruction = "113963";

    /// <summary>
    /// Literal for code: ProcedureStepToThisPoint
    /// </summary>
    public const string LiteralProcedureStepToThisPoint = "113970";

    /// <summary>
    /// Literal for code: NotANumber
    /// </summary>
    public const string LiteralNotANumber = "114000";

    /// <summary>
    /// Literal for code: NegativeInfinity
    /// </summary>
    public const string LiteralNegativeInfinity = "114001";

    /// <summary>
    /// Literal for code: PositiveInfinity
    /// </summary>
    public const string LiteralPositiveInfinity = "114002";

    /// <summary>
    /// Literal for code: DivideByZero
    /// </summary>
    public const string LiteralDivideByZero = "114003";

    /// <summary>
    /// Literal for code: Underflow
    /// </summary>
    public const string LiteralUnderflow = "114004";

    /// <summary>
    /// Literal for code: Overflow
    /// </summary>
    public const string LiteralOverflow = "114005";

    /// <summary>
    /// Literal for code: MeasurementFailure
    /// </summary>
    public const string LiteralMeasurementFailure = "114006";

    /// <summary>
    /// Literal for code: MeasurementNotAttempted
    /// </summary>
    public const string LiteralMeasurementNotAttempted = "114007";

    /// <summary>
    /// Literal for code: CalculationFailure
    /// </summary>
    public const string LiteralCalculationFailure = "114008";

    /// <summary>
    /// Literal for code: ValueOutOfRange
    /// </summary>
    public const string LiteralValueOutOfRange = "114009";

    /// <summary>
    /// Literal for code: ValueUnknown
    /// </summary>
    public const string LiteralValueUnknown = "114010";

    /// <summary>
    /// Literal for code: ValueIndeterminate
    /// </summary>
    public const string LiteralValueIndeterminate = "114011";

    /// <summary>
    /// Literal for code: TimeOfFlight
    /// </summary>
    public const string LiteralTimeOfFlight = "114201";

    /// <summary>
    /// Literal for code: Interferometry
    /// </summary>
    public const string LiteralInterferometry = "114202";

    /// <summary>
    /// Literal for code: LaserScanning
    /// </summary>
    public const string LiteralLaserScanning = "114203";

    /// <summary>
    /// Literal for code: PatternProjection
    /// </summary>
    public const string LiteralPatternProjection = "114204";

    /// <summary>
    /// Literal for code: ShapeFromShading
    /// </summary>
    public const string LiteralShapeFromShading = "114205";

    /// <summary>
    /// Literal for code: ShapeFromMotion
    /// </summary>
    public const string LiteralShapeFromMotion = "114206";

    /// <summary>
    /// Literal for code: ConfocalImaging
    /// </summary>
    public const string LiteralConfocalImaging = "114207";

    /// <summary>
    /// Literal for code: PointCloudAlgorithmic
    /// </summary>
    public const string LiteralPointCloudAlgorithmic = "114208";

    /// <summary>
    /// Literal for code: TurntableScanMethod
    /// </summary>
    public const string LiteralTurntableScanMethod = "114209";

    /// <summary>
    /// Literal for code: HighResolution
    /// </summary>
    public const string LiteralHighResolution = "114210";

    /// <summary>
    /// Literal for code: FastMode
    /// </summary>
    public const string LiteralFastMode = "114211";

    /// <summary>
    /// Literal for code: IterativeClosestPoint
    /// </summary>
    public const string LiteralIterativeClosestPoint = "114213";

    /// <summary>
    /// Literal for code: Freehand
    /// </summary>
    public const string LiteralFreehand = "114215";

    /// <summary>
    /// Literal for code: Checkerboard
    /// </summary>
    public const string LiteralCheckerboard = "114216";

    /// <summary>
    /// Literal for code: QuotationMode
    /// </summary>
    public const string LiteralQuotationMode = "121001";

    /// <summary>
    /// Literal for code: QuotedSource
    /// </summary>
    public const string LiteralQuotedSource = "121002";

    /// <summary>
    /// Literal for code: Document
    /// </summary>
    public const string LiteralDocument = "121003";

    /// <summary>
    /// Literal for code: Verbal
    /// </summary>
    public const string LiteralVerbal = "121004";

    /// <summary>
    /// Literal for code: ObserverType
    /// </summary>
    public const string LiteralObserverType = "121005";

    /// <summary>
    /// Literal for code: Person
    /// </summary>
    public const string LiteralPerson = "121006";

    /// <summary>
    /// Literal for code: Device
    /// </summary>
    public const string LiteralDevice = "121007";

    /// <summary>
    /// Literal for code: PersonObserverName
    /// </summary>
    public const string LiteralPersonObserverName = "121008";

    /// <summary>
    /// Literal for code: PersonObserverQuoteSOrganizationName
    /// </summary>
    public const string LiteralPersonObserverQuoteSOrganizationName = "121009";

    /// <summary>
    /// Literal for code: PersonObserverQuoteSRoleInTheOrganization
    /// </summary>
    public const string LiteralPersonObserverQuoteSRoleInTheOrganization = "121010";

    /// <summary>
    /// Literal for code: PersonObserverQuoteSRoleInThisProcedure
    /// </summary>
    public const string LiteralPersonObserverQuoteSRoleInThisProcedure = "121011";

    /// <summary>
    /// Literal for code: DeviceObserverUID
    /// </summary>
    public const string LiteralDeviceObserverUID = "121012";

    /// <summary>
    /// Literal for code: DeviceObserverName
    /// </summary>
    public const string LiteralDeviceObserverName = "121013";

    /// <summary>
    /// Literal for code: DeviceObserverManufacturer
    /// </summary>
    public const string LiteralDeviceObserverManufacturer = "121014";

    /// <summary>
    /// Literal for code: DeviceObserverModelName
    /// </summary>
    public const string LiteralDeviceObserverModelName = "121015";

    /// <summary>
    /// Literal for code: DeviceObserverSerialNumber
    /// </summary>
    public const string LiteralDeviceObserverSerialNumber = "121016";

    /// <summary>
    /// Literal for code: DeviceObserverPhysicalLocationDuringObservation
    /// </summary>
    public const string LiteralDeviceObserverPhysicalLocationDuringObservation = "121017";

    /// <summary>
    /// Literal for code: ProcedureStudyInstanceUID
    /// </summary>
    public const string LiteralProcedureStudyInstanceUID = "121018";

    /// <summary>
    /// Literal for code: ProcedureStudyComponentUID
    /// </summary>
    public const string LiteralProcedureStudyComponentUID = "121019";

    /// <summary>
    /// Literal for code: PlacerNumber
    /// </summary>
    public const string LiteralPlacerNumber = "121020";

    /// <summary>
    /// Literal for code: FillerNumber
    /// </summary>
    public const string LiteralFillerNumber = "121021";

    /// <summary>
    /// Literal for code: AccessionNumber
    /// </summary>
    public const string LiteralAccessionNumber = "121022";

    /// <summary>
    /// Literal for code: ProcedureCode
    /// </summary>
    public const string LiteralProcedureCode = "121023";

    /// <summary>
    /// Literal for code: SubjectClass
    /// </summary>
    public const string LiteralSubjectClass = "121024";

    /// <summary>
    /// Literal for code: Patient
    /// </summary>
    public const string LiteralPatient = "121025";

    /// <summary>
    /// Literal for code: Fetus
    /// </summary>
    public const string LiteralFetus = "121026";

    /// <summary>
    /// Literal for code: Specimen
    /// </summary>
    public const string LiteralSpecimen = "121027";

    /// <summary>
    /// Literal for code: SubjectUID
    /// </summary>
    public const string LiteralSubjectUID = "121028";

    /// <summary>
    /// Literal for code: SubjectName
    /// </summary>
    public const string LiteralSubjectName = "121029";

    /// <summary>
    /// Literal for code: SubjectID
    /// </summary>
    public const string LiteralSubjectID = "121030";

    /// <summary>
    /// Literal for code: SubjectBirthDate
    /// </summary>
    public const string LiteralSubjectBirthDate = "121031";

    /// <summary>
    /// Literal for code: SubjectSex
    /// </summary>
    public const string LiteralSubjectSex = "121032";

    /// <summary>
    /// Literal for code: SubjectAge
    /// </summary>
    public const string LiteralSubjectAge = "121033";

    /// <summary>
    /// Literal for code: SubjectSpecies
    /// </summary>
    public const string LiteralSubjectSpecies = "121034";

    /// <summary>
    /// Literal for code: SubjectBreed
    /// </summary>
    public const string LiteralSubjectBreed = "121035";

    /// <summary>
    /// Literal for code: MotherOfFetus
    /// </summary>
    public const string LiteralMotherOfFetus = "121036";

    /// <summary>
    /// Literal for code: SpecimenUID
    /// </summary>
    public const string LiteralSpecimenUID = "121039";

    /// <summary>
    /// Literal for code: SpecimenIdentifier
    /// </summary>
    public const string LiteralSpecimenIdentifier = "121041";

    /// <summary>
    /// Literal for code: Language
    /// </summary>
    public const string LiteralLanguage = "121045";

    /// <summary>
    /// Literal for code: CountryOfLanguage
    /// </summary>
    public const string LiteralCountryOfLanguage = "121046";

    /// <summary>
    /// Literal for code: LanguageOfValue
    /// </summary>
    public const string LiteralLanguageOfValue = "121047";

    /// <summary>
    /// Literal for code: LanguageOfNameAndValue
    /// </summary>
    public const string LiteralLanguageOfNameAndValue = "121048";

    /// <summary>
    /// Literal for code: LanguageOfContentItemAndDescendants
    /// </summary>
    public const string LiteralLanguageOfContentItemAndDescendants = "121049";

    /// <summary>
    /// Literal for code: EquivalentMeaningOfConceptName
    /// </summary>
    public const string LiteralEquivalentMeaningOfConceptName = "121050";

    /// <summary>
    /// Literal for code: EquivalentMeaningOfValue
    /// </summary>
    public const string LiteralEquivalentMeaningOfValue = "121051";

    /// <summary>
    /// Literal for code: PresenceOfProperty
    /// </summary>
    public const string LiteralPresenceOfProperty = "121052";

    /// <summary>
    /// Literal for code: Path
    /// </summary>
    public const string LiteralPath = "121055";

    /// <summary>
    /// Literal for code: AreaOutline
    /// </summary>
    public const string LiteralAreaOutline = "121056";

    /// <summary>
    /// Literal for code: PerimeterOutline
    /// </summary>
    public const string LiteralPerimeterOutline = "121057";

    /// <summary>
    /// Literal for code: ProcedureReported
    /// </summary>
    public const string LiteralProcedureReported = "121058";

    /// <summary>
    /// Literal for code: ProcedureDescription
    /// </summary>
    public const string LiteralProcedureDescription = "121065";

    /// <summary>
    /// Literal for code: PreviousFinding
    /// </summary>
    public const string LiteralPreviousFinding = "121069";

    /// <summary>
    /// Literal for code: Finding
    /// </summary>
    public const string LiteralFinding = "121071";

    /// <summary>
    /// Literal for code: Impression
    /// </summary>
    public const string LiteralImpression = "121073";

    /// <summary>
    /// Literal for code: Recommendation
    /// </summary>
    public const string LiteralRecommendation = "121075";

    /// <summary>
    /// Literal for code: Conclusion
    /// </summary>
    public const string LiteralConclusion = "121077";

    /// <summary>
    /// Literal for code: Baseline
    /// </summary>
    public const string LiteralBaseline = "121079";

    /// <summary>
    /// Literal for code: BestIllustrationOfFinding
    /// </summary>
    public const string LiteralBestIllustrationOfFinding = "121080";

    /// <summary>
    /// Literal for code: Fellow
    /// </summary>
    public const string LiteralFellow = "121088";

    /// <summary>
    /// Literal for code: Sonologist
    /// </summary>
    public const string LiteralSonologist = "121092";

    /// <summary>
    /// Literal for code: Performing
    /// </summary>
    public const string LiteralPerforming = "121094";

    /// <summary>
    /// Literal for code: Requesting
    /// </summary>
    public const string LiteralRequesting = "121096";

    /// <summary>
    /// Literal for code: Recording
    /// </summary>
    public const string LiteralRecording = "121097";

    /// <summary>
    /// Literal for code: Verifying
    /// </summary>
    public const string LiteralVerifying = "121098";

    /// <summary>
    /// Literal for code: Assisting
    /// </summary>
    public const string LiteralAssisting = "121099";

    /// <summary>
    /// Literal for code: Standby
    /// </summary>
    public const string LiteralStandby = "121101";

    /// <summary>
    /// Literal for code: OtherSex
    /// </summary>
    public const string LiteralOtherSex = "121102";

    /// <summary>
    /// Literal for code: UndeterminedSex
    /// </summary>
    public const string LiteralUndeterminedSex = "121103";

    /// <summary>
    /// Literal for code: AmbiguousSex
    /// </summary>
    public const string LiteralAmbiguousSex = "121104";

    /// <summary>
    /// Literal for code: Comment
    /// </summary>
    public const string LiteralComment = "121106";

    /// <summary>
    /// Literal for code: SourceOfMeasurement
    /// </summary>
    public const string LiteralSourceOfMeasurement = "121112";

    /// <summary>
    /// Literal for code: PerformingPhysician
    /// </summary>
    public const string LiteralPerformingPhysician = "121114";

    /// <summary>
    /// Literal for code: DischargeSummary
    /// </summary>
    public const string LiteralDischargeSummary = "121115";

    /// <summary>
    /// Literal for code: ProximalFindingSite
    /// </summary>
    public const string LiteralProximalFindingSite = "121116";

    /// <summary>
    /// Literal for code: DistalFindingSite
    /// </summary>
    public const string LiteralDistalFindingSite = "121117";

    /// <summary>
    /// Literal for code: PatientCharacteristics
    /// </summary>
    public const string LiteralPatientCharacteristics = "121118";

    /// <summary>
    /// Literal for code: CathLabProcedureLog
    /// </summary>
    public const string LiteralCathLabProcedureLog = "121120";

    /// <summary>
    /// Literal for code: RoomIdentification
    /// </summary>
    public const string LiteralRoomIdentification = "121121";

    /// <summary>
    /// Literal for code: EquipmentIdentification
    /// </summary>
    public const string LiteralEquipmentIdentification = "121122";

    /// <summary>
    /// Literal for code: PatientStatusOrEvent
    /// </summary>
    public const string LiteralPatientStatusOrEvent = "121123";

    /// <summary>
    /// Literal for code: ProcedureActionItemID
    /// </summary>
    public const string LiteralProcedureActionItemID = "121124";

    /// <summary>
    /// Literal for code: DateTimeOfRecordingOfLogEntry
    /// </summary>
    public const string LiteralDateTimeOfRecordingOfLogEntry = "121125";

    /// <summary>
    /// Literal for code: PerformedProcedureStepSOPInstanceUID
    /// </summary>
    public const string LiteralPerformedProcedureStepSOPInstanceUID = "121126";

    /// <summary>
    /// Literal for code: PerformedProcedureStepSOPClassUID
    /// </summary>
    public const string LiteralPerformedProcedureStepSOPClassUID = "121127";

    /// <summary>
    /// Literal for code: ProcedureActionDuration
    /// </summary>
    public const string LiteralProcedureActionDuration = "121128";

    /// <summary>
    /// Literal for code: StartProcedureActionItem
    /// </summary>
    public const string LiteralStartProcedureActionItem = "121130";

    /// <summary>
    /// Literal for code: EndProcedureActionItem
    /// </summary>
    public const string LiteralEndProcedureActionItem = "121131";

    /// <summary>
    /// Literal for code: SuspendProcedureActionItem
    /// </summary>
    public const string LiteralSuspendProcedureActionItem = "121132";

    /// <summary>
    /// Literal for code: ResumeProcedureActionItem
    /// </summary>
    public const string LiteralResumeProcedureActionItem = "121133";

    /// <summary>
    /// Literal for code: ObservationDateTimeQualifier
    /// </summary>
    public const string LiteralObservationDateTimeQualifier = "121135";

    /// <summary>
    /// Literal for code: DateTimeUnsynchronized
    /// </summary>
    public const string LiteralDateTimeUnsynchronized = "121136";

    /// <summary>
    /// Literal for code: DateTimeEstimated
    /// </summary>
    public const string LiteralDateTimeEstimated = "121137";

    /// <summary>
    /// Literal for code: ImageAcquired
    /// </summary>
    public const string LiteralImageAcquired = "121138";

    /// <summary>
    /// Literal for code: Modality
    /// </summary>
    public const string LiteralModality = "121139";

    /// <summary>
    /// Literal for code: NumberOfFrames
    /// </summary>
    public const string LiteralNumberOfFrames = "121140";

    /// <summary>
    /// Literal for code: ImageType
    /// </summary>
    public const string LiteralImageType = "121141";

    /// <summary>
    /// Literal for code: AcquisitionDuration
    /// </summary>
    public const string LiteralAcquisitionDuration = "121142";

    /// <summary>
    /// Literal for code: WaveformAcquired
    /// </summary>
    public const string LiteralWaveformAcquired = "121143";

    /// <summary>
    /// Literal for code: DocumentTitle
    /// </summary>
    public const string LiteralDocumentTitle = "121144";

    /// <summary>
    /// Literal for code: DescriptionOfMaterial
    /// </summary>
    public const string LiteralDescriptionOfMaterial = "121145";

    /// <summary>
    /// Literal for code: QuantityOfMaterial
    /// </summary>
    public const string LiteralQuantityOfMaterial = "121146";

    /// <summary>
    /// Literal for code: BillingCode
    /// </summary>
    public const string LiteralBillingCode = "121147";

    /// <summary>
    /// Literal for code: UnitSerialIdentifier
    /// </summary>
    public const string LiteralUnitSerialIdentifier = "121148";

    /// <summary>
    /// Literal for code: LotIdentifier
    /// </summary>
    public const string LiteralLotIdentifier = "121149";

    /// <summary>
    /// Literal for code: DeviceCode
    /// </summary>
    public const string LiteralDeviceCode = "121150";

    /// <summary>
    /// Literal for code: LesionIdentifier
    /// </summary>
    public const string LiteralLesionIdentifier = "121151";

    /// <summary>
    /// Literal for code: PersonAdministeringDrugContrast
    /// </summary>
    public const string LiteralPersonAdministeringDrugContrast = "121152";

    /// <summary>
    /// Literal for code: LesionRisk
    /// </summary>
    public const string LiteralLesionRisk = "121153";

    /// <summary>
    /// Literal for code: InterventionAttemptIdentifier
    /// </summary>
    public const string LiteralInterventionAttemptIdentifier = "121154";

    /// <summary>
    /// Literal for code: Deployment
    /// </summary>
    public const string LiteralDeployment = "121155";

    /// <summary>
    /// Literal for code: PercutaneousEntryAction
    /// </summary>
    public const string LiteralPercutaneousEntryAction = "121156";

    /// <summary>
    /// Literal for code: BeginCirculatorySupport
    /// </summary>
    public const string LiteralBeginCirculatorySupport = "121157";

    /// <summary>
    /// Literal for code: EndCirculatorySupport
    /// </summary>
    public const string LiteralEndCirculatorySupport = "121158";

    /// <summary>
    /// Literal for code: OxygenAdministrationRate
    /// </summary>
    public const string LiteralOxygenAdministrationRate = "121160";

    /// <summary>
    /// Literal for code: BeginOxygenAdministration
    /// </summary>
    public const string LiteralBeginOxygenAdministration = "121161";

    /// <summary>
    /// Literal for code: EndOxygenAdministration
    /// </summary>
    public const string LiteralEndOxygenAdministration = "121162";

    /// <summary>
    /// Literal for code: ByVentilator
    /// </summary>
    public const string LiteralByVentilator = "121163";

    /// <summary>
    /// Literal for code: PatientAssessmentPerformed
    /// </summary>
    public const string LiteralPatientAssessmentPerformed = "121165";

    /// <summary>
    /// Literal for code: BeginPacing
    /// </summary>
    public const string LiteralBeginPacing = "121166";

    /// <summary>
    /// Literal for code: EndPacing
    /// </summary>
    public const string LiteralEndPacing = "121167";

    /// <summary>
    /// Literal for code: BeginVentilation
    /// </summary>
    public const string LiteralBeginVentilation = "121168";

    /// <summary>
    /// Literal for code: EndVentilation
    /// </summary>
    public const string LiteralEndVentilation = "121169";

    /// <summary>
    /// Literal for code: TechNote
    /// </summary>
    public const string LiteralTechNote = "121171";

    /// <summary>
    /// Literal for code: NursingNote
    /// </summary>
    public const string LiteralNursingNote = "121172";

    /// <summary>
    /// Literal for code: PhysicianNote
    /// </summary>
    public const string LiteralPhysicianNote = "121173";

    /// <summary>
    /// Literal for code: ProcedureNote
    /// </summary>
    public const string LiteralProcedureNote = "121174";

    /// <summary>
    /// Literal for code: DICOMObjectCatalog
    /// </summary>
    public const string LiteralDICOMObjectCatalog = "121181";

    /// <summary>
    /// Literal for code: ReferencedFrames
    /// </summary>
    public const string LiteralReferencedFrames = "121190";

    /// <summary>
    /// Literal for code: ReferencedSegment
    /// </summary>
    public const string LiteralReferencedSegment = "121191";

    /// <summary>
    /// Literal for code: DeviceSubject
    /// </summary>
    public const string LiteralDeviceSubject = "121192";

    /// <summary>
    /// Literal for code: DeviceSubjectName
    /// </summary>
    public const string LiteralDeviceSubjectName = "121193";

    /// <summary>
    /// Literal for code: DeviceSubjectManufacturer
    /// </summary>
    public const string LiteralDeviceSubjectManufacturer = "121194";

    /// <summary>
    /// Literal for code: DeviceSubjectModelName
    /// </summary>
    public const string LiteralDeviceSubjectModelName = "121195";

    /// <summary>
    /// Literal for code: DeviceSubjectSerialNumber
    /// </summary>
    public const string LiteralDeviceSubjectSerialNumber = "121196";

    /// <summary>
    /// Literal for code: DeviceSubjectPhysicalLocationDuringObservation
    /// </summary>
    public const string LiteralDeviceSubjectPhysicalLocationDuringObservation = "121197";

    /// <summary>
    /// Literal for code: DeviceSubjectUID
    /// </summary>
    public const string LiteralDeviceSubjectUID = "121198";

    /// <summary>
    /// Literal for code: IllustrationOfROI
    /// </summary>
    public const string LiteralIllustrationOfROI = "121200";

    /// <summary>
    /// Literal for code: Distance
    /// </summary>
    public const string LiteralDistance = "121206";

    /// <summary>
    /// Literal for code: Height
    /// </summary>
    public const string LiteralHeight = "121207";

    /// <summary>
    /// Literal for code: InterMarkerDistance
    /// </summary>
    public const string LiteralInterMarkerDistance = "121208";

    /// <summary>
    /// Literal for code: PathLength
    /// </summary>
    public const string LiteralPathLength = "121211";

    /// <summary>
    /// Literal for code: ReferencedSegmentationFrame
    /// </summary>
    public const string LiteralReferencedSegmentationFrame = "121214";

    /// <summary>
    /// Literal for code: VolumeEstimatedFromSingle2DRegion
    /// </summary>
    public const string LiteralVolumeEstimatedFromSingle2DRegion = "121216";

    /// <summary>
    /// Literal for code: VolumeEstimatedFromThreeOrMoreNonCoplanar2DRegions
    /// </summary>
    public const string LiteralVolumeEstimatedFromThreeOrMoreNonCoplanar2DRegions = "121217";

    /// <summary>
    /// Literal for code: VolumeEstimatedFromTwoNonCoplanar2DRegions
    /// </summary>
    public const string LiteralVolumeEstimatedFromTwoNonCoplanar2DRegions = "121218";

    /// <summary>
    /// Literal for code: VolumeOfBoundingThreeDimensionalRegion
    /// </summary>
    public const string LiteralVolumeOfBoundingThreeDimensionalRegion = "121219";

    /// <summary>
    /// Literal for code: VolumeOfCircumscribedSphere
    /// </summary>
    public const string LiteralVolumeOfCircumscribedSphere = "121220";

    /// <summary>
    /// Literal for code: VolumeOfEllipsoid
    /// </summary>
    public const string LiteralVolumeOfEllipsoid = "121221";

    /// <summary>
    /// Literal for code: VolumeOfSphere
    /// </summary>
    public const string LiteralVolumeOfSphere = "121222";

    /// <summary>
    /// Literal for code: PathVertex
    /// </summary>
    public const string LiteralPathVertex = "121230";

    /// <summary>
    /// Literal for code: VolumeSurface
    /// </summary>
    public const string LiteralVolumeSurface = "121231";

    /// <summary>
    /// Literal for code: SourceSeriesForSegmentation
    /// </summary>
    public const string LiteralSourceSeriesForSegmentation = "121232";

    /// <summary>
    /// Literal for code: SourceImageForSegmentation
    /// </summary>
    public const string LiteralSourceImageForSegmentation = "121233";

    /// <summary>
    /// Literal for code: DistanceFromNipple
    /// </summary>
    public const string LiteralDistanceFromNipple = "121242";

    /// <summary>
    /// Literal for code: DistanceFromSkin
    /// </summary>
    public const string LiteralDistanceFromSkin = "121243";

    /// <summary>
    /// Literal for code: DistanceFromChestWall
    /// </summary>
    public const string LiteralDistanceFromChestWall = "121244";

    /// <summary>
    /// Literal for code: PatientExposureToIonizingRadiation
    /// </summary>
    public const string LiteralPatientExposureToIonizingRadiation = "121290";

    /// <summary>
    /// Literal for code: ResultsCommunicated
    /// </summary>
    public const string LiteralResultsCommunicated = "121291";

    /// <summary>
    /// Literal for code: SimultaneousDoppler
    /// </summary>
    public const string LiteralSimultaneousDoppler = "121301";

    /// <summary>
    /// Literal for code: SimultaneousHemodynamic
    /// </summary>
    public const string LiteralSimultaneousHemodynamic = "121302";

    /// <summary>
    /// Literal for code: SimultaneousECG
    /// </summary>
    public const string LiteralSimultaneousECG = "121303";

    /// <summary>
    /// Literal for code: SimultaneousVoiceNarrative
    /// </summary>
    public const string LiteralSimultaneousVoiceNarrative = "121304";

    /// <summary>
    /// Literal for code: SimultaneousRespiratoryWaveform
    /// </summary>
    public const string LiteralSimultaneousRespiratoryWaveform = "121305";

    /// <summary>
    /// Literal for code: SimultaneousArterialPulseWaveform
    /// </summary>
    public const string LiteralSimultaneousArterialPulseWaveform = "121306";

    /// <summary>
    /// Literal for code: SimultaneousPhonocardiographicWaveform
    /// </summary>
    public const string LiteralSimultaneousPhonocardiographicWaveform = "121307";

    /// <summary>
    /// Literal for code: Localizer
    /// </summary>
    public const string LiteralLocalizer = "121311";

    /// <summary>
    /// Literal for code: BiopsyLocalizer
    /// </summary>
    public const string LiteralBiopsyLocalizer = "121312";

    /// <summary>
    /// Literal for code: OtherPartialViews
    /// </summary>
    public const string LiteralOtherPartialViews = "121313";

    /// <summary>
    /// Literal for code: OtherImageOfBiplanePair
    /// </summary>
    public const string LiteralOtherImageOfBiplanePair = "121314";

    /// <summary>
    /// Literal for code: OtherImageOfStereoscopicPair
    /// </summary>
    public const string LiteralOtherImageOfStereoscopicPair = "121315";

    /// <summary>
    /// Literal for code: ImagesRelatedToStandaloneObject
    /// </summary>
    public const string LiteralImagesRelatedToStandaloneObject = "121316";

    /// <summary>
    /// Literal for code: Spectroscopy
    /// </summary>
    public const string LiteralSpectroscopy = "121317";

    /// <summary>
    /// Literal for code: SpectroscopyDataForWaterPhaseCorrection
    /// </summary>
    public const string LiteralSpectroscopyDataForWaterPhaseCorrection = "121318";

    /// <summary>
    /// Literal for code: UncompressedPredecessor
    /// </summary>
    public const string LiteralUncompressedPredecessor = "121320";

    /// <summary>
    /// Literal for code: MaskImageForImageProcessingOperation
    /// </summary>
    public const string LiteralMaskImageForImageProcessingOperation = "121321";

    /// <summary>
    /// Literal for code: SourceImageForImageProcessingOperation
    /// </summary>
    public const string LiteralSourceImageForImageProcessingOperation = "121322";

    /// <summary>
    /// Literal for code: SourceSeriesForImageProcessingOperation
    /// </summary>
    public const string LiteralSourceSeriesForImageProcessingOperation = "121323";

    /// <summary>
    /// Literal for code: SourceImage
    /// </summary>
    public const string LiteralSourceImage = "121324";

    /// <summary>
    /// Literal for code: LossyCompressedImage
    /// </summary>
    public const string LiteralLossyCompressedImage = "121325";

    /// <summary>
    /// Literal for code: AlternateSOPClassInstance
    /// </summary>
    public const string LiteralAlternateSOPClassInstance = "121326";

    /// <summary>
    /// Literal for code: FullFidelityImage
    /// </summary>
    public const string LiteralFullFidelityImage = "121327";

    /// <summary>
    /// Literal for code: AlternatePhotometricInterpretationImage
    /// </summary>
    public const string LiteralAlternatePhotometricInterpretationImage = "121328";

    /// <summary>
    /// Literal for code: SourceImageForMontage
    /// </summary>
    public const string LiteralSourceImageForMontage = "121329";

    /// <summary>
    /// Literal for code: LossyCompressedPredecessor
    /// </summary>
    public const string LiteralLossyCompressedPredecessor = "121330";

    /// <summary>
    /// Literal for code: EquivalentCDADocument
    /// </summary>
    public const string LiteralEquivalentCDADocument = "121331";

    /// <summary>
    /// Literal for code: CompleteRenderingForPresentation
    /// </summary>
    public const string LiteralCompleteRenderingForPresentation = "121332";

    /// <summary>
    /// Literal for code: PartialRenderingForPresentation
    /// </summary>
    public const string LiteralPartialRenderingForPresentation = "121333";

    /// <summary>
    /// Literal for code: ExtendedRenderingForPresentation
    /// </summary>
    public const string LiteralExtendedRenderingForPresentation = "121334";

    /// <summary>
    /// Literal for code: SourceDocument
    /// </summary>
    public const string LiteralSourceDocument = "121335";

    /// <summary>
    /// Literal for code: AnatomicImage
    /// </summary>
    public const string LiteralAnatomicImage = "121338";

    /// <summary>
    /// Literal for code: FunctionalImage
    /// </summary>
    public const string LiteralFunctionalImage = "121339";

    /// <summary>
    /// Literal for code: SpectralFilteredImage
    /// </summary>
    public const string LiteralSpectralFilteredImage = "121340";

    /// <summary>
    /// Literal for code: DeviceLocalizer
    /// </summary>
    public const string LiteralDeviceLocalizer = "121341";

    /// <summary>
    /// Literal for code: DoseImage
    /// </summary>
    public const string LiteralDoseImage = "121342";

    /// <summary>
    /// Literal for code: AcquisitionFramesCorrespondingToVolume
    /// </summary>
    public const string LiteralAcquisitionFramesCorrespondingToVolume = "121346";

    /// <summary>
    /// Literal for code: VolumeCorrespondingToSpatiallyRelatedAcquisitionFrames
    /// </summary>
    public const string LiteralVolumeCorrespondingToSpatiallyRelatedAcquisitionFrames = "121347";

    /// <summary>
    /// Literal for code: TemporalPredecessor
    /// </summary>
    public const string LiteralTemporalPredecessor = "121348";

    /// <summary>
    /// Literal for code: TemporalSuccessor
    /// </summary>
    public const string LiteralTemporalSuccessor = "121349";

    /// <summary>
    /// Literal for code: SameAcquisitionAtLowerResolution
    /// </summary>
    public const string LiteralSameAcquisitionAtLowerResolution = "121350";

    /// <summary>
    /// Literal for code: SameAcquisitionAtHigherResolution
    /// </summary>
    public const string LiteralSameAcquisitionAtHigherResolution = "121351";

    /// <summary>
    /// Literal for code: SameAcquisitionAtDifferentFocalDepth
    /// </summary>
    public const string LiteralSameAcquisitionAtDifferentFocalDepth = "121352";

    /// <summary>
    /// Literal for code: SameAcquisitionAtDifferentSpectralBand
    /// </summary>
    public const string LiteralSameAcquisitionAtDifferentSpectralBand = "121353";

    /// <summary>
    /// Literal for code: ImagedContainerLabel
    /// </summary>
    public const string LiteralImagedContainerLabel = "121354";

    /// <summary>
    /// Literal for code: ForProcessingPredecessor
    /// </summary>
    public const string LiteralForProcessingPredecessor = "121358";

    /// <summary>
    /// Literal for code: ReplacedReport
    /// </summary>
    public const string LiteralReplacedReport = "121360";

    /// <summary>
    /// Literal for code: AddendedReport
    /// </summary>
    public const string LiteralAddendedReport = "121361";

    /// <summary>
    /// Literal for code: PreliminaryReport
    /// </summary>
    public const string LiteralPreliminaryReport = "121362";

    /// <summary>
    /// Literal for code: PartialReport
    /// </summary>
    public const string LiteralPartialReport = "121363";

    /// <summary>
    /// Literal for code: ComposedFromPriorDoses
    /// </summary>
    public const string LiteralComposedFromPriorDoses = "121370";

    /// <summary>
    /// Literal for code: ComposedFromPriorDosesAndCurrentPlan
    /// </summary>
    public const string LiteralComposedFromPriorDosesAndCurrentPlan = "121371";

    /// <summary>
    /// Literal for code: SourceDoseForComposingCurrentDose
    /// </summary>
    public const string LiteralSourceDoseForComposingCurrentDose = "121372";

    /// <summary>
    /// Literal for code: ActiveIngredientUndilutedConcentration
    /// </summary>
    public const string LiteralActiveIngredientUndilutedConcentration = "121380";

    /// <summary>
    /// Literal for code: ContrastBolusIngredientOpaque
    /// </summary>
    public const string LiteralContrastBolusIngredientOpaque = "121381";

    /// <summary>
    /// Literal for code: QuantityAdministered
    /// </summary>
    public const string LiteralQuantityAdministered = "121382";

    /// <summary>
    /// Literal for code: MassAdministered
    /// </summary>
    public const string LiteralMassAdministered = "121383";

    /// <summary>
    /// Literal for code: Derivation
    /// </summary>
    public const string LiteralDerivation = "121401";

    /// <summary>
    /// Literal for code: Normality
    /// </summary>
    public const string LiteralNormality = "121402";

    /// <summary>
    /// Literal for code: LevelOfSignificance
    /// </summary>
    public const string LiteralLevelOfSignificance = "121403";

    /// <summary>
    /// Literal for code: SelectionStatus
    /// </summary>
    public const string LiteralSelectionStatus = "121404";

    /// <summary>
    /// Literal for code: PopulationDescription
    /// </summary>
    public const string LiteralPopulationDescription = "121405";

    /// <summary>
    /// Literal for code: ReferenceAuthority
    /// </summary>
    public const string LiteralReferenceAuthority = "121406";

    /// <summary>
    /// Literal for code: NormalRangeDescription
    /// </summary>
    public const string LiteralNormalRangeDescription = "121407";

    /// <summary>
    /// Literal for code: NormalRangeAuthority
    /// </summary>
    public const string LiteralNormalRangeAuthority = "121408";

    /// <summary>
    /// Literal for code: UserChosenValue
    /// </summary>
    public const string LiteralUserChosenValue = "121410";

    /// <summary>
    /// Literal for code: MostRecentValueChosen
    /// </summary>
    public const string LiteralMostRecentValueChosen = "121411";

    /// <summary>
    /// Literal for code: MeanValueChosen
    /// </summary>
    public const string LiteralMeanValueChosen = "121412";

    /// <summary>
    /// Literal for code: StandardDeviationOfPopulation
    /// </summary>
    public const string LiteralStandardDeviationOfPopulation = "121414";

    /// <summary>
    /// Literal for code: PercentileRankingOfMeasurement
    /// </summary>
    public const string LiteralPercentileRankingOfMeasurement = "121415";

    /// <summary>
    /// Literal for code: ZScoreOfMeasurement
    /// </summary>
    public const string LiteralZScoreOfMeasurement = "121416";

    /// <summary>
    /// Literal for code: VAL2SigmaDeviationOfPopulation
    /// </summary>
    public const string LiteralVAL2SigmaDeviationOfPopulation = "121417";

    /// <summary>
    /// Literal for code: Equation
    /// </summary>
    public const string LiteralEquation = "121420";

    /// <summary>
    /// Literal for code: EquationCitation
    /// </summary>
    public const string LiteralEquationCitation = "121421";

    /// <summary>
    /// Literal for code: TableOfValuesCitation
    /// </summary>
    public const string LiteralTableOfValuesCitation = "121422";

    /// <summary>
    /// Literal for code: MethodCitation
    /// </summary>
    public const string LiteralMethodCitation = "121423";

    /// <summary>
    /// Literal for code: TableOfValues
    /// </summary>
    public const string LiteralTableOfValues = "121424";

    /// <summary>
    /// Literal for code: Index
    /// </summary>
    public const string LiteralIndex = "121425";

    /// <summary>
    /// Literal for code: Concern
    /// </summary>
    public const string LiteralConcern = "121430";

    /// <summary>
    /// Literal for code: DateTimeConcernNoted
    /// </summary>
    public const string LiteralDateTimeConcernNoted = "121431";

    /// <summary>
    /// Literal for code: DateTimeConcernResolved
    /// </summary>
    public const string LiteralDateTimeConcernResolved = "121432";

    /// <summary>
    /// Literal for code: DateTimeProblemResolved
    /// </summary>
    public const string LiteralDateTimeProblemResolved = "121433";

    /// <summary>
    /// Literal for code: ServiceDeliveryLocation
    /// </summary>
    public const string LiteralServiceDeliveryLocation = "121434";

    /// <summary>
    /// Literal for code: ServicePerformer
    /// </summary>
    public const string LiteralServicePerformer = "121435";

    /// <summary>
    /// Literal for code: MedicalDeviceUsed
    /// </summary>
    public const string LiteralMedicalDeviceUsed = "121436";

    /// <summary>
    /// Literal for code: RTPatientSetup
    /// </summary>
    public const string LiteralRTPatientSetup = "121701";

    /// <summary>
    /// Literal for code: RTPatientPositionAcquisitionSinglePlaneMV
    /// </summary>
    public const string LiteralRTPatientPositionAcquisitionSinglePlaneMV = "121702";

    /// <summary>
    /// Literal for code: RTPatientPositionAcquisitionDualPlaneMV
    /// </summary>
    public const string LiteralRTPatientPositionAcquisitionDualPlaneMV = "121703";

    /// <summary>
    /// Literal for code: RTPatientPositionAcquisitionSinglePlaneKV
    /// </summary>
    public const string LiteralRTPatientPositionAcquisitionSinglePlaneKV = "121704";

    /// <summary>
    /// Literal for code: RTPatientPositionAcquisitionDualPlaneKV
    /// </summary>
    public const string LiteralRTPatientPositionAcquisitionDualPlaneKV = "121705";

    /// <summary>
    /// Literal for code: RTPatientPositionAcquisitionDualPlaneKVMV
    /// </summary>
    public const string LiteralRTPatientPositionAcquisitionDualPlaneKVMV = "121706";

    /// <summary>
    /// Literal for code: RTPatientPositionAcquisitionCTKV
    /// </summary>
    public const string LiteralRTPatientPositionAcquisitionCTKV = "121707";

    /// <summary>
    /// Literal for code: RTPatientPositionAcquisitionCTMV
    /// </summary>
    public const string LiteralRTPatientPositionAcquisitionCTMV = "121708";

    /// <summary>
    /// Literal for code: RTPatientPositionAcquisitionOptical
    /// </summary>
    public const string LiteralRTPatientPositionAcquisitionOptical = "121709";

    /// <summary>
    /// Literal for code: RTPatientPositionAcquisitionUltrasound
    /// </summary>
    public const string LiteralRTPatientPositionAcquisitionUltrasound = "121710";

    /// <summary>
    /// Literal for code: RTPatientPositionAcquisitionSpatialFiducials
    /// </summary>
    public const string LiteralRTPatientPositionAcquisitionSpatialFiducials = "121711";

    /// <summary>
    /// Literal for code: RTPatientPositionRegistrationSinglePlane
    /// </summary>
    public const string LiteralRTPatientPositionRegistrationSinglePlane = "121712";

    /// <summary>
    /// Literal for code: RTPatientPositionRegistrationDualPlane
    /// </summary>
    public const string LiteralRTPatientPositionRegistrationDualPlane = "121713";

    /// <summary>
    /// Literal for code: RTPatientPositionRegistration3DCTGeneral
    /// </summary>
    public const string LiteralRTPatientPositionRegistration3DCTGeneral = "121714";

    /// <summary>
    /// Literal for code: RTPatientPositionRegistration3DCTMarkerBased
    /// </summary>
    public const string LiteralRTPatientPositionRegistration3DCTMarkerBased = "121715";

    /// <summary>
    /// Literal for code: RTPatientPositionRegistration3DCTVolumeBased
    /// </summary>
    public const string LiteralRTPatientPositionRegistration3DCTVolumeBased = "121716";

    /// <summary>
    /// Literal for code: RTPatientPositionRegistration3DOn2DReference
    /// </summary>
    public const string LiteralRTPatientPositionRegistration3DOn2DReference = "121717";

    /// <summary>
    /// Literal for code: RTPatientPositionRegistration2DOn3DReference
    /// </summary>
    public const string LiteralRTPatientPositionRegistration2DOn3DReference = "121718";

    /// <summary>
    /// Literal for code: RTPatientPositionRegistrationOptical
    /// </summary>
    public const string LiteralRTPatientPositionRegistrationOptical = "121719";

    /// <summary>
    /// Literal for code: RTPatientPositionRegistrationUltrasound
    /// </summary>
    public const string LiteralRTPatientPositionRegistrationUltrasound = "121720";

    /// <summary>
    /// Literal for code: RTPatientPositionRegistrationSpatialFiducials
    /// </summary>
    public const string LiteralRTPatientPositionRegistrationSpatialFiducials = "121721";

    /// <summary>
    /// Literal for code: RTPatientPositionAdjustment
    /// </summary>
    public const string LiteralRTPatientPositionAdjustment = "121722";

    /// <summary>
    /// Literal for code: RTPatientPositionInTreatmentSessionReview
    /// </summary>
    public const string LiteralRTPatientPositionInTreatmentSessionReview = "121723";

    /// <summary>
    /// Literal for code: RTTreatmentSimulationWithInternalVerification
    /// </summary>
    public const string LiteralRTTreatmentSimulationWithInternalVerification = "121724";

    /// <summary>
    /// Literal for code: RTTreatmentSimulationWithExternalVerification
    /// </summary>
    public const string LiteralRTTreatmentSimulationWithExternalVerification = "121725";

    /// <summary>
    /// Literal for code: RTTreatmentWithInternalVerification
    /// </summary>
    public const string LiteralRTTreatmentWithInternalVerification = "121726";

    /// <summary>
    /// Literal for code: RTTreatmentWithExternalVerification
    /// </summary>
    public const string LiteralRTTreatmentWithExternalVerification = "121727";

    /// <summary>
    /// Literal for code: RTTreatmentQAWithInternalVerification
    /// </summary>
    public const string LiteralRTTreatmentQAWithInternalVerification = "121728";

    /// <summary>
    /// Literal for code: RTTreatmentQAWithExternalVerification
    /// </summary>
    public const string LiteralRTTreatmentQAWithExternalVerification = "121729";

    /// <summary>
    /// Literal for code: RTMachineQA
    /// </summary>
    public const string LiteralRTMachineQA = "121730";

    /// <summary>
    /// Literal for code: RTTreatmentQAByRTPlanDoseCheck
    /// </summary>
    public const string LiteralRTTreatmentQAByRTPlanDoseCheck = "121731";

    /// <summary>
    /// Literal for code: RTTreatmentQAByRTPlanDifferenceCheck
    /// </summary>
    public const string LiteralRTTreatmentQAByRTPlanDifferenceCheck = "121732";

    /// <summary>
    /// Literal for code: RTTreatmentQAByRTIonPlanDoseCheck
    /// </summary>
    public const string LiteralRTTreatmentQAByRTIonPlanDoseCheck = "121733";

    /// <summary>
    /// Literal for code: RTTreatmentQAWithRTIonPlanDifferenceCheck
    /// </summary>
    public const string LiteralRTTreatmentQAWithRTIonPlanDifferenceCheck = "121734";

    /// <summary>
    /// Literal for code: TreatmentDeliveryType
    /// </summary>
    public const string LiteralTreatmentDeliveryType = "121740";

    /// <summary>
    /// Literal for code: PatientCalledToProcedureRoom
    /// </summary>
    public const string LiteralPatientCalledToProcedureRoom = "122001";

    /// <summary>
    /// Literal for code: PatientAdmittedToProcedureRoom
    /// </summary>
    public const string LiteralPatientAdmittedToProcedureRoom = "122002";

    /// <summary>
    /// Literal for code: PatientGivenPreProcedureInstruction
    /// </summary>
    public const string LiteralPatientGivenPreProcedureInstruction = "122003";

    /// <summary>
    /// Literal for code: PatientInformedConsentGiven
    /// </summary>
    public const string LiteralPatientInformedConsentGiven = "122004";

    /// <summary>
    /// Literal for code: PatientAdvanceDirectiveGiven
    /// </summary>
    public const string LiteralPatientAdvanceDirectiveGiven = "122005";

    /// <summary>
    /// Literal for code: NilPerOsNPOStatusConfirmed
    /// </summary>
    public const string LiteralNilPerOsNPOStatusConfirmed = "122006";

    /// <summary>
    /// Literal for code: PatientAssistedToTable
    /// </summary>
    public const string LiteralPatientAssistedToTable = "122007";

    /// <summary>
    /// Literal for code: PatientPreppedAndDraped
    /// </summary>
    public const string LiteralPatientPreppedAndDraped = "122008";

    /// <summary>
    /// Literal for code: PatientConnectedToContinuousMonitoring
    /// </summary>
    public const string LiteralPatientConnectedToContinuousMonitoring = "122009";

    /// <summary>
    /// Literal for code: PatientTransferredToHoldingArea
    /// </summary>
    public const string LiteralPatientTransferredToHoldingArea = "122010";

    /// <summary>
    /// Literal for code: PatientTransferredToSurgery
    /// </summary>
    public const string LiteralPatientTransferredToSurgery = "122011";

    /// <summary>
    /// Literal for code: PatientTransferredToCCU
    /// </summary>
    public const string LiteralPatientTransferredToCCU = "122012";

    /// <summary>
    /// Literal for code: PatientDisoriented
    /// </summary>
    public const string LiteralPatientDisoriented = "122020";

    /// <summary>
    /// Literal for code: PatientReportsNausea
    /// </summary>
    public const string LiteralPatientReportsNausea = "122021";

    /// <summary>
    /// Literal for code: PatientReportsDiscomfort
    /// </summary>
    public const string LiteralPatientReportsDiscomfort = "122022";

    /// <summary>
    /// Literal for code: PatientReportsChestPain
    /// </summary>
    public const string LiteralPatientReportsChestPain = "122023";

    /// <summary>
    /// Literal for code: PatientReportsNoPain
    /// </summary>
    public const string LiteralPatientReportsNoPain = "122024";

    /// <summary>
    /// Literal for code: PatientAlert
    /// </summary>
    public const string LiteralPatientAlert = "122025";

    /// <summary>
    /// Literal for code: PatientRestless
    /// </summary>
    public const string LiteralPatientRestless = "122026";

    /// <summary>
    /// Literal for code: PatientSedated
    /// </summary>
    public const string LiteralPatientSedated = "122027";

    /// <summary>
    /// Literal for code: PatientAsleep
    /// </summary>
    public const string LiteralPatientAsleep = "122028";

    /// <summary>
    /// Literal for code: PatientUnresponsive
    /// </summary>
    public const string LiteralPatientUnresponsive = "122029";

    /// <summary>
    /// Literal for code: PatientHasRespiratoryDifficulty
    /// </summary>
    public const string LiteralPatientHasRespiratoryDifficulty = "122030";

    /// <summary>
    /// Literal for code: PatientCoughed
    /// </summary>
    public const string LiteralPatientCoughed = "122031";

    /// <summary>
    /// Literal for code: PatientDisconnectedFromContinuousMonitoring
    /// </summary>
    public const string LiteralPatientDisconnectedFromContinuousMonitoring = "122032";

    /// <summary>
    /// Literal for code: HemostasisAchieved
    /// </summary>
    public const string LiteralHemostasisAchieved = "122033";

    /// <summary>
    /// Literal for code: HemostasisNotAchievedOozing
    /// </summary>
    public const string LiteralHemostasisNotAchievedOozing = "122034";

    /// <summary>
    /// Literal for code: HemostasisNotAchievedActivelyBleeding
    /// </summary>
    public const string LiteralHemostasisNotAchievedActivelyBleeding = "122035";

    /// <summary>
    /// Literal for code: PatientGivenPostProcedureInstruction
    /// </summary>
    public const string LiteralPatientGivenPostProcedureInstruction = "122036";

    /// <summary>
    /// Literal for code: PatientDischargedFromDepartment
    /// </summary>
    public const string LiteralPatientDischargedFromDepartment = "122037";

    /// <summary>
    /// Literal for code: PatientPronouncedDead
    /// </summary>
    public const string LiteralPatientPronouncedDead = "122038";

    /// <summary>
    /// Literal for code: PatientTransferredToMorgue
    /// </summary>
    public const string LiteralPatientTransferredToMorgue = "122039";

    /// <summary>
    /// Literal for code: PersonnelArrived
    /// </summary>
    public const string LiteralPersonnelArrived = "122041";

    /// <summary>
    /// Literal for code: PersonnelDeparted
    /// </summary>
    public const string LiteralPersonnelDeparted = "122042";

    /// <summary>
    /// Literal for code: PageSentTo
    /// </summary>
    public const string LiteralPageSentTo = "122043";

    /// <summary>
    /// Literal for code: ConsultationWith
    /// </summary>
    public const string LiteralConsultationWith = "122044";

    /// <summary>
    /// Literal for code: OfficeCalled
    /// </summary>
    public const string LiteralOfficeCalled = "122045";

    /// <summary>
    /// Literal for code: EquipmentBroughtToProcedureRoom
    /// </summary>
    public const string LiteralEquipmentBroughtToProcedureRoom = "122047";

    /// <summary>
    /// Literal for code: EquipmentReady
    /// </summary>
    public const string LiteralEquipmentReady = "122048";

    /// <summary>
    /// Literal for code: EquipmentRemoved
    /// </summary>
    public const string LiteralEquipmentRemoved = "122049";

    /// <summary>
    /// Literal for code: Bioptome
    /// </summary>
    public const string LiteralBioptome = "122052";

    /// <summary>
    /// Literal for code: ValvularIntervention
    /// </summary>
    public const string LiteralValvularIntervention = "122053";

    /// <summary>
    /// Literal for code: AorticIntervention
    /// </summary>
    public const string LiteralAorticIntervention = "122054";

    /// <summary>
    /// Literal for code: SeptalDefectIntervention
    /// </summary>
    public const string LiteralSeptalDefectIntervention = "122055";

    /// <summary>
    /// Literal for code: VascularIntervention
    /// </summary>
    public const string LiteralVascularIntervention = "122056";

    /// <summary>
    /// Literal for code: MyocardialBiopsy
    /// </summary>
    public const string LiteralMyocardialBiopsy = "122057";

    /// <summary>
    /// Literal for code: ArterialConduitAngiography
    /// </summary>
    public const string LiteralArterialConduitAngiography = "122058";

    /// <summary>
    /// Literal for code: SinglePlaneAngiography
    /// </summary>
    public const string LiteralSinglePlaneAngiography = "122059";

    /// <summary>
    /// Literal for code: BiPlaneAngiography
    /// </summary>
    public const string LiteralBiPlaneAngiography = "122060";

    /// <summary>
    /// Literal for code: PercutaneousCoronaryIntervention
    /// </summary>
    public const string LiteralPercutaneousCoronaryIntervention = "122061";

    /// <summary>
    /// Literal for code: PreProcedureLog
    /// </summary>
    public const string LiteralPreProcedureLog = "122072";

    /// <summary>
    /// Literal for code: CurrentProcedureEvidence
    /// </summary>
    public const string LiteralCurrentProcedureEvidence = "122073";

    /// <summary>
    /// Literal for code: PriorReportForCurrentPatient
    /// </summary>
    public const string LiteralPriorReportForCurrentPatient = "122075";

    /// <summary>
    /// Literal for code: ConsumableTakenFromInventory
    /// </summary>
    public const string LiteralConsumableTakenFromInventory = "122076";

    /// <summary>
    /// Literal for code: ConsumableReturnedToInventory
    /// </summary>
    public const string LiteralConsumableReturnedToInventory = "122077";

    /// <summary>
    /// Literal for code: RemainingConsumableDisposed
    /// </summary>
    public const string LiteralRemainingConsumableDisposed = "122078";

    /// <summary>
    /// Literal for code: ConsumableUnusable
    /// </summary>
    public const string LiteralConsumableUnusable = "122079";

    /// <summary>
    /// Literal for code: DrugStart
    /// </summary>
    public const string LiteralDrugStart = "122081";

    /// <summary>
    /// Literal for code: DrugEnd
    /// </summary>
    public const string LiteralDrugEnd = "122082";

    /// <summary>
    /// Literal for code: DrugAdministered
    /// </summary>
    public const string LiteralDrugAdministered = "122083";

    /// <summary>
    /// Literal for code: ContrastStart
    /// </summary>
    public const string LiteralContrastStart = "122084";

    /// <summary>
    /// Literal for code: ContrastEnd
    /// </summary>
    public const string LiteralContrastEnd = "122085";

    /// <summary>
    /// Literal for code: ContrastAdministered
    /// </summary>
    public const string LiteralContrastAdministered = "122086";

    /// <summary>
    /// Literal for code: InfusateStart
    /// </summary>
    public const string LiteralInfusateStart = "122087";

    /// <summary>
    /// Literal for code: InfusateEnd
    /// </summary>
    public const string LiteralInfusateEnd = "122088";

    /// <summary>
    /// Literal for code: DeviceCrossedLesion
    /// </summary>
    public const string LiteralDeviceCrossedLesion = "122089";

    /// <summary>
    /// Literal for code: InterventionAction
    /// </summary>
    public const string LiteralInterventionAction = "122090";

    /// <summary>
    /// Literal for code: VolumeAdministered
    /// </summary>
    public const string LiteralVolumeAdministered = "122091";

    /// <summary>
    /// Literal for code: UndilutedDoseAdministered
    /// </summary>
    public const string LiteralUndilutedDoseAdministered = "122092";

    /// <summary>
    /// Literal for code: Concentration
    /// </summary>
    public const string LiteralConcentration = "122093";

    /// <summary>
    /// Literal for code: RateOfAdministration
    /// </summary>
    public const string LiteralRateOfAdministration = "122094";

    /// <summary>
    /// Literal for code: DurationOfAdministration
    /// </summary>
    public const string LiteralDurationOfAdministration = "122095";

    /// <summary>
    /// Literal for code: VolumeUnadministeredOrDiscarded
    /// </summary>
    public const string LiteralVolumeUnadministeredOrDiscarded = "122096";

    /// <summary>
    /// Literal for code: CatheterCurve
    /// </summary>
    public const string LiteralCatheterCurve = "122097";

    /// <summary>
    /// Literal for code: TransmitFrequency
    /// </summary>
    public const string LiteralTransmitFrequency = "122098";

    /// <summary>
    /// Literal for code: STChangeFromBaseline
    /// </summary>
    public const string LiteralSTChangeFromBaseline = "122099";

    /// <summary>
    /// Literal for code: AneurysmOnCitedVessel
    /// </summary>
    public const string LiteralAneurysmOnCitedVessel = "122101";

    /// <summary>
    /// Literal for code: GraftToCitedSegmentProximalSection
    /// </summary>
    public const string LiteralGraftToCitedSegmentProximalSection = "122102";

    /// <summary>
    /// Literal for code: GraftToCitedSegmentMidSection
    /// </summary>
    public const string LiteralGraftToCitedSegmentMidSection = "122103";

    /// <summary>
    /// Literal for code: GraftToCitedSegmentDistalSection
    /// </summary>
    public const string LiteralGraftToCitedSegmentDistalSection = "122104";

    /// <summary>
    /// Literal for code: DateTimeOfIntervention
    /// </summary>
    public const string LiteralDateTimeOfIntervention = "122105";

    /// <summary>
    /// Literal for code: DurationOfIntervention
    /// </summary>
    public const string LiteralDurationOfIntervention = "122106";

    /// <summary>
    /// Literal for code: BaselineTIMIFlow
    /// </summary>
    public const string LiteralBaselineTIMIFlow = "122109";

    /// <summary>
    /// Literal for code: PostInterventionTIMIFlow
    /// </summary>
    public const string LiteralPostInterventionTIMIFlow = "122110";

    /// <summary>
    /// Literal for code: PrimaryInterventionDevice
    /// </summary>
    public const string LiteralPrimaryInterventionDevice = "122111";

    /// <summary>
    /// Literal for code: NormalMyocardium
    /// </summary>
    public const string LiteralNormalMyocardium = "122112";

    /// <summary>
    /// Literal for code: SacrredMyocardial
    /// </summary>
    public const string LiteralSacrredMyocardial = "122113";

    /// <summary>
    /// Literal for code: ThinningMyocardium
    /// </summary>
    public const string LiteralThinningMyocardium = "122114";

    /// <summary>
    /// Literal for code: HemodynamicsReport
    /// </summary>
    public const string LiteralHemodynamicsReport = "122120";

    /// <summary>
    /// Literal for code: AtrialPressureMeasurements
    /// </summary>
    public const string LiteralAtrialPressureMeasurements = "122121";

    /// <summary>
    /// Literal for code: VentricularPressureMeasurements
    /// </summary>
    public const string LiteralVentricularPressureMeasurements = "122122";

    /// <summary>
    /// Literal for code: GradientAssessment
    /// </summary>
    public const string LiteralGradientAssessment = "122123";

    /// <summary>
    /// Literal for code: BloodVelocityMeasurements
    /// </summary>
    public const string LiteralBloodVelocityMeasurements = "122124";

    /// <summary>
    /// Literal for code: BloodLabMeasurements
    /// </summary>
    public const string LiteralBloodLabMeasurements = "122125";

    /// <summary>
    /// Literal for code: DerivedHemodynamicMeasurements
    /// </summary>
    public const string LiteralDerivedHemodynamicMeasurements = "122126";

    /// <summary>
    /// Literal for code: ClinicalContext
    /// </summary>
    public const string LiteralClinicalContext = "122127";

    /// <summary>
    /// Literal for code: PatientTransferredFrom
    /// </summary>
    public const string LiteralPatientTransferredFrom = "122128";

    /// <summary>
    /// Literal for code: PCIDuringThisProcedure
    /// </summary>
    public const string LiteralPCIDuringThisProcedure = "122129";

    /// <summary>
    /// Literal for code: DoseAreaProduct
    /// </summary>
    public const string LiteralDoseAreaProduct = "122130";

    /// <summary>
    /// Literal for code: DegreeOfThrombus
    /// </summary>
    public const string LiteralDegreeOfThrombus = "122131";

    /// <summary>
    /// Literal for code: SeverityOfCalcification
    /// </summary>
    public const string LiteralSeverityOfCalcification = "122132";

    /// <summary>
    /// Literal for code: LesionMorphology
    /// </summary>
    public const string LiteralLesionMorphology = "122133";

    /// <summary>
    /// Literal for code: VesselMorphology
    /// </summary>
    public const string LiteralVesselMorphology = "122134";

    /// <summary>
    /// Literal for code: CirculatorySupport
    /// </summary>
    public const string LiteralCirculatorySupport = "122138";

    /// <summary>
    /// Literal for code: ReasonForExam
    /// </summary>
    public const string LiteralReasonForExam = "122139";

    /// <summary>
    /// Literal for code: ComparisonWithPriorExamDone
    /// </summary>
    public const string LiteralComparisonWithPriorExamDone = "122140";

    /// <summary>
    /// Literal for code: ElectrodePlacement
    /// </summary>
    public const string LiteralElectrodePlacement = "122141";

    /// <summary>
    /// Literal for code: AcquisitionDeviceType
    /// </summary>
    public const string LiteralAcquisitionDeviceType = "122142";

    /// <summary>
    /// Literal for code: AcquisitionDeviceID
    /// </summary>
    public const string LiteralAcquisitionDeviceID = "122143";

    /// <summary>
    /// Literal for code: QuantitativeAnalysis
    /// </summary>
    public const string LiteralQuantitativeAnalysis = "122144";

    /// <summary>
    /// Literal for code: QualitativeAnalysis
    /// </summary>
    public const string LiteralQualitativeAnalysis = "122145";

    /// <summary>
    /// Literal for code: ProcedureDateTime
    /// </summary>
    public const string LiteralProcedureDateTime = "122146";

    /// <summary>
    /// Literal for code: ClinicalInterpretation
    /// </summary>
    public const string LiteralClinicalInterpretation = "122147";

    /// <summary>
    /// Literal for code: LeadID
    /// </summary>
    public const string LiteralLeadID = "122148";

    /// <summary>
    /// Literal for code: BeatNumber
    /// </summary>
    public const string LiteralBeatNumber = "122149";

    /// <summary>
    /// Literal for code: CompoundStatement
    /// </summary>
    public const string LiteralCompoundStatement = "122150";

    /// <summary>
    /// Literal for code: Trend
    /// </summary>
    public const string LiteralTrend = "122151";

    /// <summary>
    /// Literal for code: Statement
    /// </summary>
    public const string LiteralStatement = "122152";

    /// <summary>
    /// Literal for code: StatementModifier
    /// </summary>
    public const string LiteralStatementModifier = "122153";

    /// <summary>
    /// Literal for code: ConjunctiveTerm
    /// </summary>
    public const string LiteralConjunctiveTerm = "122154";

    /// <summary>
    /// Literal for code: Probability
    /// </summary>
    public const string LiteralProbability = "122157";

    /// <summary>
    /// Literal for code: ECGGlobalMeasurements
    /// </summary>
    public const string LiteralECGGlobalMeasurements = "122158";

    /// <summary>
    /// Literal for code: ECGLeadMeasurements
    /// </summary>
    public const string LiteralECGLeadMeasurements = "122159";

    /// <summary>
    /// Literal for code: DerivedAreaNonValve
    /// </summary>
    public const string LiteralDerivedAreaNonValve = "122160";

    /// <summary>
    /// Literal for code: PulmonaryFlow
    /// </summary>
    public const string LiteralPulmonaryFlow = "122161";

    /// <summary>
    /// Literal for code: SystemicFlow
    /// </summary>
    public const string LiteralSystemicFlow = "122162";

    /// <summary>
    /// Literal for code: DischargeDateTime
    /// </summary>
    public const string LiteralDischargeDateTime = "122163";

    /// <summary>
    /// Literal for code: CoronaryArteryBypassDuringThisAdmission
    /// </summary>
    public const string LiteralCoronaryArteryBypassDuringThisAdmission = "122164";

    /// <summary>
    /// Literal for code: DateOfDeath
    /// </summary>
    public const string LiteralDateOfDeath = "122165";

    /// <summary>
    /// Literal for code: DeathDuringThisAdmission
    /// </summary>
    public const string LiteralDeathDuringThisAdmission = "122166";

    /// <summary>
    /// Literal for code: DeathDuringCatheterization
    /// </summary>
    public const string LiteralDeathDuringCatheterization = "122167";

    /// <summary>
    /// Literal for code: TypeOfMyocardialInfarction
    /// </summary>
    public const string LiteralTypeOfMyocardialInfarction = "122170";

    /// <summary>
    /// Literal for code: CoronaryLesionGreaterThanEquals50PercentStenosis
    /// </summary>
    public const string LiteralCoronaryLesionGreaterThanEquals50PercentStenosis = "122171";

    /// <summary>
    /// Literal for code: AcuteMIPresent
    /// </summary>
    public const string LiteralAcuteMIPresent = "122172";

    /// <summary>
    /// Literal for code: STElevationOnsetDateTime
    /// </summary>
    public const string LiteralSTElevationOnsetDateTime = "122173";

    /// <summary>
    /// Literal for code: NumberOfLesionInterventionsAttempted
    /// </summary>
    public const string LiteralNumberOfLesionInterventionsAttempted = "122175";

    /// <summary>
    /// Literal for code: NumberOfLesionInterventionsSuccessful
    /// </summary>
    public const string LiteralNumberOfLesionInterventionsSuccessful = "122176";

    /// <summary>
    /// Literal for code: ProcedureResult
    /// </summary>
    public const string LiteralProcedureResult = "122177";

    /// <summary>
    /// Literal for code: LesionInterventionInformation
    /// </summary>
    public const string LiteralLesionInterventionInformation = "122178";

    /// <summary>
    /// Literal for code: PeriProceduralMIOccurred
    /// </summary>
    public const string LiteralPeriProceduralMIOccurred = "122179";

    /// <summary>
    /// Literal for code: CKMBBaseline
    /// </summary>
    public const string LiteralCKMBBaseline = "122180";

    /// <summary>
    /// Literal for code: CKMBPeak
    /// </summary>
    public const string LiteralCKMBPeak = "122181";

    /// <summary>
    /// Literal for code: RRInterval
    /// </summary>
    public const string LiteralRRInterval = "122182";

    /// <summary>
    /// Literal for code: BloodTemperature
    /// </summary>
    public const string LiteralBloodTemperature = "122183";

    /// <summary>
    /// Literal for code: BloodOxygenContent
    /// </summary>
    public const string LiteralBloodOxygenContent = "122185";

    /// <summary>
    /// Literal for code: BloodCarbonDioxideSaturation
    /// </summary>
    public const string LiteralBloodCarbonDioxideSaturation = "122187";

    /// <summary>
    /// Literal for code: PulmonaryArterialContentFCpa
    /// </summary>
    public const string LiteralPulmonaryArterialContentFCpa = "122188";

    /// <summary>
    /// Literal for code: PulmonaryVenousContentFCpv
    /// </summary>
    public const string LiteralPulmonaryVenousContentFCpv = "122189";

    /// <summary>
    /// Literal for code: MaxDpDtP
    /// </summary>
    public const string LiteralMaxDpDtP = "122190";

    /// <summary>
    /// Literal for code: VentricularEndDiastolicPressure
    /// </summary>
    public const string LiteralVentricularEndDiastolicPressure = "122191";

    /// <summary>
    /// Literal for code: IndicatorAppearanceTime
    /// </summary>
    public const string LiteralIndicatorAppearanceTime = "122192";

    /// <summary>
    /// Literal for code: MaximumPressureAcceleration
    /// </summary>
    public const string LiteralMaximumPressureAcceleration = "122193";

    /// <summary>
    /// Literal for code: VentricularSystolicBloodPressure
    /// </summary>
    public const string LiteralVentricularSystolicBloodPressure = "122194";

    /// <summary>
    /// Literal for code: PulseStrength
    /// </summary>
    public const string LiteralPulseStrength = "122195";

    /// <summary>
    /// Literal for code: CWavePressure
    /// </summary>
    public const string LiteralCWavePressure = "122196";

    /// <summary>
    /// Literal for code: GradientPressureAverage
    /// </summary>
    public const string LiteralGradientPressureAverage = "122197";

    /// <summary>
    /// Literal for code: GradientPressurePeak
    /// </summary>
    public const string LiteralGradientPressurePeak = "122198";

    /// <summary>
    /// Literal for code: PressureAtDpDtMax
    /// </summary>
    public const string LiteralPressureAtDpDtMax = "122199";

    /// <summary>
    /// Literal for code: DiastolicBloodVelocityMean
    /// </summary>
    public const string LiteralDiastolicBloodVelocityMean = "122201";

    /// <summary>
    /// Literal for code: DiastolicBloodVelocityPeak
    /// </summary>
    public const string LiteralDiastolicBloodVelocityPeak = "122202";

    /// <summary>
    /// Literal for code: SystolicBloodVelocityMean
    /// </summary>
    public const string LiteralSystolicBloodVelocityMean = "122203";

    /// <summary>
    /// Literal for code: SystolicBloodVelocityPeak
    /// </summary>
    public const string LiteralSystolicBloodVelocityPeak = "122204";

    /// <summary>
    /// Literal for code: BloodVelocityMean
    /// </summary>
    public const string LiteralBloodVelocityMean = "122205";

    /// <summary>
    /// Literal for code: BloodVelocityMinimum
    /// </summary>
    public const string LiteralBloodVelocityMinimum = "122206";

    /// <summary>
    /// Literal for code: BloodVelocityPeak
    /// </summary>
    public const string LiteralBloodVelocityPeak = "122207";

    /// <summary>
    /// Literal for code: XDescentPressure
    /// </summary>
    public const string LiteralXDescentPressure = "122208";

    /// <summary>
    /// Literal for code: YDescentPressure
    /// </summary>
    public const string LiteralYDescentPressure = "122209";

    /// <summary>
    /// Literal for code: ZPointPressure
    /// </summary>
    public const string LiteralZPointPressure = "122210";

    /// <summary>
    /// Literal for code: LeftVentricularEjectionTime
    /// </summary>
    public const string LiteralLeftVentricularEjectionTime = "122211";

    /// <summary>
    /// Literal for code: LeftVentricularFillingTime
    /// </summary>
    public const string LiteralLeftVentricularFillingTime = "122212";

    /// <summary>
    /// Literal for code: RightVentricularEjectionTime
    /// </summary>
    public const string LiteralRightVentricularEjectionTime = "122213";

    /// <summary>
    /// Literal for code: RightVentricularFillingTime
    /// </summary>
    public const string LiteralRightVentricularFillingTime = "122214";

    /// <summary>
    /// Literal for code: TotalPulmonaryResistance
    /// </summary>
    public const string LiteralTotalPulmonaryResistance = "122215";

    /// <summary>
    /// Literal for code: TotalVascularResistance
    /// </summary>
    public const string LiteralTotalVascularResistance = "122216";

    /// <summary>
    /// Literal for code: CoronaryFlowReserve
    /// </summary>
    public const string LiteralCoronaryFlowReserve = "122217";

    /// <summary>
    /// Literal for code: DiastolicSystolicVelocityRatio
    /// </summary>
    public const string LiteralDiastolicSystolicVelocityRatio = "122218";

    /// <summary>
    /// Literal for code: HyperemicRatio
    /// </summary>
    public const string LiteralHyperemicRatio = "122219";

    /// <summary>
    /// Literal for code: HemodynamicResistanceIndex
    /// </summary>
    public const string LiteralHemodynamicResistanceIndex = "122220";

    /// <summary>
    /// Literal for code: ThoraxDiameterSagittal
    /// </summary>
    public const string LiteralThoraxDiameterSagittal = "122221";

    /// <summary>
    /// Literal for code: ProcedureEnvironmentalCharacteristics
    /// </summary>
    public const string LiteralProcedureEnvironmentalCharacteristics = "122222";

    /// <summary>
    /// Literal for code: RoomOxygenConcentration
    /// </summary>
    public const string LiteralRoomOxygenConcentration = "122223";

    /// <summary>
    /// Literal for code: RoomTemperature
    /// </summary>
    public const string LiteralRoomTemperature = "122224";

    /// <summary>
    /// Literal for code: RoomBarometricPressure
    /// </summary>
    public const string LiteralRoomBarometricPressure = "122225";

    /// <summary>
    /// Literal for code: LeftToRightFlow
    /// </summary>
    public const string LiteralLeftToRightFlow = "122227";

    /// <summary>
    /// Literal for code: RightToLeftFlow
    /// </summary>
    public const string LiteralRightToLeftFlow = "122228";

    /// <summary>
    /// Literal for code: ArteriovenousDifference
    /// </summary>
    public const string LiteralArteriovenousDifference = "122229";

    /// <summary>
    /// Literal for code: VAL10YearCHDRisk
    /// </summary>
    public const string LiteralVAL10YearCHDRisk = "122230";

    /// <summary>
    /// Literal for code: ComparativeAverage10YearCHDRisk
    /// </summary>
    public const string LiteralComparativeAverage10YearCHDRisk = "122231";

    /// <summary>
    /// Literal for code: ComparativeLow10YearCHDRisk
    /// </summary>
    public const string LiteralComparativeLow10YearCHDRisk = "122232";

    /// <summary>
    /// Literal for code: LDLCholesterolScoreSheetForMen
    /// </summary>
    public const string LiteralLDLCholesterolScoreSheetForMen = "122233";

    /// <summary>
    /// Literal for code: LDLCholesterolScoreSheetForWomen
    /// </summary>
    public const string LiteralLDLCholesterolScoreSheetForWomen = "122234";

    /// <summary>
    /// Literal for code: TotalCholesterolScoreSheetForMen
    /// </summary>
    public const string LiteralTotalCholesterolScoreSheetForMen = "122235";

    /// <summary>
    /// Literal for code: TotalCholesterolScoreSheetForWomen
    /// </summary>
    public const string LiteralTotalCholesterolScoreSheetForWomen = "122236";

    /// <summary>
    /// Literal for code: CorrectedSinusNodeRecoveryTime
    /// </summary>
    public const string LiteralCorrectedSinusNodeRecoveryTime = "122237";

    /// <summary>
    /// Literal for code: MaxVolumeNormalizedTo50mmHgPulsePressure
    /// </summary>
    public const string LiteralMaxVolumeNormalizedTo50mmHgPulsePressure = "122238";

    /// <summary>
    /// Literal for code: OxygenConsumption
    /// </summary>
    public const string LiteralOxygenConsumption = "122239";

    /// <summary>
    /// Literal for code: BSAEquals3207AsteriskWTPower0728500188LogWTAsteriskHTPower03
    /// </summary>
    public const string LiteralBSAEquals3207AsteriskWTPower0728500188LogWTAsteriskHTPower03 = "122240";

    /// <summary>
    /// Literal for code: BSAEquals0007184AsteriskWTPower0425AsteriskHTPower0725
    /// </summary>
    public const string LiteralBSAEquals0007184AsteriskWTPower0425AsteriskHTPower0725 = "122241";

    /// <summary>
    /// Literal for code: BSAEquals00235AsteriskWTPower051456AsteriskHTPower042246
    /// </summary>
    public const string LiteralBSAEquals00235AsteriskWTPower051456AsteriskHTPower042246 = "122242";

    /// <summary>
    /// Literal for code: BSAEquals0024265AsteriskWTPower05378AsteriskHTPower03964
    /// </summary>
    public const string LiteralBSAEquals0024265AsteriskWTPower05378AsteriskHTPower03964 = "122243";

    /// <summary>
    /// Literal for code: BSAEqualsHTAsteriskWT36Power05
    /// </summary>
    public const string LiteralBSAEqualsHTAsteriskWT36Power05 = "122244";

    /// <summary>
    /// Literal for code: BSAEquals1321Plus03433AsteriskWT
    /// </summary>
    public const string LiteralBSAEquals1321Plus03433AsteriskWT = "122245";

    /// <summary>
    /// Literal for code: BSAEquals00004688AsteriskWTPower0816800154AsteriskLogWT
    /// </summary>
    public const string LiteralBSAEquals00004688AsteriskWTPower0816800154AsteriskLogWT = "122246";

    /// <summary>
    /// Literal for code: VO2maleEqualsBSA13811149AsteriskLogeAgePlus0378AsteriskHRf
    /// </summary>
    public const string LiteralVO2maleEqualsBSA13811149AsteriskLogeAgePlus0378AsteriskHRf = "122247";

    /// <summary>
    /// Literal for code: VO2femaleEqualsBSA13811704AsteriskLogeAgePlus0378AsteriskHRf
    /// </summary>
    public const string LiteralVO2femaleEqualsBSA13811704AsteriskLogeAgePlus0378AsteriskHRf = "122248";

    /// <summary>
    /// Literal for code: VO2EqualsVeSTPDAsterisk10AsteriskFIO2FE02
    /// </summary>
    public const string LiteralVO2EqualsVeSTPDAsterisk10AsteriskFIO2FE02 = "122249";

    /// <summary>
    /// Literal for code: VO2Equals152AsteriskBSA
    /// </summary>
    public const string LiteralVO2Equals152AsteriskBSA = "122250";

    /// <summary>
    /// Literal for code: VO2Equals175AsteriskBSA
    /// </summary>
    public const string LiteralVO2Equals175AsteriskBSA = "122251";

    /// <summary>
    /// Literal for code: VO2Equals176AsteriskBSA
    /// </summary>
    public const string LiteralVO2Equals176AsteriskBSA = "122252";

    /// <summary>
    /// Literal for code: RobertsonAndReidTable
    /// </summary>
    public const string LiteralRobertsonAndReidTable = "122253";

    /// <summary>
    /// Literal for code: FleischTable
    /// </summary>
    public const string LiteralFleischTable = "122254";

    /// <summary>
    /// Literal for code: BoothbyTable
    /// </summary>
    public const string LiteralBoothbyTable = "122255";

    /// <summary>
    /// Literal for code: IfPremAgeLessThan3daysP50Equals199
    /// </summary>
    public const string LiteralIfPremAgeLessThan3daysP50Equals199 = "122256";

    /// <summary>
    /// Literal for code: IfAgeLessThan1dayP50Equals216
    /// </summary>
    public const string LiteralIfAgeLessThan1dayP50Equals216 = "122257";

    /// <summary>
    /// Literal for code: IfAgeLessThan30dayP50Equals246
    /// </summary>
    public const string LiteralIfAgeLessThan30dayP50Equals246 = "122258";

    /// <summary>
    /// Literal for code: IfAgeLessThan18yP50Equals272
    /// </summary>
    public const string LiteralIfAgeLessThan18yP50Equals272 = "122259";

    /// <summary>
    /// Literal for code: IfAgeLessThan40yP50Equals274
    /// </summary>
    public const string LiteralIfAgeLessThan40yP50Equals274 = "122260";

    /// <summary>
    /// Literal for code: IfAgeGreaterThan60yP50Equals293
    /// </summary>
    public const string LiteralIfAgeGreaterThan60yP50Equals293 = "122261";

    /// <summary>
    /// Literal for code: AreaEqualsFlow445AsteriskSqrtGradientMmHg
    /// </summary>
    public const string LiteralAreaEqualsFlow445AsteriskSqrtGradientMmHg = "122262";

    /// <summary>
    /// Literal for code: MVAEqualsFlow380AsteriskSqrtGradientMmHg
    /// </summary>
    public const string LiteralMVAEqualsFlow380AsteriskSqrtGradientMmHg = "122263";

    /// <summary>
    /// Literal for code: BMIEqualsWtHtPower2
    /// </summary>
    public const string LiteralBMIEqualsWtHtPower2 = "122265";

    /// <summary>
    /// Literal for code: BSAEquals0007358AsteriskWTPower0425AsteriskHTPower0725
    /// </summary>
    public const string LiteralBSAEquals0007358AsteriskWTPower0425AsteriskHTPower0725 = "122266";

    /// <summary>
    /// Literal for code: BSAEquals0010265AsteriskWTPower0423AsteriskHTPower0651
    /// </summary>
    public const string LiteralBSAEquals0010265AsteriskWTPower0423AsteriskHTPower0651 = "122267";

    /// <summary>
    /// Literal for code: BSAEquals0008883AsteriskWTPower0444AsteriskHTPower0663
    /// </summary>
    public const string LiteralBSAEquals0008883AsteriskWTPower0444AsteriskHTPower0663 = "122268";

    /// <summary>
    /// Literal for code: BSAEquals0038189AsteriskWTPower0423AsteriskHTPower0362
    /// </summary>
    public const string LiteralBSAEquals0038189AsteriskWTPower0423AsteriskHTPower0362 = "122269";

    /// <summary>
    /// Literal for code: BSAEquals0009568AsteriskWTPower0473AsteriskHTPower0655
    /// </summary>
    public const string LiteralBSAEquals0009568AsteriskWTPower0473AsteriskHTPower0655 = "122270";

    /// <summary>
    /// Literal for code: SkinConditionWarm
    /// </summary>
    public const string LiteralSkinConditionWarm = "122271";

    /// <summary>
    /// Literal for code: SkinConditionCool
    /// </summary>
    public const string LiteralSkinConditionCool = "122272";

    /// <summary>
    /// Literal for code: SkinConditionCold
    /// </summary>
    public const string LiteralSkinConditionCold = "122273";

    /// <summary>
    /// Literal for code: SkinConditionDry
    /// </summary>
    public const string LiteralSkinConditionDry = "122274";

    /// <summary>
    /// Literal for code: SkinConditionClammy
    /// </summary>
    public const string LiteralSkinConditionClammy = "122275";

    /// <summary>
    /// Literal for code: SkinConditionDiaphoretic
    /// </summary>
    public const string LiteralSkinConditionDiaphoretic = "122276";

    /// <summary>
    /// Literal for code: SkinConditionFlush
    /// </summary>
    public const string LiteralSkinConditionFlush = "122277";

    /// <summary>
    /// Literal for code: SkinConditionMottled
    /// </summary>
    public const string LiteralSkinConditionMottled = "122278";

    /// <summary>
    /// Literal for code: SkinConditionPale
    /// </summary>
    public const string LiteralSkinConditionPale = "122279";

    /// <summary>
    /// Literal for code: AirwayUnobstructed
    /// </summary>
    public const string LiteralAirwayUnobstructed = "122281";

    /// <summary>
    /// Literal for code: AirwayPartiallyObstructed
    /// </summary>
    public const string LiteralAirwayPartiallyObstructed = "122282";

    /// <summary>
    /// Literal for code: AirwaySeverelyObstructed
    /// </summary>
    public const string LiteralAirwaySeverelyObstructed = "122283";

    /// <summary>
    /// Literal for code: NotVisualized
    /// </summary>
    public const string LiteralNotVisualized = "122288";

    /// <summary>
    /// Literal for code: QuantitativeArteriographyReport
    /// </summary>
    public const string LiteralQuantitativeArteriographyReport = "122291";

    /// <summary>
    /// Literal for code: QuantitativeVentriculographyReport
    /// </summary>
    public const string LiteralQuantitativeVentriculographyReport = "122292";

    /// <summary>
    /// Literal for code: GuidewireCrossingLesionUnsuccessful
    /// </summary>
    public const string LiteralGuidewireCrossingLesionUnsuccessful = "122301";

    /// <summary>
    /// Literal for code: GuidewireCrossingLesionSuccessful
    /// </summary>
    public const string LiteralGuidewireCrossingLesionSuccessful = "122302";

    /// <summary>
    /// Literal for code: AngioplastyBalloonInflated
    /// </summary>
    public const string LiteralAngioplastyBalloonInflated = "122303";

    /// <summary>
    /// Literal for code: AngioplastyBalloonDeflated
    /// </summary>
    public const string LiteralAngioplastyBalloonDeflated = "122304";

    /// <summary>
    /// Literal for code: DeviceDeployed
    /// </summary>
    public const string LiteralDeviceDeployed = "122305";

    /// <summary>
    /// Literal for code: StentReExpanded
    /// </summary>
    public const string LiteralStentReExpanded = "122306";

    /// <summary>
    /// Literal for code: ObjectRemoved
    /// </summary>
    public const string LiteralObjectRemoved = "122307";

    /// <summary>
    /// Literal for code: RadiationApplied
    /// </summary>
    public const string LiteralRadiationApplied = "122308";

    /// <summary>
    /// Literal for code: RadiationRemoved
    /// </summary>
    public const string LiteralRadiationRemoved = "122309";

    /// <summary>
    /// Literal for code: InterventionalDevicePlacementUnsuccessful
    /// </summary>
    public const string LiteralInterventionalDevicePlacementUnsuccessful = "122310";

    /// <summary>
    /// Literal for code: InterventionalDevicePlaced
    /// </summary>
    public const string LiteralInterventionalDevicePlaced = "122311";

    /// <summary>
    /// Literal for code: InterventionPerformed
    /// </summary>
    public const string LiteralInterventionPerformed = "122312";

    /// <summary>
    /// Literal for code: InterventionalDeviceWithdrawn
    /// </summary>
    public const string LiteralInterventionalDeviceWithdrawn = "122313";

    /// <summary>
    /// Literal for code: CatheterSize
    /// </summary>
    public const string LiteralCatheterSize = "122319";

    /// <summary>
    /// Literal for code: InjectateTemperature
    /// </summary>
    public const string LiteralInjectateTemperature = "122320";

    /// <summary>
    /// Literal for code: InjectateVolume
    /// </summary>
    public const string LiteralInjectateVolume = "122321";

    /// <summary>
    /// Literal for code: CalibrationFactor
    /// </summary>
    public const string LiteralCalibrationFactor = "122322";

    /// <summary>
    /// Literal for code: IVUSReport
    /// </summary>
    public const string LiteralIVUSReport = "122325";

    /// <summary>
    /// Literal for code: EEMDiameter
    /// </summary>
    public const string LiteralEEMDiameter = "122330";

    /// <summary>
    /// Literal for code: PlaquePlusMediaThickness
    /// </summary>
    public const string LiteralPlaquePlusMediaThickness = "122331";

    /// <summary>
    /// Literal for code: LumenPerimeter
    /// </summary>
    public const string LiteralLumenPerimeter = "122332";

    /// <summary>
    /// Literal for code: EEMCrossSectionalArea
    /// </summary>
    public const string LiteralEEMCrossSectionalArea = "122333";

    /// <summary>
    /// Literal for code: PlaquePlusMediaCrossSectionalArea
    /// </summary>
    public const string LiteralPlaquePlusMediaCrossSectionalArea = "122334";

    /// <summary>
    /// Literal for code: InStentNeointimalCrossSectionalArea
    /// </summary>
    public const string LiteralInStentNeointimalCrossSectionalArea = "122335";

    /// <summary>
    /// Literal for code: VascularVolumeMeasurementLength
    /// </summary>
    public const string LiteralVascularVolumeMeasurementLength = "122336";

    /// <summary>
    /// Literal for code: RelativePosition
    /// </summary>
    public const string LiteralRelativePosition = "122337";

    /// <summary>
    /// Literal for code: StentVolumeObstruction
    /// </summary>
    public const string LiteralStentVolumeObstruction = "122339";

    /// <summary>
    /// Literal for code: FiducialFeature
    /// </summary>
    public const string LiteralFiducialFeature = "122340";

    /// <summary>
    /// Literal for code: CalciumLength
    /// </summary>
    public const string LiteralCalciumLength = "122341";

    /// <summary>
    /// Literal for code: LumenEccentricityIndex
    /// </summary>
    public const string LiteralLumenEccentricityIndex = "122343";

    /// <summary>
    /// Literal for code: PlaquePlusMediaEccentricityIndex
    /// </summary>
    public const string LiteralPlaquePlusMediaEccentricityIndex = "122344";

    /// <summary>
    /// Literal for code: RemodelingIndex
    /// </summary>
    public const string LiteralRemodelingIndex = "122345";

    /// <summary>
    /// Literal for code: StentSymmetryIndex
    /// </summary>
    public const string LiteralStentSymmetryIndex = "122346";

    /// <summary>
    /// Literal for code: StentExpansionIndex
    /// </summary>
    public const string LiteralStentExpansionIndex = "122347";

    /// <summary>
    /// Literal for code: LumenShapeIndex
    /// </summary>
    public const string LiteralLumenShapeIndex = "122348";

    /// <summary>
    /// Literal for code: LumenDiameterRatio
    /// </summary>
    public const string LiteralLumenDiameterRatio = "122350";

    /// <summary>
    /// Literal for code: StentDiameterRatio
    /// </summary>
    public const string LiteralStentDiameterRatio = "122351";

    /// <summary>
    /// Literal for code: EEMDiameterRatio
    /// </summary>
    public const string LiteralEEMDiameterRatio = "122352";

    /// <summary>
    /// Literal for code: PlaqueBurden
    /// </summary>
    public const string LiteralPlaqueBurden = "122354";

    /// <summary>
    /// Literal for code: ArcOfCalcium
    /// </summary>
    public const string LiteralArcOfCalcium = "122355";

    /// <summary>
    /// Literal for code: SoftPlaque
    /// </summary>
    public const string LiteralSoftPlaque = "122356";

    /// <summary>
    /// Literal for code: InStentNeointima
    /// </summary>
    public const string LiteralInStentNeointima = "122357";

    /// <summary>
    /// Literal for code: TrueLumen
    /// </summary>
    public const string LiteralTrueLumen = "122360";

    /// <summary>
    /// Literal for code: FalseLumen
    /// </summary>
    public const string LiteralFalseLumen = "122361";

    /// <summary>
    /// Literal for code: PlaqueRupture
    /// </summary>
    public const string LiteralPlaqueRupture = "122363";

    /// <summary>
    /// Literal for code: StentGap
    /// </summary>
    public const string LiteralStentGap = "122364";

    /// <summary>
    /// Literal for code: T1Worst
    /// </summary>
    public const string LiteralT1Worst = "122367";

    /// <summary>
    /// Literal for code: T2Secondary
    /// </summary>
    public const string LiteralT2Secondary = "122368";

    /// <summary>
    /// Literal for code: T3Secondary
    /// </summary>
    public const string LiteralT3Secondary = "122369";

    /// <summary>
    /// Literal for code: T4Secondary
    /// </summary>
    public const string LiteralT4Secondary = "122370";

    /// <summary>
    /// Literal for code: EEMVolume
    /// </summary>
    public const string LiteralEEMVolume = "122371";

    /// <summary>
    /// Literal for code: LumenVolume
    /// </summary>
    public const string LiteralLumenVolume = "122372";

    /// <summary>
    /// Literal for code: InStentNeointimalVolume
    /// </summary>
    public const string LiteralInStentNeointimalVolume = "122374";

    /// <summary>
    /// Literal for code: NativePlaqueVolume
    /// </summary>
    public const string LiteralNativePlaqueVolume = "122375";

    /// <summary>
    /// Literal for code: TotalPlaqueVolume
    /// </summary>
    public const string LiteralTotalPlaqueVolume = "122376";

    /// <summary>
    /// Literal for code: ProximalReference
    /// </summary>
    public const string LiteralProximalReference = "122380";

    /// <summary>
    /// Literal for code: DistalReference
    /// </summary>
    public const string LiteralDistalReference = "122381";

    /// <summary>
    /// Literal for code: SiteOfLumenMinimum
    /// </summary>
    public const string LiteralSiteOfLumenMinimum = "122382";

    /// <summary>
    /// Literal for code: EntirePullback
    /// </summary>
    public const string LiteralEntirePullback = "122383";

    /// <summary>
    /// Literal for code: StentedRegion
    /// </summary>
    public const string LiteralStentedRegion = "122384";

    /// <summary>
    /// Literal for code: ProximalStentMargin
    /// </summary>
    public const string LiteralProximalStentMargin = "122385";

    /// <summary>
    /// Literal for code: DistalStentMargin
    /// </summary>
    public const string LiteralDistalStentMargin = "122386";

    /// <summary>
    /// Literal for code: DissectionClassification
    /// </summary>
    public const string LiteralDissectionClassification = "122387";

    /// <summary>
    /// Literal for code: IntraStentDissection
    /// </summary>
    public const string LiteralIntraStentDissection = "122388";

    /// <summary>
    /// Literal for code: VulnerablePlaque
    /// </summary>
    public const string LiteralVulnerablePlaque = "122389";

    /// <summary>
    /// Literal for code: ErodedPlaque
    /// </summary>
    public const string LiteralErodedPlaque = "122390";

    /// <summary>
    /// Literal for code: RelativeStenosisSeverity
    /// </summary>
    public const string LiteralRelativeStenosisSeverity = "122391";

    /// <summary>
    /// Literal for code: RestenoticLesion
    /// </summary>
    public const string LiteralRestenoticLesion = "122393";

    /// <summary>
    /// Literal for code: FibroLipidicPlaque
    /// </summary>
    public const string LiteralFibroLipidicPlaque = "122394";

    /// <summary>
    /// Literal for code: NecroticLipidicPlaque
    /// </summary>
    public const string LiteralNecroticLipidicPlaque = "122395";

    /// <summary>
    /// Literal for code: IntimalDissection
    /// </summary>
    public const string LiteralIntimalDissection = "122398";

    /// <summary>
    /// Literal for code: MedialDissection
    /// </summary>
    public const string LiteralMedialDissection = "122399";

    /// <summary>
    /// Literal for code: SimultaneouslyAcquired
    /// </summary>
    public const string LiteralSimultaneouslyAcquired = "122400";

    /// <summary>
    /// Literal for code: SameAnatomy
    /// </summary>
    public const string LiteralSameAnatomy = "122401";

    /// <summary>
    /// Literal for code: SameIndication
    /// </summary>
    public const string LiteralSameIndication = "122402";

    /// <summary>
    /// Literal for code: ForAttenuationCorrection
    /// </summary>
    public const string LiteralForAttenuationCorrection = "122403";

    /// <summary>
    /// Literal for code: Reconstructed
    /// </summary>
    public const string LiteralReconstructed = "122404";

    /// <summary>
    /// Literal for code: AlgorithmManufacturer
    /// </summary>
    public const string LiteralAlgorithmManufacturer = "122405";

    /// <summary>
    /// Literal for code: LeftAtrialEjectionFractionByAngiography
    /// </summary>
    public const string LiteralLeftAtrialEjectionFractionByAngiography = "122406";

    /// <summary>
    /// Literal for code: LeftAtrialEDVolume
    /// </summary>
    public const string LiteralLeftAtrialEDVolume = "122407";

    /// <summary>
    /// Literal for code: LeftAtrialESVolume
    /// </summary>
    public const string LiteralLeftAtrialESVolume = "122408";

    /// <summary>
    /// Literal for code: ContourRealignment
    /// </summary>
    public const string LiteralContourRealignment = "122410";

    /// <summary>
    /// Literal for code: ThresholdValue
    /// </summary>
    public const string LiteralThresholdValue = "122411";

    /// <summary>
    /// Literal for code: RegionalAbnormalWallMotion
    /// </summary>
    public const string LiteralRegionalAbnormalWallMotion = "122417";

    /// <summary>
    /// Literal for code: CalibrationObject
    /// </summary>
    public const string LiteralCalibrationObject = "122421";

    /// <summary>
    /// Literal for code: CalibrationMethod
    /// </summary>
    public const string LiteralCalibrationMethod = "122422";

    /// <summary>
    /// Literal for code: CalibrationObjectSize
    /// </summary>
    public const string LiteralCalibrationObjectSize = "122423";

    /// <summary>
    /// Literal for code: AreaLengthMethod
    /// </summary>
    public const string LiteralAreaLengthMethod = "122428";

    /// <summary>
    /// Literal for code: VolumeMethod
    /// </summary>
    public const string LiteralVolumeMethod = "122429";

    /// <summary>
    /// Literal for code: ReferenceMethod
    /// </summary>
    public const string LiteralReferenceMethod = "122430";

    /// <summary>
    /// Literal for code: RegressionSlopeED
    /// </summary>
    public const string LiteralRegressionSlopeED = "122431";

    /// <summary>
    /// Literal for code: RegressionOffsetED
    /// </summary>
    public const string LiteralRegressionOffsetED = "122432";

    /// <summary>
    /// Literal for code: RegressionSlopeES
    /// </summary>
    public const string LiteralRegressionSlopeES = "122433";

    /// <summary>
    /// Literal for code: RegressionOffsetES
    /// </summary>
    public const string LiteralRegressionOffsetES = "122434";

    /// <summary>
    /// Literal for code: RegressionVolumeExponent
    /// </summary>
    public const string LiteralRegressionVolumeExponent = "122435";

    /// <summary>
    /// Literal for code: ReferencePoints
    /// </summary>
    public const string LiteralReferencePoints = "122438";

    /// <summary>
    /// Literal for code: WallThickness
    /// </summary>
    public const string LiteralWallThickness = "122445";

    /// <summary>
    /// Literal for code: WallVolume
    /// </summary>
    public const string LiteralWallVolume = "122446";

    /// <summary>
    /// Literal for code: WallMass
    /// </summary>
    public const string LiteralWallMass = "122447";

    /// <summary>
    /// Literal for code: WallStress
    /// </summary>
    public const string LiteralWallStress = "122448";

    /// <summary>
    /// Literal for code: CenterlineWallMotionAnalysis
    /// </summary>
    public const string LiteralCenterlineWallMotionAnalysis = "122449";

    /// <summary>
    /// Literal for code: NormalizedChordLength
    /// </summary>
    public const string LiteralNormalizedChordLength = "122450";

    /// <summary>
    /// Literal for code: AbnormalRegion
    /// </summary>
    public const string LiteralAbnormalRegion = "122451";

    /// <summary>
    /// Literal for code: FirstChordOfAbnormalRegion
    /// </summary>
    public const string LiteralFirstChordOfAbnormalRegion = "122452";

    /// <summary>
    /// Literal for code: LastChordOfAbnormalRegion
    /// </summary>
    public const string LiteralLastChordOfAbnormalRegion = "122453";

    /// <summary>
    /// Literal for code: TerritoryRegionSeverity
    /// </summary>
    public const string LiteralTerritoryRegionSeverity = "122459";

    /// <summary>
    /// Literal for code: OppositeRegionSeverity
    /// </summary>
    public const string LiteralOppositeRegionSeverity = "122461";

    /// <summary>
    /// Literal for code: LADRegionInRAOProjection
    /// </summary>
    public const string LiteralLADRegionInRAOProjection = "122464";

    /// <summary>
    /// Literal for code: RCARegionInROAProjection
    /// </summary>
    public const string LiteralRCARegionInROAProjection = "122465";

    /// <summary>
    /// Literal for code: SingleLADRegionInRAOProjection
    /// </summary>
    public const string LiteralSingleLADRegionInRAOProjection = "122466";

    /// <summary>
    /// Literal for code: SingleRCARegionInRAOProjection
    /// </summary>
    public const string LiteralSingleRCARegionInRAOProjection = "122467";

    /// <summary>
    /// Literal for code: MultipleLADRegionInRAOProjection
    /// </summary>
    public const string LiteralMultipleLADRegionInRAOProjection = "122468";

    /// <summary>
    /// Literal for code: MultipleRCARegionInRAOProjection
    /// </summary>
    public const string LiteralMultipleRCARegionInRAOProjection = "122469";

    /// <summary>
    /// Literal for code: LADRegionInLAOProjection
    /// </summary>
    public const string LiteralLADRegionInLAOProjection = "122470";

    /// <summary>
    /// Literal for code: RCARegionInLAOProjection
    /// </summary>
    public const string LiteralRCARegionInLAOProjection = "122471";

    /// <summary>
    /// Literal for code: CFXRegionInLAOProjection
    /// </summary>
    public const string LiteralCFXRegionInLAOProjection = "122472";

    /// <summary>
    /// Literal for code: CircularMethod
    /// </summary>
    public const string LiteralCircularMethod = "122473";

    /// <summary>
    /// Literal for code: DensitometricMethod
    /// </summary>
    public const string LiteralDensitometricMethod = "122474";

    /// <summary>
    /// Literal for code: CenterOfGravity
    /// </summary>
    public const string LiteralCenterOfGravity = "122475";

    /// <summary>
    /// Literal for code: LongAxisBased
    /// </summary>
    public const string LiteralLongAxisBased = "122476";

    /// <summary>
    /// Literal for code: NoRealignment
    /// </summary>
    public const string LiteralNoRealignment = "122477";

    /// <summary>
    /// Literal for code: VesselLumenCrossSectionalArea
    /// </summary>
    public const string LiteralVesselLumenCrossSectionalArea = "122480";

    /// <summary>
    /// Literal for code: ContourStart
    /// </summary>
    public const string LiteralContourStart = "122481";

    /// <summary>
    /// Literal for code: ContourEnd
    /// </summary>
    public const string LiteralContourEnd = "122482";

    /// <summary>
    /// Literal for code: Sphere
    /// </summary>
    public const string LiteralSphere = "122485";

    /// <summary>
    /// Literal for code: GeometricIsocenter
    /// </summary>
    public const string LiteralGeometricIsocenter = "122486";

    /// <summary>
    /// Literal for code: GeometricNonIsocenter
    /// </summary>
    public const string LiteralGeometricNonIsocenter = "122487";

    /// <summary>
    /// Literal for code: CalibrationObjectUsed
    /// </summary>
    public const string LiteralCalibrationObjectUsed = "122488";

    /// <summary>
    /// Literal for code: CurveFittedReference
    /// </summary>
    public const string LiteralCurveFittedReference = "122489";

    /// <summary>
    /// Literal for code: InterpolatedLocalReference
    /// </summary>
    public const string LiteralInterpolatedLocalReference = "122490";

    /// <summary>
    /// Literal for code: MeanLocalReference
    /// </summary>
    public const string LiteralMeanLocalReference = "122491";

    /// <summary>
    /// Literal for code: RadialBasedWallMotionAnalysis
    /// </summary>
    public const string LiteralRadialBasedWallMotionAnalysis = "122493";

    /// <summary>
    /// Literal for code: RegionalContributionToEjectionFraction
    /// </summary>
    public const string LiteralRegionalContributionToEjectionFraction = "122495";

    /// <summary>
    /// Literal for code: RadialShortening
    /// </summary>
    public const string LiteralRadialShortening = "122496";

    /// <summary>
    /// Literal for code: LandmarkBasedWallMotionAnalysis
    /// </summary>
    public const string LiteralLandmarkBasedWallMotionAnalysis = "122497";

    /// <summary>
    /// Literal for code: SliceContributionToEjectionFraction
    /// </summary>
    public const string LiteralSliceContributionToEjectionFraction = "122498";

    /// <summary>
    /// Literal for code: FrameToFrameAnalysis
    /// </summary>
    public const string LiteralFrameToFrameAnalysis = "122499";

    /// <summary>
    /// Literal for code: AreaOfClosedIrregularPolygon
    /// </summary>
    public const string LiteralAreaOfClosedIrregularPolygon = "122501";

    /// <summary>
    /// Literal for code: AreaOfAClosedNURBS
    /// </summary>
    public const string LiteralAreaOfAClosedNURBS = "122502";

    /// <summary>
    /// Literal for code: IntegrationOfSumOfClosedAreasOnContiguousSlices
    /// </summary>
    public const string LiteralIntegrationOfSumOfClosedAreasOnContiguousSlices = "122503";

    /// <summary>
    /// Literal for code: Calibration
    /// </summary>
    public const string LiteralCalibration = "122505";

    /// <summary>
    /// Literal for code: LeftContour
    /// </summary>
    public const string LiteralLeftContour = "122507";

    /// <summary>
    /// Literal for code: RightContour
    /// </summary>
    public const string LiteralRightContour = "122508";

    /// <summary>
    /// Literal for code: DiameterGraph
    /// </summary>
    public const string LiteralDiameterGraph = "122509";

    /// <summary>
    /// Literal for code: LengthLuminalSegment
    /// </summary>
    public const string LiteralLengthLuminalSegment = "122510";

    /// <summary>
    /// Literal for code: GraphIncrement
    /// </summary>
    public const string LiteralGraphIncrement = "122511";

    /// <summary>
    /// Literal for code: SiteOfMaximumLuminal
    /// </summary>
    public const string LiteralSiteOfMaximumLuminal = "122516";

    /// <summary>
    /// Literal for code: DensitometricLuminalCrossSectionalAreaGraph
    /// </summary>
    public const string LiteralDensitometricLuminalCrossSectionalAreaGraph = "122517";

    /// <summary>
    /// Literal for code: PositionOfProximalBorder
    /// </summary>
    public const string LiteralPositionOfProximalBorder = "122528";

    /// <summary>
    /// Literal for code: PositionOfDistalBorder
    /// </summary>
    public const string LiteralPositionOfDistalBorder = "122529";

    /// <summary>
    /// Literal for code: PlaqueArea
    /// </summary>
    public const string LiteralPlaqueArea = "122542";

    /// <summary>
    /// Literal for code: DiameterSymmetry
    /// </summary>
    public const string LiteralDiameterSymmetry = "122544";

    /// <summary>
    /// Literal for code: AreaSymmetry
    /// </summary>
    public const string LiteralAreaSymmetry = "122545";

    /// <summary>
    /// Literal for code: InflowAngle
    /// </summary>
    public const string LiteralInflowAngle = "122546";

    /// <summary>
    /// Literal for code: OutflowAngle
    /// </summary>
    public const string LiteralOutflowAngle = "122547";

    /// <summary>
    /// Literal for code: StenoticFlowReserve
    /// </summary>
    public const string LiteralStenoticFlowReserve = "122548";

    /// <summary>
    /// Literal for code: PoiseuilleResistance
    /// </summary>
    public const string LiteralPoiseuilleResistance = "122549";

    /// <summary>
    /// Literal for code: TurbulenceResistance
    /// </summary>
    public const string LiteralTurbulenceResistance = "122550";

    /// <summary>
    /// Literal for code: PressureDropAtSFR
    /// </summary>
    public const string LiteralPressureDropAtSFR = "122551";

    /// <summary>
    /// Literal for code: SegmentationMethod
    /// </summary>
    public const string LiteralSegmentationMethod = "122554";

    /// <summary>
    /// Literal for code: EstimatedNormalFlow
    /// </summary>
    public const string LiteralEstimatedNormalFlow = "122555";

    /// <summary>
    /// Literal for code: AreaLengthKennedy
    /// </summary>
    public const string LiteralAreaLengthKennedy = "122558";

    /// <summary>
    /// Literal for code: AreaLengthDodge
    /// </summary>
    public const string LiteralAreaLengthDodge = "122559";

    /// <summary>
    /// Literal for code: AreaLengthWynne
    /// </summary>
    public const string LiteralAreaLengthWynne = "122560";

    /// <summary>
    /// Literal for code: MultipleSlices
    /// </summary>
    public const string LiteralMultipleSlices = "122562";

    /// <summary>
    /// Literal for code: Boak
    /// </summary>
    public const string LiteralBoak = "122563";

    /// <summary>
    /// Literal for code: TSPyramid
    /// </summary>
    public const string LiteralTSPyramid = "122564";

    /// <summary>
    /// Literal for code: TwoChamber
    /// </summary>
    public const string LiteralTwoChamber = "122565";

    /// <summary>
    /// Literal for code: Parallelepiped
    /// </summary>
    public const string LiteralParallelepiped = "122566";

    /// <summary>
    /// Literal for code: BSAPower1219
    /// </summary>
    public const string LiteralBSAPower1219 = "122572";

    /// <summary>
    /// Literal for code: EquidistantMethod
    /// </summary>
    public const string LiteralEquidistantMethod = "122574";

    /// <summary>
    /// Literal for code: UserSelectedMethod
    /// </summary>
    public const string LiteralUserSelectedMethod = "122575";

    /// <summary>
    /// Literal for code: LeftVentricularPosterobasalSegment
    /// </summary>
    public const string LiteralLeftVentricularPosterobasalSegment = "122582";

    /// <summary>
    /// Literal for code: CardiovascularAnalysisReport
    /// </summary>
    public const string LiteralCardiovascularAnalysisReport = "122600";

    /// <summary>
    /// Literal for code: VentricularAnalysis
    /// </summary>
    public const string LiteralVentricularAnalysis = "122601";

    /// <summary>
    /// Literal for code: MyocardialPerfusionAnalysis
    /// </summary>
    public const string LiteralMyocardialPerfusionAnalysis = "122602";

    /// <summary>
    /// Literal for code: CalciumScoringAnalysis
    /// </summary>
    public const string LiteralCalciumScoringAnalysis = "122603";

    /// <summary>
    /// Literal for code: FlowQuantification
    /// </summary>
    public const string LiteralFlowQuantification = "122604";

    /// <summary>
    /// Literal for code: VascularMorphologicalAnalysis
    /// </summary>
    public const string LiteralVascularMorphologicalAnalysis = "122605";

    /// <summary>
    /// Literal for code: VascularFunctionalAnalysis
    /// </summary>
    public const string LiteralVascularFunctionalAnalysis = "122606";

    /// <summary>
    /// Literal for code: ThickeningAnalysis
    /// </summary>
    public const string LiteralThickeningAnalysis = "122607";

    /// <summary>
    /// Literal for code: AbsoluteValuesOfVentricularMeasurements
    /// </summary>
    public const string LiteralAbsoluteValuesOfVentricularMeasurements = "122608";

    /// <summary>
    /// Literal for code: NormalizedValuesOfVentricularMeasurements
    /// </summary>
    public const string LiteralNormalizedValuesOfVentricularMeasurements = "122609";

    /// <summary>
    /// Literal for code: ReferencePoint
    /// </summary>
    public const string LiteralReferencePoint = "122611";

    /// <summary>
    /// Literal for code: CentralBreathingPosition
    /// </summary>
    public const string LiteralCentralBreathingPosition = "122612";

    /// <summary>
    /// Literal for code: PeakEjectionRate
    /// </summary>
    public const string LiteralPeakEjectionRate = "122616";

    /// <summary>
    /// Literal for code: PeakEjectionTime
    /// </summary>
    public const string LiteralPeakEjectionTime = "122617";

    /// <summary>
    /// Literal for code: PeakFillingRate
    /// </summary>
    public const string LiteralPeakFillingRate = "122618";

    /// <summary>
    /// Literal for code: PeakFillingTime
    /// </summary>
    public const string LiteralPeakFillingTime = "122619";

    /// <summary>
    /// Literal for code: PapillaryMuscleExcluded
    /// </summary>
    public const string LiteralPapillaryMuscleExcluded = "122620";

    /// <summary>
    /// Literal for code: PapillaryMuscleIncluded
    /// </summary>
    public const string LiteralPapillaryMuscleIncluded = "122621";

    /// <summary>
    /// Literal for code: WallThicknessRatioEndSystolicToEndDiastolic
    /// </summary>
    public const string LiteralWallThicknessRatioEndSystolicToEndDiastolic = "122624";

    /// <summary>
    /// Literal for code: CurveFitMethod
    /// </summary>
    public const string LiteralCurveFitMethod = "122627";

    /// <summary>
    /// Literal for code: BaselineResultCorrection
    /// </summary>
    public const string LiteralBaselineResultCorrection = "122628";

    /// <summary>
    /// Literal for code: SignalEarliestPeakTime
    /// </summary>
    public const string LiteralSignalEarliestPeakTime = "122631";

    /// <summary>
    /// Literal for code: SignalIncreaseStartTime
    /// </summary>
    public const string LiteralSignalIncreaseStartTime = "122633";

    /// <summary>
    /// Literal for code: SignalTimeToPeak
    /// </summary>
    public const string LiteralSignalTimeToPeak = "122634";

    /// <summary>
    /// Literal for code: MRPerfusionPeak
    /// </summary>
    public const string LiteralMRPerfusionPeak = "122635";

    /// <summary>
    /// Literal for code: MRPerfusionSlope
    /// </summary>
    public const string LiteralMRPerfusionSlope = "122636";

    /// <summary>
    /// Literal for code: MRPerfusionTimeIntegral
    /// </summary>
    public const string LiteralMRPerfusionTimeIntegral = "122637";

    /// <summary>
    /// Literal for code: SignalBaselineStart
    /// </summary>
    public const string LiteralSignalBaselineStart = "122638";

    /// <summary>
    /// Literal for code: SignalBaselineEnd
    /// </summary>
    public const string LiteralSignalBaselineEnd = "122639";

    /// <summary>
    /// Literal for code: ImageInterval
    /// </summary>
    public const string LiteralImageInterval = "122640";

    /// <summary>
    /// Literal for code: VelocityEncodingMinimumValue
    /// </summary>
    public const string LiteralVelocityEncodingMinimumValue = "122642";

    /// <summary>
    /// Literal for code: VelocityEncodingMaximumValue
    /// </summary>
    public const string LiteralVelocityEncodingMaximumValue = "122643";

    /// <summary>
    /// Literal for code: NetForwardVolume
    /// </summary>
    public const string LiteralNetForwardVolume = "122645";

    /// <summary>
    /// Literal for code: AreaBasedMethod
    /// </summary>
    public const string LiteralAreaBasedMethod = "122650";

    /// <summary>
    /// Literal for code: DiameterBasedMethod
    /// </summary>
    public const string LiteralDiameterBasedMethod = "122651";

    /// <summary>
    /// Literal for code: VolumeBasedMethod
    /// </summary>
    public const string LiteralVolumeBasedMethod = "122652";

    /// <summary>
    /// Literal for code: NASCET
    /// </summary>
    public const string LiteralNASCET = "122655";

    /// <summary>
    /// Literal for code: ECST
    /// </summary>
    public const string LiteralECST = "122656";

    /// <summary>
    /// Literal for code: AgatstonScoreThreshold
    /// </summary>
    public const string LiteralAgatstonScoreThreshold = "122657";

    /// <summary>
    /// Literal for code: CalciumMassThreshold
    /// </summary>
    public const string LiteralCalciumMassThreshold = "122658";

    /// <summary>
    /// Literal for code: CalciumScoringCalibration
    /// </summary>
    public const string LiteralCalciumScoringCalibration = "122659";

    /// <summary>
    /// Literal for code: CalciumVolume
    /// </summary>
    public const string LiteralCalciumVolume = "122660";

    /// <summary>
    /// Literal for code: CalciumMass
    /// </summary>
    public const string LiteralCalciumMass = "122661";

    /// <summary>
    /// Literal for code: LateContrastEnhancement
    /// </summary>
    public const string LiteralLateContrastEnhancement = "122664";

    /// <summary>
    /// Literal for code: TimeIntervalSinceInjectionOfContrastMedia
    /// </summary>
    public const string LiteralTimeIntervalSinceInjectionOfContrastMedia = "122665";

    /// <summary>
    /// Literal for code: TimeRelativeToRWavePeak
    /// </summary>
    public const string LiteralTimeRelativeToRWavePeak = "122666";

    /// <summary>
    /// Literal for code: BloodVelocityVsTimeOfCardiacCycle
    /// </summary>
    public const string LiteralBloodVelocityVsTimeOfCardiacCycle = "122667";

    /// <summary>
    /// Literal for code: TimeIntervalSinceDetectionOfContrastBolus
    /// </summary>
    public const string LiteralTimeIntervalSinceDetectionOfContrastBolus = "122668";

    /// <summary>
    /// Literal for code: PapillaryMuscleIncludedExcluded
    /// </summary>
    public const string LiteralPapillaryMuscleIncludedExcluded = "122670";

    /// <summary>
    /// Literal for code: AnteriorPosterior
    /// </summary>
    public const string LiteralAnteriorPosterior = "122675";

    /// <summary>
    /// Literal for code: Endoleak
    /// </summary>
    public const string LiteralEndoleak = "122680";

    /// <summary>
    /// Literal for code: StentFracture
    /// </summary>
    public const string LiteralStentFracture = "122683";

    /// <summary>
    /// Literal for code: StentDisintegration
    /// </summary>
    public const string LiteralStentDisintegration = "122684";

    /// <summary>
    /// Literal for code: StentComposition
    /// </summary>
    public const string LiteralStentComposition = "122685";

    /// <summary>
    /// Literal for code: ParentVesselFinding
    /// </summary>
    public const string LiteralParentVesselFinding = "122686";

    /// <summary>
    /// Literal for code: SiteOfLumenMaximum
    /// </summary>
    public const string LiteralSiteOfLumenMaximum = "122687";

    /// <summary>
    /// Literal for code: XConcept
    /// </summary>
    public const string LiteralXConcept = "122698";

    /// <summary>
    /// Literal for code: YConcept
    /// </summary>
    public const string LiteralYConcept = "122699";

    /// <summary>
    /// Literal for code: IndicationsForPharmacologicalStress
    /// </summary>
    public const string LiteralIndicationsForPharmacologicalStress = "122700";

    /// <summary>
    /// Literal for code: ProcedureTimeBase
    /// </summary>
    public const string LiteralProcedureTimeBase = "122701";

    /// <summary>
    /// Literal for code: TreadmillSpeed
    /// </summary>
    public const string LiteralTreadmillSpeed = "122702";

    /// <summary>
    /// Literal for code: TreadmillGradient
    /// </summary>
    public const string LiteralTreadmillGradient = "122703";

    /// <summary>
    /// Literal for code: ErgometerPower
    /// </summary>
    public const string LiteralErgometerPower = "122704";

    /// <summary>
    /// Literal for code: PharmacologicalStressAgentDoseRate
    /// </summary>
    public const string LiteralPharmacologicalStressAgentDoseRate = "122705";

    /// <summary>
    /// Literal for code: RatingOfPerceivedExertion
    /// </summary>
    public const string LiteralRatingOfPerceivedExertion = "122706";

    /// <summary>
    /// Literal for code: NumberOfEctopicBeats
    /// </summary>
    public const string LiteralNumberOfEctopicBeats = "122707";

    /// <summary>
    /// Literal for code: DoubleProduct
    /// </summary>
    public const string LiteralDoubleProduct = "122708";

    /// <summary>
    /// Literal for code: ActivityWorkload
    /// </summary>
    public const string LiteralActivityWorkload = "122709";

    /// <summary>
    /// Literal for code: TimeSinceStartOfStage
    /// </summary>
    public const string LiteralTimeSinceStartOfStage = "122710";

    /// <summary>
    /// Literal for code: ExerciseDurationAfterStressAgentInjection
    /// </summary>
    public const string LiteralExerciseDurationAfterStressAgentInjection = "122711";

    /// <summary>
    /// Literal for code: ImagingStartTime
    /// </summary>
    public const string LiteralImagingStartTime = "122712";

    /// <summary>
    /// Literal for code: AttenuationCorrectionMethod
    /// </summary>
    public const string LiteralAttenuationCorrectionMethod = "122713";

    /// <summary>
    /// Literal for code: PharmacologicalStressAgentDose
    /// </summary>
    public const string LiteralPharmacologicalStressAgentDose = "122715";

    /// <summary>
    /// Literal for code: MaximumPowerOutputAchieved
    /// </summary>
    public const string LiteralMaximumPowerOutputAchieved = "122716";

    /// <summary>
    /// Literal for code: PeakActivityWorkload
    /// </summary>
    public const string LiteralPeakActivityWorkload = "122717";

    /// <summary>
    /// Literal for code: PeakDoubleProduct
    /// </summary>
    public const string LiteralPeakDoubleProduct = "122718";

    /// <summary>
    /// Literal for code: OSEMAlgorithm
    /// </summary>
    public const string LiteralOSEMAlgorithm = "122720";

    /// <summary>
    /// Literal for code: ChangMethod
    /// </summary>
    public const string LiteralChangMethod = "122721";

    /// <summary>
    /// Literal for code: AlgorithmicAttenuationCorrection
    /// </summary>
    public const string LiteralAlgorithmicAttenuationCorrection = "122726";

    /// <summary>
    /// Literal for code: NMTransmissionAttenuationCorrection
    /// </summary>
    public const string LiteralNMTransmissionAttenuationCorrection = "122727";

    /// <summary>
    /// Literal for code: CTBasedAttenuationCorrection
    /// </summary>
    public const string LiteralCTBasedAttenuationCorrection = "122728";

    /// <summary>
    /// Literal for code: NoAttenuationCorrection
    /// </summary>
    public const string LiteralNoAttenuationCorrection = "122729";

    /// <summary>
    /// Literal for code: BazettQTcAlgorithm
    /// </summary>
    public const string LiteralBazettQTcAlgorithm = "122730";

    /// <summary>
    /// Literal for code: HodgesQTcAlgorithm
    /// </summary>
    public const string LiteralHodgesQTcAlgorithm = "122731";

    /// <summary>
    /// Literal for code: FridericiaQTcAlgorithm
    /// </summary>
    public const string LiteralFridericiaQTcAlgorithm = "122732";

    /// <summary>
    /// Literal for code: FraminghamQTcAlgorithm
    /// </summary>
    public const string LiteralFraminghamQTcAlgorithm = "122733";

    /// <summary>
    /// Literal for code: BorgRPEScale
    /// </summary>
    public const string LiteralBorgRPEScale = "122734";

    /// <summary>
    /// Literal for code: BorgCR10Scale
    /// </summary>
    public const string LiteralBorgCR10Scale = "122735";

    /// <summary>
    /// Literal for code: OverallStudyQuality
    /// </summary>
    public const string LiteralOverallStudyQuality = "122739";

    /// <summary>
    /// Literal for code: ExcellentImageQuality
    /// </summary>
    public const string LiteralExcellentImageQuality = "122740";

    /// <summary>
    /// Literal for code: GoodImageQuality
    /// </summary>
    public const string LiteralGoodImageQuality = "122741";

    /// <summary>
    /// Literal for code: PoorImageQuality
    /// </summary>
    public const string LiteralPoorImageQuality = "122742";

    /// <summary>
    /// Literal for code: BodyHabitusAttenuation
    /// </summary>
    public const string LiteralBodyHabitusAttenuation = "122743";

    /// <summary>
    /// Literal for code: BreastAttenuation
    /// </summary>
    public const string LiteralBreastAttenuation = "122744";

    /// <summary>
    /// Literal for code: DiaphragmaticAttenuation
    /// </summary>
    public const string LiteralDiaphragmaticAttenuation = "122745";

    /// <summary>
    /// Literal for code: FalsePositiveDefectFinding
    /// </summary>
    public const string LiteralFalsePositiveDefectFinding = "122748";

    /// <summary>
    /// Literal for code: NonDiagnosticLowHeartRate
    /// </summary>
    public const string LiteralNonDiagnosticLowHeartRate = "122750";

    /// <summary>
    /// Literal for code: NonDiagnosticRestingSTAbnormalities
    /// </summary>
    public const string LiteralNonDiagnosticRestingSTAbnormalities = "122751";

    /// <summary>
    /// Literal for code: NonDiagnosticVentricularPacingOrLBBB
    /// </summary>
    public const string LiteralNonDiagnosticVentricularPacingOrLBBB = "122752";

    /// <summary>
    /// Literal for code: NonDiagnosticECG
    /// </summary>
    public const string LiteralNonDiagnosticECG = "122753";

    /// <summary>
    /// Literal for code: StronglyPositive
    /// </summary>
    public const string LiteralStronglyPositive = "122755";

    /// <summary>
    /// Literal for code: StronglyPositiveSTElevation
    /// </summary>
    public const string LiteralStronglyPositiveSTElevation = "122756";

    /// <summary>
    /// Literal for code: STDepressionHorizontal
    /// </summary>
    public const string LiteralSTDepressionHorizontal = "122757";

    /// <summary>
    /// Literal for code: STDepressionUpsloping
    /// </summary>
    public const string LiteralSTDepressionUpsloping = "122758";

    /// <summary>
    /// Literal for code: STDepressionDownsloping
    /// </summary>
    public const string LiteralSTDepressionDownsloping = "122759";

    /// <summary>
    /// Literal for code: StressTestScore
    /// </summary>
    public const string LiteralStressTestScore = "122760";

    /// <summary>
    /// Literal for code: NumberOfDiseasedVesselTerritories
    /// </summary>
    public const string LiteralNumberOfDiseasedVesselTerritories = "122762";

    /// <summary>
    /// Literal for code: WeightExceedsEquipmentLimit
    /// </summary>
    public const string LiteralWeightExceedsEquipmentLimit = "122764";

    /// <summary>
    /// Literal for code: DifferenceInEjectionFraction
    /// </summary>
    public const string LiteralDifferenceInEjectionFraction = "122768";

    /// <summary>
    /// Literal for code: DifferenceInEDLVVolume
    /// </summary>
    public const string LiteralDifferenceInEDLVVolume = "122769";

    /// <summary>
    /// Literal for code: RatioOfAchievedToPredictedMaximalOxygenConsumption
    /// </summary>
    public const string LiteralRatioOfAchievedToPredictedMaximalOxygenConsumption = "122770";

    /// <summary>
    /// Literal for code: RatioOfAchievedToPredictedFunctionalCapacity
    /// </summary>
    public const string LiteralRatioOfAchievedToPredictedFunctionalCapacity = "122771";

    /// <summary>
    /// Literal for code: AerobicIndex
    /// </summary>
    public const string LiteralAerobicIndex = "122772";

    /// <summary>
    /// Literal for code: STHRIndex
    /// </summary>
    public const string LiteralSTHRIndex = "122773";

    /// <summary>
    /// Literal for code: AgreementWithPriorFindings
    /// </summary>
    public const string LiteralAgreementWithPriorFindings = "122775";

    /// <summary>
    /// Literal for code: DisagreementWithPriorFindings
    /// </summary>
    public const string LiteralDisagreementWithPriorFindings = "122776";

    /// <summary>
    /// Literal for code: RestThalliumStressTechnetiumProcedure
    /// </summary>
    public const string LiteralRestThalliumStressTechnetiumProcedure = "122781";

    /// <summary>
    /// Literal for code: RestTechnetiumStressTechnetium1DayProcedure
    /// </summary>
    public const string LiteralRestTechnetiumStressTechnetium1DayProcedure = "122782";

    /// <summary>
    /// Literal for code: RestTechnetiumStressTechnetium2DayProcedure
    /// </summary>
    public const string LiteralRestTechnetiumStressTechnetium2DayProcedure = "122783";

    /// <summary>
    /// Literal for code: StressTechnetiumRestTechnetium1DayProcedure
    /// </summary>
    public const string LiteralStressTechnetiumRestTechnetium1DayProcedure = "122784";

    /// <summary>
    /// Literal for code: NMMyocardialViabilityProcedure
    /// </summary>
    public const string LiteralNMMyocardialViabilityProcedure = "122785";

    /// <summary>
    /// Literal for code: PETMyocardialPerfusionRestOnly
    /// </summary>
    public const string LiteralPETMyocardialPerfusionRestOnly = "122791";

    /// <summary>
    /// Literal for code: PETMyocardialPerfusionStressOnly
    /// </summary>
    public const string LiteralPETMyocardialPerfusionStressOnly = "122792";

    /// <summary>
    /// Literal for code: PETMyocardialPerfusionRestAndStress
    /// </summary>
    public const string LiteralPETMyocardialPerfusionRestAndStress = "122793";

    /// <summary>
    /// Literal for code: PETMyocardialViabilityRestOnly
    /// </summary>
    public const string LiteralPETMyocardialViabilityRestOnly = "122795";

    /// <summary>
    /// Literal for code: PETMyocardialViabilityStressOnly
    /// </summary>
    public const string LiteralPETMyocardialViabilityStressOnly = "122796";

    /// <summary>
    /// Literal for code: PETMyocardialViabilityRestAndStress
    /// </summary>
    public const string LiteralPETMyocardialViabilityRestAndStress = "122797";

    /// <summary>
    /// Literal for code: AnginalEquivalent
    /// </summary>
    public const string LiteralAnginalEquivalent = "122799";

    /// <summary>
    /// Literal for code: RadiopharmaceuticalStartTime
    /// </summary>
    public const string LiteralRadiopharmaceuticalStartTime = "123003";

    /// <summary>
    /// Literal for code: RadiopharmaceuticalStopTime
    /// </summary>
    public const string LiteralRadiopharmaceuticalStopTime = "123004";

    /// <summary>
    /// Literal for code: RadiopharmaceuticalVolume
    /// </summary>
    public const string LiteralRadiopharmaceuticalVolume = "123005";

    /// <summary>
    /// Literal for code: RadionuclideTotalDose
    /// </summary>
    public const string LiteralRadionuclideTotalDose = "123006";

    /// <summary>
    /// Literal for code: RadiopharmaceuticalSpecificActivity
    /// </summary>
    public const string LiteralRadiopharmaceuticalSpecificActivity = "123007";

    /// <summary>
    /// Literal for code: RadionuclideSyringeCounts
    /// </summary>
    public const string LiteralRadionuclideSyringeCounts = "123009";

    /// <summary>
    /// Literal for code: RadionuclideResidualSyringeCounts
    /// </summary>
    public const string LiteralRadionuclideResidualSyringeCounts = "123010";

    /// <summary>
    /// Literal for code: ContrastBolusAgent
    /// </summary>
    public const string LiteralContrastBolusAgent = "123011";

    /// <summary>
    /// Literal for code: PreMedication
    /// </summary>
    public const string LiteralPreMedication = "123012";

    /// <summary>
    /// Literal for code: TargetRegion
    /// </summary>
    public const string LiteralTargetRegion = "123014";

    /// <summary>
    /// Literal for code: ImagingDirection
    /// </summary>
    public const string LiteralImagingDirection = "123015";

    /// <summary>
    /// Literal for code: ImagingConditions
    /// </summary>
    public const string LiteralImagingConditions = "123016";

    /// <summary>
    /// Literal for code: Caudal10DegreeDistalCranioproximalOblique
    /// </summary>
    public const string LiteralCaudal10DegreeDistalCranioproximalOblique = "123019";

    /// <summary>
    /// Literal for code: NeighborhoodAnalysis
    /// </summary>
    public const string LiteralNeighborhoodAnalysis = "123101";

    /// <summary>
    /// Literal for code: AdaptiveFiltering
    /// </summary>
    public const string LiteralAdaptiveFiltering = "123102";

    /// <summary>
    /// Literal for code: EdgeDetection
    /// </summary>
    public const string LiteralEdgeDetection = "123103";

    /// <summary>
    /// Literal for code: MorphologicalOperations
    /// </summary>
    public const string LiteralMorphologicalOperations = "123104";

    /// <summary>
    /// Literal for code: HistogramAnalysis
    /// </summary>
    public const string LiteralHistogramAnalysis = "123105";

    /// <summary>
    /// Literal for code: MultiScaleResolutionFiltering
    /// </summary>
    public const string LiteralMultiScaleResolutionFiltering = "123106";

    /// <summary>
    /// Literal for code: ClusterAnalysis
    /// </summary>
    public const string LiteralClusterAnalysis = "123107";

    /// <summary>
    /// Literal for code: MultispectralProcessing
    /// </summary>
    public const string LiteralMultispectralProcessing = "123108";

    /// <summary>
    /// Literal for code: ManualProcessing
    /// </summary>
    public const string LiteralManualProcessing = "123109";

    /// <summary>
    /// Literal for code: ArtificialIntelligence
    /// </summary>
    public const string LiteralArtificialIntelligence = "123110";

    /// <summary>
    /// Literal for code: DeformableModels
    /// </summary>
    public const string LiteralDeformableModels = "123111";

    /// <summary>
    /// Literal for code: OBGYNUltrasoundProcedureReport
    /// </summary>
    public const string LiteralOBGYNUltrasoundProcedureReport = "125000";

    /// <summary>
    /// Literal for code: FetalBiometryRatios
    /// </summary>
    public const string LiteralFetalBiometryRatios = "125001";

    /// <summary>
    /// Literal for code: FetalBiometry
    /// </summary>
    public const string LiteralFetalBiometry = "125002";

    /// <summary>
    /// Literal for code: FetalLongBones
    /// </summary>
    public const string LiteralFetalLongBones = "125003";

    /// <summary>
    /// Literal for code: FetalCranium
    /// </summary>
    public const string LiteralFetalCranium = "125004";

    /// <summary>
    /// Literal for code: BiometryGroup
    /// </summary>
    public const string LiteralBiometryGroup = "125005";

    /// <summary>
    /// Literal for code: BiophysicalProfile
    /// </summary>
    public const string LiteralBiophysicalProfile = "125006";

    /// <summary>
    /// Literal for code: MeasurementGroup
    /// </summary>
    public const string LiteralMeasurementGroup = "125007";

    /// <summary>
    /// Literal for code: FetusSummary
    /// </summary>
    public const string LiteralFetusSummary = "125008";

    /// <summary>
    /// Literal for code: EarlyGestation
    /// </summary>
    public const string LiteralEarlyGestation = "125009";

    /// <summary>
    /// Literal for code: Identifier
    /// </summary>
    public const string LiteralIdentifier = "125010";

    /// <summary>
    /// Literal for code: PelvisAndUterus
    /// </summary>
    public const string LiteralPelvisAndUterus = "125011";

    /// <summary>
    /// Literal for code: GrowthPercentileRank
    /// </summary>
    public const string LiteralGrowthPercentileRank = "125012";

    /// <summary>
    /// Literal for code: GrowthZScore
    /// </summary>
    public const string LiteralGrowthZScore = "125013";

    /// <summary>
    /// Literal for code: FetusCharacteristics
    /// </summary>
    public const string LiteralFetusCharacteristics = "125015";

    /// <summary>
    /// Literal for code: FetalMeasurements
    /// </summary>
    public const string LiteralFetalMeasurements = "125016";

    /// <summary>
    /// Literal for code: FrameOfReferenceIdentity
    /// </summary>
    public const string LiteralFrameOfReferenceIdentity = "125021";

    /// <summary>
    /// Literal for code: FiducialAlignment
    /// </summary>
    public const string LiteralFiducialAlignment = "125022";

    /// <summary>
    /// Literal for code: AcquisitionEquipmentAlignment
    /// </summary>
    public const string LiteralAcquisitionEquipmentAlignment = "125023";

    /// <summary>
    /// Literal for code: ImageContentBasedAlignment
    /// </summary>
    public const string LiteralImageContentBasedAlignment = "125024";

    /// <summary>
    /// Literal for code: VisualAlignment
    /// </summary>
    public const string LiteralVisualAlignment = "125025";

    /// <summary>
    /// Literal for code: InterHemisphericPlane
    /// </summary>
    public const string LiteralInterHemisphericPlane = "125030";

    /// <summary>
    /// Literal for code: RightHemisphereMostAnterior
    /// </summary>
    public const string LiteralRightHemisphereMostAnterior = "125031";

    /// <summary>
    /// Literal for code: RightHemisphereMostPosterior
    /// </summary>
    public const string LiteralRightHemisphereMostPosterior = "125032";

    /// <summary>
    /// Literal for code: RightHemisphereMostSuperior
    /// </summary>
    public const string LiteralRightHemisphereMostSuperior = "125033";

    /// <summary>
    /// Literal for code: RightHemisphereMostInferior
    /// </summary>
    public const string LiteralRightHemisphereMostInferior = "125034";

    /// <summary>
    /// Literal for code: LeftHemisphereMostAnterior
    /// </summary>
    public const string LiteralLeftHemisphereMostAnterior = "125035";

    /// <summary>
    /// Literal for code: LeftHemisphereMostPosterior
    /// </summary>
    public const string LiteralLeftHemisphereMostPosterior = "125036";

    /// <summary>
    /// Literal for code: LeftHemisphereMostSuperior
    /// </summary>
    public const string LiteralLeftHemisphereMostSuperior = "125037";

    /// <summary>
    /// Literal for code: LeftHemisphereMostInferior
    /// </summary>
    public const string LiteralLeftHemisphereMostInferior = "125038";

    /// <summary>
    /// Literal for code: Background
    /// </summary>
    public const string LiteralBackground = "125040";

    /// <summary>
    /// Literal for code: RegistrationInput
    /// </summary>
    public const string LiteralRegistrationInput = "125041";

    /// <summary>
    /// Literal for code: VascularUltrasoundProcedureReport
    /// </summary>
    public const string LiteralVascularUltrasoundProcedureReport = "125100";

    /// <summary>
    /// Literal for code: VesselBranch
    /// </summary>
    public const string LiteralVesselBranch = "125101";

    /// <summary>
    /// Literal for code: GraftType
    /// </summary>
    public const string LiteralGraftType = "125102";

    /// <summary>
    /// Literal for code: MeasurementOrientation
    /// </summary>
    public const string LiteralMeasurementOrientation = "125105";

    /// <summary>
    /// Literal for code: DopplerAngle
    /// </summary>
    public const string LiteralDopplerAngle = "125106";

    /// <summary>
    /// Literal for code: SampleVolumeDepth
    /// </summary>
    public const string LiteralSampleVolumeDepth = "125107";

    /// <summary>
    /// Literal for code: PediatricCardiacUltrasoundReport
    /// </summary>
    public const string LiteralPediatricCardiacUltrasoundReport = "125195";

    /// <summary>
    /// Literal for code: FetalCardiacUltrasoundReport
    /// </summary>
    public const string LiteralFetalCardiacUltrasoundReport = "125196";

    /// <summary>
    /// Literal for code: AdultCongenitalCardiacUltrasoundReport
    /// </summary>
    public const string LiteralAdultCongenitalCardiacUltrasoundReport = "125197";

    /// <summary>
    /// Literal for code: AdultEchocardiographyProcedureReport
    /// </summary>
    public const string LiteralAdultEchocardiographyProcedureReport = "125200";

    /// <summary>
    /// Literal for code: IllustrationOfFinding
    /// </summary>
    public const string LiteralIllustrationOfFinding = "125201";

    /// <summary>
    /// Literal for code: LVWallMotionScoreIndex
    /// </summary>
    public const string LiteralLVWallMotionScoreIndex = "125202";

    /// <summary>
    /// Literal for code: AcquisitionProtocol
    /// </summary>
    public const string LiteralAcquisitionProtocol = "125203";

    /// <summary>
    /// Literal for code: AreaLengthBiplane
    /// </summary>
    public const string LiteralAreaLengthBiplane = "125204";

    /// <summary>
    /// Literal for code: AreaLengthSinglePlane
    /// </summary>
    public const string LiteralAreaLengthSinglePlane = "125205";

    /// <summary>
    /// Literal for code: Cube
    /// </summary>
    public const string LiteralCube = "125206";

    /// <summary>
    /// Literal for code: MethodOfDisksBiplane
    /// </summary>
    public const string LiteralMethodOfDisksBiplane = "125207";

    /// <summary>
    /// Literal for code: MethodOfDisksSinglePlane
    /// </summary>
    public const string LiteralMethodOfDisksSinglePlane = "125208";

    /// <summary>
    /// Literal for code: Teichholz
    /// </summary>
    public const string LiteralTeichholz = "125209";

    /// <summary>
    /// Literal for code: AreaByPressureHalfTime
    /// </summary>
    public const string LiteralAreaByPressureHalfTime = "125210";

    /// <summary>
    /// Literal for code: BiplaneEllipse
    /// </summary>
    public const string LiteralBiplaneEllipse = "125211";

    /// <summary>
    /// Literal for code: ContinuityEquation
    /// </summary>
    public const string LiteralContinuityEquation = "125212";

    /// <summary>
    /// Literal for code: ContinuityEquationByMeanVelocity
    /// </summary>
    public const string LiteralContinuityEquationByMeanVelocity = "125213";

    /// <summary>
    /// Literal for code: ContinuityEquationByPeakVelocity
    /// </summary>
    public const string LiteralContinuityEquationByPeakVelocity = "125214";

    /// <summary>
    /// Literal for code: ContinuityEquationByVelocityTimeIntegral
    /// </summary>
    public const string LiteralContinuityEquationByVelocityTimeIntegral = "125215";

    /// <summary>
    /// Literal for code: ProximalIsovelocitySurfaceArea
    /// </summary>
    public const string LiteralProximalIsovelocitySurfaceArea = "125216";

    /// <summary>
    /// Literal for code: FullBernoulli
    /// </summary>
    public const string LiteralFullBernoulli = "125217";

    /// <summary>
    /// Literal for code: SimplifiedBernoulli
    /// </summary>
    public const string LiteralSimplifiedBernoulli = "125218";

    /// <summary>
    /// Literal for code: DopplerVolumeFlow
    /// </summary>
    public const string LiteralDopplerVolumeFlow = "125219";

    /// <summary>
    /// Literal for code: Planimetry
    /// </summary>
    public const string LiteralPlanimetry = "125220";

    /// <summary>
    /// Literal for code: LeftVentricleMassByMMode
    /// </summary>
    public const string LiteralLeftVentricleMassByMMode = "125221";

    /// <summary>
    /// Literal for code: LeftVentricleMassByTruncatedEllipse
    /// </summary>
    public const string LiteralLeftVentricleMassByTruncatedEllipse = "125222";

    /// <summary>
    /// Literal for code: VAL4PointSegmentFindingScale
    /// </summary>
    public const string LiteralVAL4PointSegmentFindingScale = "125223";

    /// <summary>
    /// Literal for code: VAL5PointSegmentFindingScale
    /// </summary>
    public const string LiteralVAL5PointSegmentFindingScale = "125224";

    /// <summary>
    /// Literal for code: VAL5PointSegmentFindingScaleWithGradedHypokinesis
    /// </summary>
    public const string LiteralVAL5PointSegmentFindingScaleWithGradedHypokinesis = "125225";

    /// <summary>
    /// Literal for code: SinglePlaneEllipse
    /// </summary>
    public const string LiteralSinglePlaneEllipse = "125226";

    /// <summary>
    /// Literal for code: ModifiedSimpson
    /// </summary>
    public const string LiteralModifiedSimpson = "125227";

    /// <summary>
    /// Literal for code: BulletMethod
    /// </summary>
    public const string LiteralBulletMethod = "125228";

    /// <summary>
    /// Literal for code: StartOfDrugDoseAdministration
    /// </summary>
    public const string LiteralStartOfDrugDoseAdministration = "125233";

    /// <summary>
    /// Literal for code: StartOfContrastAgentAdministration
    /// </summary>
    public const string LiteralStartOfContrastAgentAdministration = "125234";

    /// <summary>
    /// Literal for code: DestructionOfMicrobubbles
    /// </summary>
    public const string LiteralDestructionOfMicrobubbles = "125235";

    /// <summary>
    /// Literal for code: OnsetOfExercise
    /// </summary>
    public const string LiteralOnsetOfExercise = "125236";

    /// <summary>
    /// Literal for code: CessationOfExercise
    /// </summary>
    public const string LiteralCessationOfExercise = "125237";

    /// <summary>
    /// Literal for code: OnsetOfStimulation
    /// </summary>
    public const string LiteralOnsetOfStimulation = "125238";

    /// <summary>
    /// Literal for code: CessationOfStimulation
    /// </summary>
    public const string LiteralCessationOfStimulation = "125239";

    /// <summary>
    /// Literal for code: LineScanPattern
    /// </summary>
    public const string LiteralLineScanPattern = "125240";

    /// <summary>
    /// Literal for code: PlaneScanPattern
    /// </summary>
    public const string LiteralPlaneScanPattern = "125241";

    /// <summary>
    /// Literal for code: VolumeScanPattern
    /// </summary>
    public const string LiteralVolumeScanPattern = "125242";

    /// <summary>
    /// Literal for code: NonImagingDopplerUltrasoundTransducerGeometry
    /// </summary>
    public const string LiteralNonImagingDopplerUltrasoundTransducerGeometry = "125251";

    /// <summary>
    /// Literal for code: LinearUltrasoundTransducerGeometry
    /// </summary>
    public const string LiteralLinearUltrasoundTransducerGeometry = "125252";

    /// <summary>
    /// Literal for code: CurvedLinearUltrasoundTransducerGeometry
    /// </summary>
    public const string LiteralCurvedLinearUltrasoundTransducerGeometry = "125253";

    /// <summary>
    /// Literal for code: SectorUltrasoundTransducerGeometry
    /// </summary>
    public const string LiteralSectorUltrasoundTransducerGeometry = "125254";

    /// <summary>
    /// Literal for code: RadialUltrasoundTransducerGeometry
    /// </summary>
    public const string LiteralRadialUltrasoundTransducerGeometry = "125255";

    /// <summary>
    /// Literal for code: RingUltrasoundTransducerGeometry
    /// </summary>
    public const string LiteralRingUltrasoundTransducerGeometry = "125256";

    /// <summary>
    /// Literal for code: FixedBeamDirection
    /// </summary>
    public const string LiteralFixedBeamDirection = "125257";

    /// <summary>
    /// Literal for code: MechanicalBeamSteering
    /// </summary>
    public const string LiteralMechanicalBeamSteering = "125258";

    /// <summary>
    /// Literal for code: PhasedBeamSteering
    /// </summary>
    public const string LiteralPhasedBeamSteering = "125259";

    /// <summary>
    /// Literal for code: ExternalTransducer
    /// </summary>
    public const string LiteralExternalTransducer = "125261";

    /// <summary>
    /// Literal for code: TransesophagealTransducer
    /// </summary>
    public const string LiteralTransesophagealTransducer = "125262";

    /// <summary>
    /// Literal for code: EndovaginalTransducer
    /// </summary>
    public const string LiteralEndovaginalTransducer = "125263";

    /// <summary>
    /// Literal for code: EndorectalTransducer
    /// </summary>
    public const string LiteralEndorectalTransducer = "125264";

    /// <summary>
    /// Literal for code: IntravascularTransducer
    /// </summary>
    public const string LiteralIntravascularTransducer = "125265";

    /// <summary>
    /// Literal for code: LeftVentricleMassByAreaLength
    /// </summary>
    public const string LiteralLeftVentricleMassByAreaLength = "125270";

    /// <summary>
    /// Literal for code: LeftVentricleMassByMModeAdjustedByHeight
    /// </summary>
    public const string LiteralLeftVentricleMassByMModeAdjustedByHeight = "125271";

    /// <summary>
    /// Literal for code: LeftVentricleMassByTruncatedEllipseAdjustedByHeight
    /// </summary>
    public const string LiteralLeftVentricleMassByTruncatedEllipseAdjustedByHeight = "125272";

    /// <summary>
    /// Literal for code: LeftVentricleMassByAreaLengthAdjustedByHeight
    /// </summary>
    public const string LiteralLeftVentricleMassByAreaLengthAdjustedByHeight = "125273";

    /// <summary>
    /// Literal for code: CARDIOsphere
    /// </summary>
    public const string LiteralCARDIOsphere = "125901";

    /// <summary>
    /// Literal for code: Echovist
    /// </summary>
    public const string LiteralEchovist = "125902";

    /// <summary>
    /// Literal for code: Imagify
    /// </summary>
    public const string LiteralImagify = "125903";

    /// <summary>
    /// Literal for code: Levovist
    /// </summary>
    public const string LiteralLevovist = "125904";

    /// <summary>
    /// Literal for code: Sonazoid
    /// </summary>
    public const string LiteralSonazoid = "125905";

    /// <summary>
    /// Literal for code: SonoVue
    /// </summary>
    public const string LiteralSonoVue = "125906";

    /// <summary>
    /// Literal for code: TargestarB
    /// </summary>
    public const string LiteralTargestarB = "125907";

    /// <summary>
    /// Literal for code: TargestarP
    /// </summary>
    public const string LiteralTargestarP = "125908";

    /// <summary>
    /// Literal for code: ImagingMeasurementReport
    /// </summary>
    public const string LiteralImagingMeasurementReport = "126000";

    /// <summary>
    /// Literal for code: OncologyMeasurementReport
    /// </summary>
    public const string LiteralOncologyMeasurementReport = "126001";

    /// <summary>
    /// Literal for code: DynamicContrastMRMeasurementReport
    /// </summary>
    public const string LiteralDynamicContrastMRMeasurementReport = "126002";

    /// <summary>
    /// Literal for code: PETMeasurementReport
    /// </summary>
    public const string LiteralPETMeasurementReport = "126003";

    /// <summary>
    /// Literal for code: ImagingMeasurements
    /// </summary>
    public const string LiteralImagingMeasurements = "126010";

    /// <summary>
    /// Literal for code: DerivedImagingMeasurements
    /// </summary>
    public const string LiteralDerivedImagingMeasurements = "126011";

    /// <summary>
    /// Literal for code: MultiparametricMRI
    /// </summary>
    public const string LiteralMultiparametricMRI = "126020";

    /// <summary>
    /// Literal for code: MultiparametricMRIOfProstate
    /// </summary>
    public const string LiteralMultiparametricMRIOfProstate = "126021";

    /// <summary>
    /// Literal for code: MultiparametricMRIOfWholeBody
    /// </summary>
    public const string LiteralMultiparametricMRIOfWholeBody = "126022";

    /// <summary>
    /// Literal for code: SumOfSegmentedVoxelVolumes
    /// </summary>
    public const string LiteralSumOfSegmentedVoxelVolumes = "126030";

    /// <summary>
    /// Literal for code: PeakValueWithinROI
    /// </summary>
    public const string LiteralPeakValueWithinROI = "126031";

    /// <summary>
    /// Literal for code: MetabolicVolume
    /// </summary>
    public const string LiteralMetabolicVolume = "126032";

    /// <summary>
    /// Literal for code: TotalLesionGlycolysis
    /// </summary>
    public const string LiteralTotalLesionGlycolysis = "126033";

    /// <summary>
    /// Literal for code: Glycolysis
    /// </summary>
    public const string LiteralGlycolysis = "126034";

    /// <summary>
    /// Literal for code: TotalLesionProliferation
    /// </summary>
    public const string LiteralTotalLesionProliferation = "126035";

    /// <summary>
    /// Literal for code: ProliferativeActivity
    /// </summary>
    public const string LiteralProliferativeActivity = "126036";

    /// <summary>
    /// Literal for code: StandardizedAddedMetabolicActivitySAM
    /// </summary>
    public const string LiteralStandardizedAddedMetabolicActivitySAM = "126037";

    /// <summary>
    /// Literal for code: StandardizedAddedMetabolicActivitySAMBackground
    /// </summary>
    public const string LiteralStandardizedAddedMetabolicActivitySAMBackground = "126038";

    /// <summary>
    /// Literal for code: LesionToBackgroundSUVRatio
    /// </summary>
    public const string LiteralLesionToBackgroundSUVRatio = "126039";

    /// <summary>
    /// Literal for code: BackgroundForLesionToBackgroundSUVRatio
    /// </summary>
    public const string LiteralBackgroundForLesionToBackgroundSUVRatio = "126040";

    /// <summary>
    /// Literal for code: FractalDimension
    /// </summary>
    public const string LiteralFractalDimension = "126050";

    /// <summary>
    /// Literal for code: Skewness
    /// </summary>
    public const string LiteralSkewness = "126051";

    /// <summary>
    /// Literal for code: Kurtosis
    /// </summary>
    public const string LiteralKurtosis = "126052";

    /// <summary>
    /// Literal for code: EntropyOfGLCM
    /// </summary>
    public const string LiteralEntropyOfGLCM = "126060";

    /// <summary>
    /// Literal for code: EnergyOfGLCM
    /// </summary>
    public const string LiteralEnergyOfGLCM = "126061";

    /// <summary>
    /// Literal for code: HomogeneityOfGLCM
    /// </summary>
    public const string LiteralHomogeneityOfGLCM = "126062";

    /// <summary>
    /// Literal for code: ContrastOfGLCM
    /// </summary>
    public const string LiteralContrastOfGLCM = "126063";

    /// <summary>
    /// Literal for code: DissimilarityOfGLCM
    /// </summary>
    public const string LiteralDissimilarityOfGLCM = "126064";

    /// <summary>
    /// Literal for code: ASMOfGLCM
    /// </summary>
    public const string LiteralASMOfGLCM = "126065";

    /// <summary>
    /// Literal for code: CorrelationOfGLCM
    /// </summary>
    public const string LiteralCorrelationOfGLCM = "126066";

    /// <summary>
    /// Literal for code: GrayLevelCoOccurrenceMatrixGLCM
    /// </summary>
    public const string LiteralGrayLevelCoOccurrenceMatrixGLCM = "126067";

    /// <summary>
    /// Literal for code: SubjectTimePointIdentifier
    /// </summary>
    public const string LiteralSubjectTimePointIdentifier = "126070";

    /// <summary>
    /// Literal for code: ProtocolTimePointIdentifier
    /// </summary>
    public const string LiteralProtocolTimePointIdentifier = "126071";

    /// <summary>
    /// Literal for code: TimePointType
    /// </summary>
    public const string LiteralTimePointType = "126072";

    /// <summary>
    /// Literal for code: TimePointOrder
    /// </summary>
    public const string LiteralTimePointOrder = "126073";

    /// <summary>
    /// Literal for code: Posttreatment
    /// </summary>
    public const string LiteralPosttreatment = "126074";

    /// <summary>
    /// Literal for code: Eligibility
    /// </summary>
    public const string LiteralEligibility = "126075";

    /// <summary>
    /// Literal for code: RECIST10
    /// </summary>
    public const string LiteralRECIST10 = "126080";

    /// <summary>
    /// Literal for code: RECIST11
    /// </summary>
    public const string LiteralRECIST11 = "126081";

    /// <summary>
    /// Literal for code: RealWorldValueMapUsedForMeasurement
    /// </summary>
    public const string LiteralRealWorldValueMapUsedForMeasurement = "126100";

    /// <summary>
    /// Literal for code: ImageLibraryGroup
    /// </summary>
    public const string LiteralImageLibraryGroup = "126200";

    /// <summary>
    /// Literal for code: AcquisitionDate
    /// </summary>
    public const string LiteralAcquisitionDate = "126201";

    /// <summary>
    /// Literal for code: AcquisitionTime
    /// </summary>
    public const string LiteralAcquisitionTime = "126202";

    /// <summary>
    /// Literal for code: PETRadionuclideIncubationTime
    /// </summary>
    public const string LiteralPETRadionuclideIncubationTime = "126203";

    /// <summary>
    /// Literal for code: R2Coefficient
    /// </summary>
    public const string LiteralR2Coefficient = "126220";

    /// <summary>
    /// Literal for code: PerfusionAnalysisByStableXenonCTTechnique
    /// </summary>
    public const string LiteralPerfusionAnalysisByStableXenonCTTechnique = "126300";

    /// <summary>
    /// Literal for code: PerfusionAnalysisByIVIodinatedContrastCTTechnique
    /// </summary>
    public const string LiteralPerfusionAnalysisByIVIodinatedContrastCTTechnique = "126301";

    /// <summary>
    /// Literal for code: PerfusionAnalysisByArterialSpinLabelingMRTechnique
    /// </summary>
    public const string LiteralPerfusionAnalysisByArterialSpinLabelingMRTechnique = "126302";

    /// <summary>
    /// Literal for code: PerfusionAnalysisBySusceptibilityMRTechnique
    /// </summary>
    public const string LiteralPerfusionAnalysisBySusceptibilityMRTechnique = "126303";

    /// <summary>
    /// Literal for code: LeastMeanSquareLMSDeconvolution
    /// </summary>
    public const string LiteralLeastMeanSquareLMSDeconvolution = "126310";

    /// <summary>
    /// Literal for code: SingularValueDecompositionSVDDeconvolution
    /// </summary>
    public const string LiteralSingularValueDecompositionSVDDeconvolution = "126311";

    /// <summary>
    /// Literal for code: Ktrans
    /// </summary>
    public const string LiteralKtrans = "126312";

    /// <summary>
    /// Literal for code: Kep
    /// </summary>
    public const string LiteralKep = "126313";

    /// <summary>
    /// Literal for code: Ve
    /// </summary>
    public const string LiteralVe = "126314";

    /// <summary>
    /// Literal for code: IAUC
    /// </summary>
    public const string LiteralIAUC = "126320";

    /// <summary>
    /// Literal for code: IAUC60
    /// </summary>
    public const string LiteralIAUC60 = "126321";

    /// <summary>
    /// Literal for code: IAUC90
    /// </summary>
    public const string LiteralIAUC90 = "126322";

    /// <summary>
    /// Literal for code: TauM
    /// </summary>
    public const string LiteralTauM = "126330";

    /// <summary>
    /// Literal for code: Vp
    /// </summary>
    public const string LiteralVp = "126331";

    /// <summary>
    /// Literal for code: StandardToftsModel
    /// </summary>
    public const string LiteralStandardToftsModel = "126340";

    /// <summary>
    /// Literal for code: ExtendedToftsModel
    /// </summary>
    public const string LiteralExtendedToftsModel = "126341";

    /// <summary>
    /// Literal for code: ModelFreeConcentrationTimeQuantitification
    /// </summary>
    public const string LiteralModelFreeConcentrationTimeQuantitification = "126342";

    /// <summary>
    /// Literal for code: FirstPassLeakageProfileFPLP
    /// </summary>
    public const string LiteralFirstPassLeakageProfileFPLP = "126343";

    /// <summary>
    /// Literal for code: ShutterSpeedModelSSM
    /// </summary>
    public const string LiteralShutterSpeedModelSSM = "126344";

    /// <summary>
    /// Literal for code: T1ByMultipleFlipAngles
    /// </summary>
    public const string LiteralT1ByMultipleFlipAngles = "126350";

    /// <summary>
    /// Literal for code: T1ByInversionRecovery
    /// </summary>
    public const string LiteralT1ByInversionRecovery = "126351";

    /// <summary>
    /// Literal for code: T1ByFixedValue
    /// </summary>
    public const string LiteralT1ByFixedValue = "126352";

    /// <summary>
    /// Literal for code: T1UsedForCalculation
    /// </summary>
    public const string LiteralT1UsedForCalculation = "126353";

    /// <summary>
    /// Literal for code: AIFIgnored
    /// </summary>
    public const string LiteralAIFIgnored = "126360";

    /// <summary>
    /// Literal for code: PopulationAveragedAIF
    /// </summary>
    public const string LiteralPopulationAveragedAIF = "126361";

    /// <summary>
    /// Literal for code: UserDefinedAIFROI
    /// </summary>
    public const string LiteralUserDefinedAIFROI = "126362";

    /// <summary>
    /// Literal for code: AutomaticallyDetectedAIFROI
    /// </summary>
    public const string LiteralAutomaticallyDetectedAIFROI = "126363";

    /// <summary>
    /// Literal for code: BlindEstimationOfAIF
    /// </summary>
    public const string LiteralBlindEstimationOfAIF = "126364";

    /// <summary>
    /// Literal for code: TimeOfPeakConcentration
    /// </summary>
    public const string LiteralTimeOfPeakConcentration = "126370";

    /// <summary>
    /// Literal for code: BolusArrivalTime
    /// </summary>
    public const string LiteralBolusArrivalTime = "126371";

    /// <summary>
    /// Literal for code: TimeOfLeadingHalfPeakConcentration
    /// </summary>
    public const string LiteralTimeOfLeadingHalfPeakConcentration = "126372";

    /// <summary>
    /// Literal for code: TemporalDerivativeExceedsThreshold
    /// </summary>
    public const string LiteralTemporalDerivativeExceedsThreshold = "126373";

    /// <summary>
    /// Literal for code: TemporalDerivativeThreshold
    /// </summary>
    public const string LiteralTemporalDerivativeThreshold = "126374";

    /// <summary>
    /// Literal for code: MaximumSlope
    /// </summary>
    public const string LiteralMaximumSlope = "126375";

    /// <summary>
    /// Literal for code: MaximumDifference
    /// </summary>
    public const string LiteralMaximumDifference = "126376";

    /// <summary>
    /// Literal for code: TracerConcentration
    /// </summary>
    public const string LiteralTracerConcentration = "126377";

    /// <summary>
    /// Literal for code: ContrastLongitudinalRelaxivity
    /// </summary>
    public const string LiteralContrastLongitudinalRelaxivity = "126380";

    /// <summary>
    /// Literal for code: RegionalBloodFlow
    /// </summary>
    public const string LiteralRegionalBloodFlow = "126390";

    /// <summary>
    /// Literal for code: RegionalBloodVolume
    /// </summary>
    public const string LiteralRegionalBloodVolume = "126391";

    /// <summary>
    /// Literal for code: OxygenExtractionFraction
    /// </summary>
    public const string LiteralOxygenExtractionFraction = "126392";

    /// <summary>
    /// Literal for code: R1
    /// </summary>
    public const string LiteralR1 = "126393";

    /// <summary>
    /// Literal for code: R2
    /// </summary>
    public const string LiteralR2 = "126394";

    /// <summary>
    /// Literal for code: StandardizedUptakeValue
    /// </summary>
    public const string LiteralStandardizedUptakeValue = "126400";

    /// <summary>
    /// Literal for code: SUVbw
    /// </summary>
    public const string LiteralSUVbw = "126401";

    /// <summary>
    /// Literal for code: SUVlbm
    /// </summary>
    public const string LiteralSUVlbm = "126402";

    /// <summary>
    /// Literal for code: SUVbsa
    /// </summary>
    public const string LiteralSUVbsa = "126403";

    /// <summary>
    /// Literal for code: SUVibw
    /// </summary>
    public const string LiteralSUVibw = "126404";

    /// <summary>
    /// Literal for code: SUVBodyWeightCalculationMethod
    /// </summary>
    public const string LiteralSUVBodyWeightCalculationMethod = "126410";

    /// <summary>
    /// Literal for code: SUVLeanBodyMassCalculationMethod
    /// </summary>
    public const string LiteralSUVLeanBodyMassCalculationMethod = "126411";

    /// <summary>
    /// Literal for code: SUVBodySurfaceAreaCalculationMethod
    /// </summary>
    public const string LiteralSUVBodySurfaceAreaCalculationMethod = "126412";

    /// <summary>
    /// Literal for code: SUVIdealBodyWeightCalculationMethod
    /// </summary>
    public const string LiteralSUVIdealBodyWeightCalculationMethod = "126413";

    /// <summary>
    /// Literal for code: PittsburghCompoundBCPower11Power
    /// </summary>
    public const string LiteralPittsburghCompoundBCPower11Power = "126500";

    /// <summary>
    /// Literal for code: FlorbetabenFPower18Power
    /// </summary>
    public const string LiteralFlorbetabenFPower18Power = "126501";

    /// <summary>
    /// Literal for code: T807FPower18Power
    /// </summary>
    public const string LiteralT807FPower18Power = "126502";

    /// <summary>
    /// Literal for code: FlubatineFPower18Power
    /// </summary>
    public const string LiteralFlubatineFPower18Power = "126503";

    /// <summary>
    /// Literal for code: MonoclonalAntibodyMAbPower64PowerCu
    /// </summary>
    public const string LiteralMonoclonalAntibodyMAbPower64PowerCu = "126510";

    /// <summary>
    /// Literal for code: MonoclonalAntibodyMAbPower89PowerZr
    /// </summary>
    public const string LiteralMonoclonalAntibodyMAbPower89PowerZr = "126511";

    /// <summary>
    /// Literal for code: TrastuzumabPower89PowerZr
    /// </summary>
    public const string LiteralTrastuzumabPower89PowerZr = "126512";

    /// <summary>
    /// Literal for code: CetuximabPower89PowerZr
    /// </summary>
    public const string LiteralCetuximabPower89PowerZr = "126513";

    /// <summary>
    /// Literal for code: J591Power89PowerZr
    /// </summary>
    public const string LiteralJ591Power89PowerZr = "126514";

    /// <summary>
    /// Literal for code: CU36Power89PowerZr
    /// </summary>
    public const string LiteralCU36Power89PowerZr = "126515";

    /// <summary>
    /// Literal for code: BevacizumabPower89PowerZr
    /// </summary>
    public const string LiteralBevacizumabPower89PowerZr = "126516";

    /// <summary>
    /// Literal for code: CG250FAbQuote2Power89PowerZr
    /// </summary>
    public const string LiteralCG250FAbQuote2Power89PowerZr = "126517";

    /// <summary>
    /// Literal for code: R1507Power89PowerZr
    /// </summary>
    public const string LiteralR1507Power89PowerZr = "126518";

    /// <summary>
    /// Literal for code: E4G10Power89PowerZr
    /// </summary>
    public const string LiteralE4G10Power89PowerZr = "126519";

    /// <summary>
    /// Literal for code: DfCD45Power89PowerZr
    /// </summary>
    public const string LiteralDfCD45Power89PowerZr = "126520";

    /// <summary>
    /// Literal for code: Power44PowerScandium
    /// </summary>
    public const string LiteralPower44PowerScandium = "126600";

    /// <summary>
    /// Literal for code: Power51PowerManganese
    /// </summary>
    public const string LiteralPower51PowerManganese = "126601";

    /// <summary>
    /// Literal for code: Power70PowerArsenic
    /// </summary>
    public const string LiteralPower70PowerArsenic = "126602";

    /// <summary>
    /// Literal for code: Power90PowerNiobium
    /// </summary>
    public const string LiteralPower90PowerNiobium = "126603";

    /// <summary>
    /// Literal for code: Power191mPowerIridium
    /// </summary>
    public const string LiteralPower191mPowerIridium = "126604";

    /// <summary>
    /// Literal for code: Power43PowerScandium
    /// </summary>
    public const string LiteralPower43PowerScandium = "126605";

    /// <summary>
    /// Literal for code: Power152PowerTerbium
    /// </summary>
    public const string LiteralPower152PowerTerbium = "126606";

    /// <summary>
    /// Literal for code: ATSMCuPower60Power
    /// </summary>
    public const string LiteralATSMCuPower60Power = "126700";

    /// <summary>
    /// Literal for code: ATSMCuPower61Power
    /// </summary>
    public const string LiteralATSMCuPower61Power = "126701";

    /// <summary>
    /// Literal for code: ATSMCuPower62Power
    /// </summary>
    public const string LiteralATSMCuPower62Power = "126702";

    /// <summary>
    /// Literal for code: CholineCPower11Power
    /// </summary>
    public const string LiteralCholineCPower11Power = "126703";

    /// <summary>
    /// Literal for code: FallyprideCPower11Power
    /// </summary>
    public const string LiteralFallyprideCPower11Power = "126704";

    /// <summary>
    /// Literal for code: FallyprideFPower18Power
    /// </summary>
    public const string LiteralFallyprideFPower18Power = "126705";

    /// <summary>
    /// Literal for code: FLB457CPower11Power
    /// </summary>
    public const string LiteralFLB457CPower11Power = "126706";

    /// <summary>
    /// Literal for code: FluorotrioprideFPower18Power
    /// </summary>
    public const string LiteralFluorotrioprideFPower18Power = "126707";

    /// <summary>
    /// Literal for code: FluoromisonidazoleFMISOFPower18Power
    /// </summary>
    public const string LiteralFluoromisonidazoleFMISOFPower18Power = "126708";

    /// <summary>
    /// Literal for code: GlutamineCPower11Power
    /// </summary>
    public const string LiteralGlutamineCPower11Power = "126709";

    /// <summary>
    /// Literal for code: GlutamineCPower14Power
    /// </summary>
    public const string LiteralGlutamineCPower14Power = "126710";

    /// <summary>
    /// Literal for code: GlutamineFPower18Power
    /// </summary>
    public const string LiteralGlutamineFPower18Power = "126711";

    /// <summary>
    /// Literal for code: FlubatineFPower18Power_2
    /// </summary>
    public const string LiteralFlubatineFPower18Power_2 = "126712";

    /// <summary>
    /// Literal for code: VAL2FAFPower18Power
    /// </summary>
    public const string LiteralVAL2FAFPower18Power = "126713";

    /// <summary>
    /// Literal for code: NifeneFPower18Power
    /// </summary>
    public const string LiteralNifeneFPower18Power = "126714";

    /// <summary>
    /// Literal for code: CLR1404IPower124Power
    /// </summary>
    public const string LiteralCLR1404IPower124Power = "126715";

    /// <summary>
    /// Literal for code: CLR1404IPower131Power
    /// </summary>
    public const string LiteralCLR1404IPower131Power = "126716";

    /// <summary>
    /// Literal for code: IEC6127PatientSupportContinuousAngle
    /// </summary>
    public const string LiteralIEC6127PatientSupportContinuousAngle = "126801";

    /// <summary>
    /// Literal for code: IEC6127TableTopContinuousPitchAngle
    /// </summary>
    public const string LiteralIEC6127TableTopContinuousPitchAngle = "126802";

    /// <summary>
    /// Literal for code: IEC6127TableTopContinuousRollAngle
    /// </summary>
    public const string LiteralIEC6127TableTopContinuousRollAngle = "126803";

    /// <summary>
    /// Literal for code: IEC6127TableTopEccentricAxisDistance
    /// </summary>
    public const string LiteralIEC6127TableTopEccentricAxisDistance = "126804";

    /// <summary>
    /// Literal for code: IEC6127TableTopContinuousEccentricAngle
    /// </summary>
    public const string LiteralIEC6127TableTopContinuousEccentricAngle = "126805";

    /// <summary>
    /// Literal for code: IEC6127TableTopLateralPosition
    /// </summary>
    public const string LiteralIEC6127TableTopLateralPosition = "126806";

    /// <summary>
    /// Literal for code: IEC6127TableTopLongitudinalPosition
    /// </summary>
    public const string LiteralIEC6127TableTopLongitudinalPosition = "126807";

    /// <summary>
    /// Literal for code: IEC6127TableTopVerticalPosition
    /// </summary>
    public const string LiteralIEC6127TableTopVerticalPosition = "126808";

    /// <summary>
    /// Literal for code: IEC6127GantryContinuousRollAngle
    /// </summary>
    public const string LiteralIEC6127GantryContinuousRollAngle = "126809";

    /// <summary>
    /// Literal for code: IEC6127GantryContinuousPitchAngle
    /// </summary>
    public const string LiteralIEC6127GantryContinuousPitchAngle = "126810";

    /// <summary>
    /// Literal for code: IEC6127GantryContinuousYawAngle
    /// </summary>
    public const string LiteralIEC6127GantryContinuousYawAngle = "126811";

    /// <summary>
    /// Literal for code: Autorefraction
    /// </summary>
    public const string LiteralAutorefraction = "AR";

    /// <summary>
    /// Literal for code: Archive
    /// </summary>
    public const string LiteralArchive = "ARCHIVE";

    /// <summary>
    /// Literal for code: Audio
    /// </summary>
    public const string LiteralAudio = "AU";

    /// <summary>
    /// Literal for code: UltrasoundBoneDensitometry
    /// </summary>
    public const string LiteralUltrasoundBoneDensitometry = "BDUS";

    /// <summary>
    /// Literal for code: BiomagneticImaging
    /// </summary>
    public const string LiteralBiomagneticImaging = "BI";

    /// <summary>
    /// Literal for code: BoneMineralDensitometry
    /// </summary>
    public const string LiteralBoneMineralDensitometry = "BMD";

    /// <summary>
    /// Literal for code: ComputerAssistedDetectionDiagnosis
    /// </summary>
    public const string LiteralComputerAssistedDetectionDiagnosis = "CAD";

    /// <summary>
    /// Literal for code: ImageCapture
    /// </summary>
    public const string LiteralImageCapture = "CAPTURE";

    /// <summary>
    /// Literal for code: ComputationServer
    /// </summary>
    public const string LiteralComputationServer = "COMP";

    /// <summary>
    /// Literal for code: ComputedRadiography
    /// </summary>
    public const string LiteralComputedRadiography = "CR";

    /// <summary>
    /// Literal for code: ComputedTomography
    /// </summary>
    public const string LiteralComputedTomography = "CT";

    /// <summary>
    /// Literal for code: Diaphanography
    /// </summary>
    public const string LiteralDiaphanography = "DG";

    /// <summary>
    /// Literal for code: DocumentDigitizerEquipment
    /// </summary>
    public const string LiteralDocumentDigitizerEquipment = "DOCD";

    /// <summary>
    /// Literal for code: ADocumentOperation
    /// </summary>
    public const string LiteralADocumentOperation = "document";

    /// <summary>
    /// Literal for code: DepartmentSystemScheduler
    /// </summary>
    public const string LiteralDepartmentSystemScheduler = "DSS";

    /// <summary>
    /// Literal for code: DigitalRadiography
    /// </summary>
    public const string LiteralDigitalRadiography = "DX";

    /// <summary>
    /// Literal for code: Electrocardiography
    /// </summary>
    public const string LiteralElectrocardiography = "ECG";

    /// <summary>
    /// Literal for code: CardiacElectrophysiology
    /// </summary>
    public const string LiteralCardiacElectrophysiology = "EPS";

    /// <summary>
    /// Literal for code: Endoscopy
    /// </summary>
    public const string LiteralEndoscopy = "ES";

    /// <summary>
    /// Literal for code: Female
    /// </summary>
    public const string LiteralFemale = "F";

    /// <summary>
    /// Literal for code: FemaleChangedToMale
    /// </summary>
    public const string LiteralFemaleChangedToMale = "FC";

    /// <summary>
    /// Literal for code: FilmDigitizer
    /// </summary>
    public const string LiteralFilmDigitizer = "FILMD";

    /// <summary>
    /// Literal for code: FemalePseudohermaphrodite
    /// </summary>
    public const string LiteralFemalePseudohermaphrodite = "FP";

    /// <summary>
    /// Literal for code: GeneralMicroscopy
    /// </summary>
    public const string LiteralGeneralMicroscopy = "GM";

    /// <summary>
    /// Literal for code: Hermaphrodite
    /// </summary>
    public const string LiteralHermaphrodite = "H";

    /// <summary>
    /// Literal for code: HardCopy
    /// </summary>
    public const string LiteralHardCopy = "HC";

    /// <summary>
    /// Literal for code: HemodynamicWaveform
    /// </summary>
    public const string LiteralHemodynamicWaveform = "HD";

    /// <summary>
    /// Literal for code: HL7V2Operation
    /// </summary>
    public const string LiteralHL7V2Operation = "hl7-v2";

    /// <summary>
    /// Literal for code: HL7V3Operation
    /// </summary>
    public const string LiteralHL7V3Operation = "hl7-v3";

    /// <summary>
    /// Literal for code: IntraOralRadiography
    /// </summary>
    public const string LiteralIntraOralRadiography = "IO";

    /// <summary>
    /// Literal for code: IntravascularOpticalCoherenceTomography
    /// </summary>
    public const string LiteralIntravascularOpticalCoherenceTomography = "IVOCT";

    /// <summary>
    /// Literal for code: IntravascularUltrasound
    /// </summary>
    public const string LiteralIntravascularUltrasound = "IVUS";

    /// <summary>
    /// Literal for code: Keratometry
    /// </summary>
    public const string LiteralKeratometry = "KER";

    /// <summary>
    /// Literal for code: KeyObjectSelection
    /// </summary>
    public const string LiteralKeyObjectSelection = "KO";

    /// <summary>
    /// Literal for code: Lensometry
    /// </summary>
    public const string LiteralLensometry = "LEN";

    /// <summary>
    /// Literal for code: ProcedureLogging
    /// </summary>
    public const string LiteralProcedureLogging = "LOG";

    /// <summary>
    /// Literal for code: LaserSurfaceScan
    /// </summary>
    public const string LiteralLaserSurfaceScan = "LS";

    /// <summary>
    /// Literal for code: Male
    /// </summary>
    public const string LiteralMale = "M";

    /// <summary>
    /// Literal for code: MaleChangedToFemale
    /// </summary>
    public const string LiteralMaleChangedToFemale = "MC";

    /// <summary>
    /// Literal for code: MediaCreationDevice
    /// </summary>
    public const string LiteralMediaCreationDevice = "MCD";

    /// <summary>
    /// Literal for code: PortableMediaImporterEquipment
    /// </summary>
    public const string LiteralPortableMediaImporterEquipment = "MEDIM";

    /// <summary>
    /// Literal for code: Mammography
    /// </summary>
    public const string LiteralMammography = "MG";

    /// <summary>
    /// Literal for code: MalePseudohermaphrodite
    /// </summary>
    public const string LiteralMalePseudohermaphrodite = "MP";

    /// <summary>
    /// Literal for code: MagneticResonance
    /// </summary>
    public const string LiteralMagneticResonance = "MR";

    /// <summary>
    /// Literal for code: Nearline
    /// </summary>
    public const string LiteralNearline = "NEARLINE";

    /// <summary>
    /// Literal for code: NuclearMedicine
    /// </summary>
    public const string LiteralNuclearMedicine = "NM";

    /// <summary>
    /// Literal for code: OphthalmicAxialMeasurements
    /// </summary>
    public const string LiteralOphthalmicAxialMeasurements = "OAM";

    /// <summary>
    /// Literal for code: AnOperationOnOtherObjects
    /// </summary>
    public const string LiteralAnOperationOnOtherObjects = "object";

    /// <summary>
    /// Literal for code: OpticalCoherenceTomography
    /// </summary>
    public const string LiteralOpticalCoherenceTomography = "OCT";

    /// <summary>
    /// Literal for code: Offline
    /// </summary>
    public const string LiteralOffline = "OFFLINE";

    /// <summary>
    /// Literal for code: Online
    /// </summary>
    public const string LiteralOnline = "ONLINE";

    /// <summary>
    /// Literal for code: OphthalmicPhotography
    /// </summary>
    public const string LiteralOphthalmicPhotography = "OP";

    /// <summary>
    /// Literal for code: OphthalmicMapping
    /// </summary>
    public const string LiteralOphthalmicMapping = "OPM";

    /// <summary>
    /// Literal for code: OphthalmicRefraction
    /// </summary>
    public const string LiteralOphthalmicRefraction = "OPR";

    /// <summary>
    /// Literal for code: OphthalmicTomography
    /// </summary>
    public const string LiteralOphthalmicTomography = "OPT";

    /// <summary>
    /// Literal for code: OphthalmicVisualField
    /// </summary>
    public const string LiteralOphthalmicVisualField = "OPV";

    /// <summary>
    /// Literal for code: OpticalSurvaceScanner
    /// </summary>
    public const string LiteralOpticalSurvaceScanner = "OSS";

    /// <summary>
    /// Literal for code: OtherModality
    /// </summary>
    public const string LiteralOtherModality = "OT";

    /// <summary>
    /// Literal for code: PresentationState
    /// </summary>
    public const string LiteralPresentationState = "PR";

    /// <summary>
    /// Literal for code: HardCopyPrintServer
    /// </summary>
    public const string LiteralHardCopyPrintServer = "PRINT";

    /// <summary>
    /// Literal for code: PositronEmissionTomography
    /// </summary>
    public const string LiteralPositronEmissionTomography = "PT";

    /// <summary>
    /// Literal for code: PanoramicXRay
    /// </summary>
    public const string LiteralPanoramicXRay = "PX";

    /// <summary>
    /// Literal for code: Registration
    /// </summary>
    public const string LiteralRegistration = "REG";

    /// <summary>
    /// Literal for code: RESTfulOperation
    /// </summary>
    public const string LiteralRESTfulOperation = "rest";

    /// <summary>
    /// Literal for code: Radiofluoroscopy
    /// </summary>
    public const string LiteralRadiofluoroscopy = "RF";

    /// <summary>
    /// Literal for code: RadiographicImaging
    /// </summary>
    public const string LiteralRadiographicImaging = "RG";

    /// <summary>
    /// Literal for code: RadiationTherapyDevice
    /// </summary>
    public const string LiteralRadiationTherapyDevice = "RT";

    /// <summary>
    /// Literal for code: RadiotherapyDose
    /// </summary>
    public const string LiteralRadiotherapyDose = "RTDOSE";

    /// <summary>
    /// Literal for code: RadiotherapyImage
    /// </summary>
    public const string LiteralRadiotherapyImage = "RTIMAGE";

    /// <summary>
    /// Literal for code: RadiotherapyPlan
    /// </summary>
    public const string LiteralRadiotherapyPlan = "RTPLAN";

    /// <summary>
    /// Literal for code: RadiotherapyTreatmentRecord
    /// </summary>
    public const string LiteralRadiotherapyTreatmentRecord = "RTRECORD";

    /// <summary>
    /// Literal for code: RadiotherapyStructureSet
    /// </summary>
    public const string LiteralRadiotherapyStructureSet = "RTSTRUCT";

    /// <summary>
    /// Literal for code: Segmentation_2
    /// </summary>
    public const string LiteralSegmentation_2 = "SEG";

    /// <summary>
    /// Literal for code: SlideMicroscopy_2
    /// </summary>
    public const string LiteralSlideMicroscopy_2 = "SM";

    /// <summary>
    /// Literal for code: StereometricRelationship
    /// </summary>
    public const string LiteralStereometricRelationship = "SMR";

    /// <summary>
    /// Literal for code: StructuredReportDocument
    /// </summary>
    public const string LiteralStructuredReportDocument = "SR";

    /// <summary>
    /// Literal for code: SubjectiveRefraction
    /// </summary>
    public const string LiteralSubjectiveRefraction = "SRF";

    /// <summary>
    /// Literal for code: Thermography
    /// </summary>
    public const string LiteralThermography = "TG";

    /// <summary>
    /// Literal for code: UnknownSex
    /// </summary>
    public const string LiteralUnknownSex = "U";

    /// <summary>
    /// Literal for code: Unavailable
    /// </summary>
    public const string LiteralUnavailable = "UNAVAILABLE";

    /// <summary>
    /// Literal for code: Ultrasound
    /// </summary>
    public const string LiteralUltrasound = "US";

    /// <summary>
    /// Literal for code: VisualAcuity
    /// </summary>
    public const string LiteralVisualAcuity = "VA";

    /// <summary>
    /// Literal for code: VideoTapeDigitizerEquipment
    /// </summary>
    public const string LiteralVideoTapeDigitizerEquipment = "VIDD";

    /// <summary>
    /// Literal for code: Workstation
    /// </summary>
    public const string LiteralWorkstation = "WSD";

    /// <summary>
    /// Literal for code: XRayAngiography
    /// </summary>
    public const string LiteralXRayAngiography = "XA";

    /// <summary>
    /// Literal for code: ExternalCameraPhotography
    /// </summary>
    public const string LiteralExternalCameraPhotography = "XC";
  };
}
