// <auto-generated />
// Built from: hl7.fhir.r4b.core version: 4.3.0
  // Option: "NAMESPACE" = "fhirCsR4B"

using fhirCsR4B.Models;

namespace fhirCsR4B.ValueSets
{
  /// <summary>
  /// The composite scoring method of the measure.
  /// </summary>
  public static class CompositeMeasureScoringCodes
  {
    /// <summary>
    /// All-or-nothing scoring includes an individual in the numerator of the composite measure if they are in the numerators of all of the component measures in which they are in the denominator.
    /// </summary>
    public static readonly Coding AllOrNothing = new Coding
    {
      Code = "all-or-nothing",
      Display = "All-or-nothing",
      System = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring"
    };
    /// <summary>
    /// Linear scoring gives an individual a score based on the number of numerators in which they appear.
    /// </summary>
    public static readonly Coding Linear = new Coding
    {
      Code = "linear",
      Display = "Linear",
      System = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring"
    };
    /// <summary>
    /// Opportunity scoring combines the scores from component measures by combining the numerators and denominators for each component.
    /// </summary>
    public static readonly Coding Opportunity = new Coding
    {
      Code = "opportunity",
      Display = "Opportunity",
      System = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring"
    };
    /// <summary>
    /// Weighted scoring gives an individual a score based on a weighted factor for each component numerator in which they appear.
    /// </summary>
    public static readonly Coding Weighted = new Coding
    {
      Code = "weighted",
      Display = "Weighted",
      System = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring"
    };

    /// <summary>
    /// Literal for code: AllOrNothing
    /// </summary>
    public const string LiteralAllOrNothing = "all-or-nothing";

    /// <summary>
    /// Literal for code: CompositeMeasureScoringAllOrNothing
    /// </summary>
    public const string LiteralCompositeMeasureScoringAllOrNothing = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring#all-or-nothing";

    /// <summary>
    /// Literal for code: Linear
    /// </summary>
    public const string LiteralLinear = "linear";

    /// <summary>
    /// Literal for code: CompositeMeasureScoringLinear
    /// </summary>
    public const string LiteralCompositeMeasureScoringLinear = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring#linear";

    /// <summary>
    /// Literal for code: Opportunity
    /// </summary>
    public const string LiteralOpportunity = "opportunity";

    /// <summary>
    /// Literal for code: CompositeMeasureScoringOpportunity
    /// </summary>
    public const string LiteralCompositeMeasureScoringOpportunity = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring#opportunity";

    /// <summary>
    /// Literal for code: Weighted
    /// </summary>
    public const string LiteralWeighted = "weighted";

    /// <summary>
    /// Literal for code: CompositeMeasureScoringWeighted
    /// </summary>
    public const string LiteralCompositeMeasureScoringWeighted = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring#weighted";

    /// <summary>
    /// Dictionary for looking up CompositeMeasureScoring Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "all-or-nothing", AllOrNothing }, 
      { "http://terminology.hl7.org/CodeSystem/composite-measure-scoring#all-or-nothing", AllOrNothing }, 
      { "linear", Linear }, 
      { "http://terminology.hl7.org/CodeSystem/composite-measure-scoring#linear", Linear }, 
      { "opportunity", Opportunity }, 
      { "http://terminology.hl7.org/CodeSystem/composite-measure-scoring#opportunity", Opportunity }, 
      { "weighted", Weighted }, 
      { "http://terminology.hl7.org/CodeSystem/composite-measure-scoring#weighted", Weighted }, 
    };
  };
}
