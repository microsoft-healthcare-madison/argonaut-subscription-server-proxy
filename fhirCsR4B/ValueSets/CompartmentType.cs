// <auto-generated />
// Built from: hl7.fhir.r4b.core version: 4.3.0
  // Option: "NAMESPACE" = "fhirCsR4B"

using fhirCsR4B.Models;

namespace fhirCsR4B.ValueSets
{
  /// <summary>
  /// Which type a compartment definition describes.
  /// </summary>
  public static class CompartmentTypeCodes
  {
    /// <summary>
    /// The compartment definition is for the device compartment.
    /// </summary>
    public static readonly Coding Device = new Coding
    {
      Code = "Device",
      Display = "Device",
      System = "http://hl7.org/fhir/compartment-type"
    };
    /// <summary>
    /// The compartment definition is for the encounter compartment.
    /// </summary>
    public static readonly Coding Encounter = new Coding
    {
      Code = "Encounter",
      Display = "Encounter",
      System = "http://hl7.org/fhir/compartment-type"
    };
    /// <summary>
    /// The compartment definition is for the patient compartment.
    /// </summary>
    public static readonly Coding Patient = new Coding
    {
      Code = "Patient",
      Display = "Patient",
      System = "http://hl7.org/fhir/compartment-type"
    };
    /// <summary>
    /// The compartment definition is for the practitioner compartment.
    /// </summary>
    public static readonly Coding Practitioner = new Coding
    {
      Code = "Practitioner",
      Display = "Practitioner",
      System = "http://hl7.org/fhir/compartment-type"
    };
    /// <summary>
    /// The compartment definition is for the related-person compartment.
    /// </summary>
    public static readonly Coding RelatedPerson = new Coding
    {
      Code = "RelatedPerson",
      Display = "RelatedPerson",
      System = "http://hl7.org/fhir/compartment-type"
    };

    /// <summary>
    /// Literal for code: Device
    /// </summary>
    public const string LiteralDevice = "Device";

    /// <summary>
    /// Literal for code: CompartmentTypeDevice
    /// </summary>
    public const string LiteralCompartmentTypeDevice = "http://hl7.org/fhir/compartment-type#Device";

    /// <summary>
    /// Literal for code: Encounter
    /// </summary>
    public const string LiteralEncounter = "Encounter";

    /// <summary>
    /// Literal for code: CompartmentTypeEncounter
    /// </summary>
    public const string LiteralCompartmentTypeEncounter = "http://hl7.org/fhir/compartment-type#Encounter";

    /// <summary>
    /// Literal for code: Patient
    /// </summary>
    public const string LiteralPatient = "Patient";

    /// <summary>
    /// Literal for code: CompartmentTypePatient
    /// </summary>
    public const string LiteralCompartmentTypePatient = "http://hl7.org/fhir/compartment-type#Patient";

    /// <summary>
    /// Literal for code: Practitioner
    /// </summary>
    public const string LiteralPractitioner = "Practitioner";

    /// <summary>
    /// Literal for code: CompartmentTypePractitioner
    /// </summary>
    public const string LiteralCompartmentTypePractitioner = "http://hl7.org/fhir/compartment-type#Practitioner";

    /// <summary>
    /// Literal for code: RelatedPerson
    /// </summary>
    public const string LiteralRelatedPerson = "RelatedPerson";

    /// <summary>
    /// Literal for code: CompartmentTypeRelatedPerson
    /// </summary>
    public const string LiteralCompartmentTypeRelatedPerson = "http://hl7.org/fhir/compartment-type#RelatedPerson";

    /// <summary>
    /// Dictionary for looking up CompartmentType Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "Device", Device }, 
      { "http://hl7.org/fhir/compartment-type#Device", Device }, 
      { "Encounter", Encounter }, 
      { "http://hl7.org/fhir/compartment-type#Encounter", Encounter }, 
      { "Patient", Patient }, 
      { "http://hl7.org/fhir/compartment-type#Patient", Patient }, 
      { "Practitioner", Practitioner }, 
      { "http://hl7.org/fhir/compartment-type#Practitioner", Practitioner }, 
      { "RelatedPerson", RelatedPerson }, 
      { "http://hl7.org/fhir/compartment-type#RelatedPerson", RelatedPerson }, 
    };
  };
}
